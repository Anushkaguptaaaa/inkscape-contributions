--- src/ui/dialog/inkscape-preferences.cpp	(before formatting)
+++ src/ui/dialog/inkscape-preferences.cpp	(after formatting)
@@ -781,11 +781,10 @@
     try {
         INKSCAPE.colorizeprovider->load_from_data(css_str);
     } catch (const Gtk::CssProviderError &ex) {
-        g_critical("CSSProviderError::load_from_data(): failed to load '%s'\n(%s)", css_str.c_str(),
-                    ex.what().c_str());
+        g_critical("CSSProviderError::load_from_data(): failed to load '%s'\n(%s)", css_str.c_str(), ex.what().c_str());
     }
     Gtk::StyleContext::add_provider_for_screen(screen, INKSCAPE.colorizeprovider,
-                                                GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
+                                               GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
 }
 
 void InkscapePreferences::toggleSymbolic()
--- src/object/sp-style-elem.cpp	(before formatting)
+++ src/object/sp-style-elem.cpp	(after formatting)
@@ -203,14 +203,14 @@
     CRStatus const parse_status =
         cr_parser_parse_file (parser, reinterpret_cast<const guchar *>(import_file.c_str()), CR_UTF_8);
     if (parse_status == CR_OK) {
-        if(!document->getStyleSheet()) {
+        if (!document->getStyleSheet()) {
             // if the style is the first style sheet that we've seen, set the document's
             // first style sheet to this style and create a cascade object with it.
             document->setStyleSheet(stylesheet);
-            cr_cascade_set_sheet (document->getStyleCascade(), document->getStyleSheet(), ORIGIN_AUTHOR);
+            cr_cascade_set_sheet(document->getStyleCascade(), document->getStyleSheet(), ORIGIN_AUTHOR);
         } else {
             // If not the first, then chain up this style_sheet
-            cr_stylesheet_append_import (document->getStyleSheet(), stylesheet);
+            cr_stylesheet_append_import(document->getStyleSheet(), stylesheet);
         }
     } else {
         std::cerr << "import_style_cb: Could not parse: " << import_file << std::endl;
