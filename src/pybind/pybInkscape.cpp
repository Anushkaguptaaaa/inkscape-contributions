/* Generated by Cython 0.22 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_22"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
  #define __Pyx_PyFrozenSet_Size(s)         PyObject_Size(s)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
  #define __Pyx_PyFrozenSet_Size(s)         PySet_Size(s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#define __Pyx_void_to_None(void_result) (void_result, Py_INCREF(Py_None), Py_None)
#ifdef __cplusplus
template<typename T>
void __Pyx_call_destructor(T* x) {
    x->~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(T& ref) : ptr(&ref) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__pybInkscape
#define __PYX_HAVE_API__pybInkscape
#include <list>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "gtkmm/box.h"
#include "pygobject.h"
#include "xml/node-observer.h"
#include "pybind/pyb_NodeObserver_proxy.h"
#include <vector>
#include "xml/document.h"
#include "util/list.h"
#include "xml/node.h"
#include "xml/element-node.h"
#include "ui/view/view.h"
#include "desktop.h"
#include "selection.h"
#include "document.h"
#include "sp-object.h"
#include "2geom/coord.h"
#include "2geom/point.h"
#include "sp-item.h"
#include "sp-item-group.h"
#include "sp-root.h"
#include "sp-rect.h"
#include "sigc++/sigc++.h"
#include "pybind/pyb_slot_proxy.h"
#include "glibmm/ustring.h"
#include "document-undo.h"
#include "gtkmm/window.h"
#include "ui/widget/dock.h"
#include "ui/widget/dock-item.h"
#include "inkscape.h"
#include "string.h"
#include "stdio.h"
#include "pythread.h"
#include "verbs.h"
#include "helper/action.h"
#include "pybind/pyb_verb.h"
#include "inkgc/gc-core.h"
#include "pybind/pybgc.h"
#include "pybind/pybindtools.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "pybInkscape.pyx",
  "stringsource",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_11pybInkscape_PYSelection;
struct __pyx_obj_11pybInkscape_PYNode;
struct __pyx_obj_11pybInkscape_PYElementNode;
struct __pyx_obj_11pybInkscape_PYDocument;
struct __pyx_obj_11pybInkscape_PYSPObject;
struct __pyx_obj_11pybInkscape_PYSPItem;
struct __pyx_obj_11pybInkscape_PYSPRoot;
struct __pyx_obj_11pybInkscape_PYSPRect;
struct __pyx_obj_11pybInkscape_PYSPDocument;
struct __pyx_obj_11pybInkscape_PYDockItem;
struct __pyx_obj_11pybInkscape_PYDock;
struct __pyx_obj_11pybInkscape_PYView;
struct __pyx_obj_11pybInkscape_PYSPDesktop;
struct __pyx_obj_11pybInkscape_PYInkscape;
struct __pyx_obj_11pybInkscape_PYSPAction;
struct __pyx_obj_11pybInkscape_PYVerb;
struct __pyx_obj_11pybInkscape_PYNodeObserver;
struct __pyx_obj_11pybInkscape_Slot;
struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib;
struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr;
struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib;
struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr;

/* "pybSPDesktop.pxd":76
 *         pass
 * 
 * ctypedef connection sig_connection             # <<<<<<<<<<<<<<
 * ctypedef slot_type res_slot_type
 * 
 */
typedef sigc::connection __pyx_t_12pybSPDesktop_sig_connection;

/* "pybSPDesktop.pxd":77
 * 
 * ctypedef connection sig_connection
 * ctypedef slot_type res_slot_type             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "pybind/pyb_slot_proxy.h" namespace "Inkscape::pybind":
 */
typedef SPDocument::ResourcesChangedSignal::slot_type __pyx_t_12pybSPDesktop_res_slot_type;

/* "pybApplication.pxd":3
 * from libcpp.list cimport list as cpplist
 * from pybSPDesktop cimport SPDesktop#, res_slot_type
 * ctypedef SPDesktop *SPDesktop_p             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "inkscape.h" namespace "Inkscape":
 */
typedef SPDesktop *__pyx_t_14pybApplication_SPDesktop_p;
struct __pyx_opt_args_11pybInkscape_wrapnode;

/* "pybInkscape.pyx":876
 *     return co
 * 
 * cdef wrapnode(Node* node, doc, memoryerror=False):             # <<<<<<<<<<<<<<
 *     if node == NULL:
 *         if memoryerror:
 */
struct __pyx_opt_args_11pybInkscape_wrapnode {
  int __pyx_n;
  PyObject *memoryerror;
};

/* "pybInkscape.pyx":33
 * cdef class PYSPDocument
 * 
 * cdef class PYSelection(object):             # <<<<<<<<<<<<<<
 *     cdef Selection *_thisptr
 * 
 */
struct __pyx_obj_11pybInkscape_PYSelection {
  PyObject_HEAD
  Inkscape::Selection *_thisptr;
};


/* "pybInkscape.pyx":28
 * 
 * cdef class PYNodeObserver
 * cdef class PYNode             # <<<<<<<<<<<<<<
 * cdef class PYElementNode
 * cdef class PYDocument
 */
struct __pyx_obj_11pybInkscape_PYNode {
  PyObject_HEAD
  struct __pyx_vtabstruct_11pybInkscape_PYNode *__pyx_vtab;
  Inkscape::XML::Node *_thisptr;
  PyObject *_doc;
  PyObject *pystore;
};


/* "pybInkscape.pyx":29
 * cdef class PYNodeObserver
 * cdef class PYNode
 * cdef class PYElementNode             # <<<<<<<<<<<<<<
 * cdef class PYDocument
 * cdef class PYSPDocument
 */
struct __pyx_obj_11pybInkscape_PYElementNode {
  struct __pyx_obj_11pybInkscape_PYNode __pyx_base;
};


/* "pybInkscape.pyx":30
 * cdef class PYNode
 * cdef class PYElementNode
 * cdef class PYDocument             # <<<<<<<<<<<<<<
 * cdef class PYSPDocument
 * 
 */
struct __pyx_obj_11pybInkscape_PYDocument {
  struct __pyx_obj_11pybInkscape_PYNode __pyx_base;
  Inkscape::XML::Document *_back_doc;
  struct __pyx_obj_11pybInkscape_PYSPDocument *_pyspdoc;
};


/* "pybInkscape.pyx":422
 *         return self._pyspdoc
 * 
 * cdef class PYSPObject(GObject):             # <<<<<<<<<<<<<<
 *     @property
 *     def repr(self):
 */
struct __pyx_obj_11pybInkscape_PYSPObject {
  PyGObject __pyx_base;
};


/* "pybInkscape.pyx":493
 *         return _desc
 * 
 * cdef class PYSPItem(PYSPObject):             # <<<<<<<<<<<<<<
 *     def getCenter(self):
 *         _thisptr = <pybSPDesktop.SPItem *>pygobject_get(self)
 */
struct __pyx_obj_11pybInkscape_PYSPItem {
  struct __pyx_obj_11pybInkscape_PYSPObject __pyx_base;
};


/* "pybInkscape.pyx":499
 *         return [point[0],point[1]]
 * 
 * cdef class PYSPRoot(PYSPItem):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_11pybInkscape_PYSPRoot {
  struct __pyx_obj_11pybInkscape_PYSPItem __pyx_base;
};


/* "pybInkscape.pyx":502
 *     pass
 * 
 * cdef class PYSPRect(PYSPItem):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_11pybInkscape_PYSPRect {
  struct __pyx_obj_11pybInkscape_PYSPItem __pyx_base;
};


/* "pybInkscape.pyx":31
 * cdef class PYElementNode
 * cdef class PYDocument
 * cdef class PYSPDocument             # <<<<<<<<<<<<<<
 * 
 * cdef class PYSelection(object):
 */
struct __pyx_obj_11pybInkscape_PYSPDocument {
  PyObject_HEAD
  SPDocument *_thisptr;
};


/* "pybInkscape.pyx":565
 * cdef class PYDock
 * 
 * cdef class PYDockItem:             # <<<<<<<<<<<<<<
 *     cdef pybSPDesktop.DockItem *_thisptr
 * 
 */
struct __pyx_obj_11pybInkscape_PYDockItem {
  PyObject_HEAD
  Inkscape::UI::Widget::DockItem *_thisptr;
};


/* "pybInkscape.pyx":563
 * # associated vobx.
 * 
 * cdef class PYDock             # <<<<<<<<<<<<<<
 * 
 * cdef class PYDockItem:
 */
struct __pyx_obj_11pybInkscape_PYDock {
  PyObject_HEAD
  Inkscape::UI::Widget::Dock *_thisptr;
};


/* "pybInkscape.pyx":624
 *         return item
 * 
 * cdef class PYView:             # <<<<<<<<<<<<<<
 *     cdef pybSPDesktop.SPDesktop *_thisptr
 * 
 */
struct __pyx_obj_11pybInkscape_PYView {
  PyObject_HEAD
  SPDesktop *_thisptr;
};


/* "pybInkscape.pyx":631
 *         self._thisptr = <pybSPDesktop.SPDesktop *>PyCObject_AsVoidPtr(ptr)
 * 
 * cdef class PYSPDesktop(PYView):             # <<<<<<<<<<<<<<
 *     @property
 *     def selection(self):
 */
struct __pyx_obj_11pybInkscape_PYSPDesktop {
  struct __pyx_obj_11pybInkscape_PYView __pyx_base;
};


/* "pybInkscape.pyx":682
 *             return self._thisptr >= other._thisptr
 * 
 * cdef class PYInkscape(object):             # <<<<<<<<<<<<<<
 *     cdef Application *_thisptr
 *     #To add
 */
struct __pyx_obj_11pybInkscape_PYInkscape {
  PyObject_HEAD
  Inkscape::Application *_thisptr;
};


/* "pybInkscape.pyx":734
 *         Application.instance().exit()
 * 
 * cdef class PYSPAction:             # <<<<<<<<<<<<<<
 *     cdef pybVerb.SPAction *_thisptr
 * 
 */
struct __pyx_obj_11pybInkscape_PYSPAction {
  PyObject_HEAD
  struct SPAction *_thisptr;
};


/* "pybInkscape.pyx":753
 *         pybVerb.sp_action_set_sensitive(_action, sensitive)
 * 
 * cdef class PYVerb:             # <<<<<<<<<<<<<<
 *     cdef pybVerb.Verb *_thisptr
 * 
 */
struct __pyx_obj_11pybInkscape_PYVerb {
  PyObject_HEAD
  Inkscape::Verb *_thisptr;
};


/* "pybInkscape.pyx":27
 * 
 * 
 * cdef class PYNodeObserver             # <<<<<<<<<<<<<<
 * cdef class PYNode
 * cdef class PYElementNode
 */
struct __pyx_obj_11pybInkscape_PYNodeObserver {
  PyObject_HEAD
  Inkscape::pybind::NodeObserver_proxy *_proxy;
  struct __pyx_obj_11pybInkscape_PYDocument *_pydoc;
};


/* "pybInkscape.pyx":928
 *     print "Wed Jun 10 21:53 version"
 * 
 * cdef class Slot:             # <<<<<<<<<<<<<<
 *     cdef public object callback
 *     cdef pybSPDesktop.slot_proxy *_thisptr
 */
struct __pyx_obj_11pybInkscape_Slot {
  PyObject_HEAD
  PyObject *callback;
  Inkscape::pybind::slot_proxy *_thisptr;
};


/* "pybInkscape.pyx":916
 *     return wrapper
 * 
 * def unserattrib(attrib):             # <<<<<<<<<<<<<<
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 */
struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib {
  PyObject_HEAD
  PyObject *__pyx_v_attrib;
};


/* "pybInkscape.pyx":917
 * 
 * def unserattrib(attrib):
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)             # <<<<<<<<<<<<<<
 * 
 * def serattrib(d):
 */
struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr {
  PyObject_HEAD
  struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *__pyx_outer_scope;
  PyObject *__pyx_v_subattrib;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pybInkscape.pyx":919
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 * def serattrib(d):             # <<<<<<<<<<<<<<
 *     return ";".join(":".join(item) for item in d.items())
 * 
 */
struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib {
  PyObject_HEAD
  PyObject *__pyx_v_d;
};


/* "pybInkscape.pyx":920
 * 
 * def serattrib(d):
 *     return ";".join(":".join(item) for item in d.items())             # <<<<<<<<<<<<<<
 * 
 * def test():
 */
struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr {
  PyObject_HEAD
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *__pyx_outer_scope;
  PyObject *__pyx_v_item;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};



/* "pybInkscape.pyx":75
 *         return objs
 * 
 * cdef class PYNode(object):             # <<<<<<<<<<<<<<
 *     cdef Node *_thisptr
 *     cdef public object _doc
 */

struct __pyx_vtabstruct_11pybInkscape_PYNode {
  SPItem *(*_get_spitem)(struct __pyx_obj_11pybInkscape_PYNode *);
};
static struct __pyx_vtabstruct_11pybInkscape_PYNode *__pyx_vtabptr_11pybInkscape_PYNode;


/* "pybInkscape.pyx":337
 *         return [point[0],point[1]]
 * 
 * cdef class PYElementNode(PYNode):             # <<<<<<<<<<<<<<
 *     def __init__(self, bytes name, PYDocument doc, *args):
 *         node = doc._back_doc.createElement(<char *>name)
 */

struct __pyx_vtabstruct_11pybInkscape_PYElementNode {
  struct __pyx_vtabstruct_11pybInkscape_PYNode __pyx_base;
};
static struct __pyx_vtabstruct_11pybInkscape_PYElementNode *__pyx_vtabptr_11pybInkscape_PYElementNode;


/* "pybInkscape.pyx":362
 * #
 * 
 * cdef class PYDocument(PYNode):             # <<<<<<<<<<<<<<
 *     cdef Document *_back_doc
 *     cdef PYSPDocument _pyspdoc
 */

struct __pyx_vtabstruct_11pybInkscape_PYDocument {
  struct __pyx_vtabstruct_11pybInkscape_PYNode __pyx_base;
};
static struct __pyx_vtabstruct_11pybInkscape_PYDocument *__pyx_vtabptr_11pybInkscape_PYDocument;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb);
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb);

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);

static CYTHON_INLINE int __Pyx_PySequence_Contains(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

static int __Pyx_PyBytes_SingleTailmatch(PyObject* self, PyObject* arg, Py_ssize_t start,
                                         Py_ssize_t end, int direction)
{
    const char* self_ptr = PyBytes_AS_STRING(self);
    Py_ssize_t self_len = PyBytes_GET_SIZE(self);
    const char* sub_ptr;
    Py_ssize_t sub_len;
    int retval;
    Py_buffer view;
    view.obj = NULL;
    if ( PyBytes_Check(arg) ) {
        sub_ptr = PyBytes_AS_STRING(arg);
        sub_len = PyBytes_GET_SIZE(arg);
    }
#if PY_MAJOR_VERSION < 3
    else if ( PyUnicode_Check(arg) ) {
        return PyUnicode_Tailmatch(self, arg, start, end, direction);
    }
#endif
    else {
        if (unlikely(PyObject_GetBuffer(self, &view, PyBUF_SIMPLE) == -1))
            return -1;
        sub_ptr = (const char*) view.buf;
        sub_len = view.len;
    }
    if (end > self_len)
        end = self_len;
    else if (end < 0)
        end += self_len;
    if (end < 0)
        end = 0;
    if (start < 0)
        start += self_len;
    if (start < 0)
        start = 0;
    if (direction > 0) {
        if (end-sub_len > start)
            start = end - sub_len;
    }
    if (start + sub_len <= end)
        retval = !memcmp(self_ptr+start, sub_ptr, (size_t)sub_len);
    else
        retval = 0;
    if (view.obj)
        PyBuffer_Release(&view);
    return retval;
}
static int __Pyx_PyBytes_Tailmatch(PyObject* self, PyObject* substr, Py_ssize_t start,
                                   Py_ssize_t end, int direction)
{
    if (unlikely(PyTuple_Check(substr))) {
        Py_ssize_t i, count = PyTuple_GET_SIZE(substr);
        for (i = 0; i < count; i++) {
            int result;
#if CYTHON_COMPILING_IN_CPYTHON
            result = __Pyx_PyBytes_SingleTailmatch(self, PyTuple_GET_ITEM(substr, i),
                                                   start, end, direction);
#else
            PyObject* sub = PySequence_GetItem(substr, i);
            if (unlikely(!sub)) return -1;
            result = __Pyx_PyBytes_SingleTailmatch(self, sub, start, end, direction);
            Py_DECREF(sub);
#endif
            if (result) {
                return result;
            }
        }
        return 0;
    }
    return __Pyx_PyBytes_SingleTailmatch(self, substr, start, end, direction);
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) : \
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

#if PY_MAJOR_VERSION < 3
#define __Pyx_PyString_Join __Pyx_PyBytes_Join
#define __Pyx_PyBaseString_Join(s, v) (PyUnicode_CheckExact(s) ? PyUnicode_Join(s, v) : __Pyx_PyBytes_Join(s, v))
#else
#define __Pyx_PyString_Join PyUnicode_Join
#define __Pyx_PyBaseString_Join PyUnicode_Join
#endif
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION < 3
    #define __Pyx_PyBytes_Join _PyString_Join
    #else
    #define __Pyx_PyBytes_Join _PyBytes_Join
    #endif
#else
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values);
#endif

#include <string.h>

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE GQuark __Pyx_PyInt_As_GQuark(PyObject *);

static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

#define __Pyx_Generator_USED
#include <structmember.h>
#include <frameobject.h>
typedef PyObject *(*__pyx_generator_body_t)(PyObject *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_generator_body_t body;
    PyObject *closure;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    int resume_label;
    char is_running;
} __pyx_GeneratorObject;
static __pyx_GeneratorObject *__Pyx_Generator_New(__pyx_generator_body_t body,
                                                  PyObject *closure, PyObject *name, PyObject *qualname);
static int __pyx_Generator_init(void);
static int __Pyx_Generator_clear(PyObject* self);
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue);
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue) PyGen_FetchStopIterationValue(pvalue)
#endif

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static SPItem *__pyx_f_11pybInkscape_6PYNode__get_spitem(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto*/

/* Module declarations from 'libcpp.list' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'gobject' */

/* Module declarations from 'pygobject' */
static PyTypeObject *__pyx_ptype_9pygobject_GObject = 0;

/* Module declarations from 'pybNodeObserver' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'pybNode' */

/* Module declarations from 'pybDocument' */

/* Module declarations from 'pybXML' */

/* Module declarations from 'pybView' */

/* Module declarations from 'pybSelection' */

/* Module declarations from 'pybSPDesktop' */

/* Module declarations from 'pybApplication' */

/* Module declarations from 'cpython.version' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'pybVerb' */

/* Module declarations from 'pybgc' */

/* Module declarations from 'pybindtools' */

/* Module declarations from 'pybInkscape' */
static PyTypeObject *__pyx_ptype_11pybInkscape_PYNodeObserver = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYNode = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYElementNode = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYDocument = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSPDocument = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSelection = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSPObject = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSPItem = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSPRoot = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSPRect = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYDock = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYDockItem = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYView = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSPDesktop = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYInkscape = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYSPAction = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_PYVerb = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape_Slot = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape___pyx_scope_struct__unserattrib = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape___pyx_scope_struct_1_genexpr = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape___pyx_scope_struct_2_serattrib = 0;
static PyTypeObject *__pyx_ptype_11pybInkscape___pyx_scope_struct_3_genexpr = 0;
static struct _PyGObject_Functions *__pyx_v_11pybInkscape_gobj_api;
static PyObject *__pyx_f_11pybInkscape_wrapnode(Inkscape::XML::Node *, PyObject *, struct __pyx_opt_args_11pybInkscape_wrapnode *__pyx_optional_args); /*proto*/
static PyObject *__pyx_f_11pybInkscape_wrapobj(SPObject *); /*proto*/
static PyObject *__pyx_f_11pybInkscape_wrapobjtonode(SPObject *); /*proto*/
static PyObject *__pyx_f_11pybInkscape_wrapdoc(SPDocument *); /*proto*/
static PyObject *__pyx_f_11pybInkscape_wrapsel(Inkscape::Selection *); /*proto*/
static PyObject *__pyx_f_11pybInkscape__create_inkscape_wrapper(void); /*proto*/
static PyObject *__pyx_convert_vector_to_py_const__gchar___2a_(const std::vector<const gchar *>  &); /*proto*/
#define __Pyx_MODULE_NAME "pybInkscape"
int __pyx_module_is_main_pybInkscape = 0;

/* Implementation of 'pybInkscape' */
static PyObject *__pyx_builtin_property;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_MemoryError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_range;
static int __pyx_pf_11pybInkscape_11PYSelection___cinit__(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, PyObject *__pyx_v_ptr_co); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSelection_2toggle(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSelection_4clear(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSelection_6add(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSelection_8remove(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSelection_10desktop(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSelection_12activeContext(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSelection_14list(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode___init__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_ptr_co, struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc, CYTHON_UNUSED PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_2type(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_4name(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_6content(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_8attribute(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_10__getitem__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_12get(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode_14__setitem__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode_16__delitem__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode_18__contains__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_20__richcmp__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_other, PyObject *__pyx_v_op); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_22keys(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_24delete(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_v_interactive); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_26setPosition(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, int __pyx_v_pos); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_28setContent(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_30setAttribute(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value, int __pyx_v_interactive); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_32setwrapper(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_wrapper); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_34getwrapper(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_36doc(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_38root(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_40parent(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_42next(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_44firstChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_46lastChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_48children(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_50nthChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, int __pyx_v_index); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_52addChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_after); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_54appendChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_56removeChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_58changeOrder(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_after); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_60mergeFrom(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_src, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_62overwriteWith(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_src); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_64addObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_66removeObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_68addSubtreeObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_70removeSubtreeObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_72duplicate(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_74getCenter(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_4_doc___get__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode_4_doc_2__set__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode_4_doc_4__del__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYNode_7pystore___get__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode_7pystore_2__set__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11pybInkscape_6PYNode_7pystore_4__del__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_13PYElementNode___init__(struct __pyx_obj_11pybInkscape_PYElementNode *__pyx_v_self, PyObject *__pyx_v_name, struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc, CYTHON_UNUSED PyObject *__pyx_v_args); /* proto */
static int __pyx_pf_11pybInkscape_10PYDocument___cinit__(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_ptr_co, CYTHON_UNUSED PyObject *__pyx_v_node, struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_pyspdoc, PyObject *__pyx_v_doc_co, CYTHON_UNUSED PyObject *__pyx_v_args); /* proto */
static int __pyx_pf_11pybInkscape_10PYDocument_2__init__(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_ptr_co, CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_4root(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_6inTransaction(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_8beginTransaction(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_10rollback(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_12commit(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_14createElement(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_16createTextNode(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_content); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_18createComment(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_content); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_20createPI(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_target, PyObject *__pyx_v_content); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDocument_22spdoc(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_repr(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_2_get_pyspdoc(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_4firstChild(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_6lastChild(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_8getNext(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_10getPrev(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_12hasChildren(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_14getId(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_16label(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_18title(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_20desc(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_8PYSPItem_getCenter(struct __pyx_obj_11pybInkscape_PYSPItem *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_12PYSPDocument___cinit__(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_ptr_co); /* proto */
static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_2rdoc(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_4root(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_6connect_layers_changed(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_callback); /* proto */
static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_8done(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_event_type, PyObject *__pyx_v_description); /* proto */
static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_10maybe_undo(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_event_type, PyObject *__pyx_v_description); /* proto */
static int __pyx_pf_11pybInkscape_10PYDockItem___cinit__(struct __pyx_obj_11pybInkscape_PYDockItem *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_dock, PyObject *__pyx_v_name, PyObject *__pyx_v_long_name, PyObject *__pyx_v_icon_name, int __pyx_v_state); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDockItem_2gobj(struct __pyx_obj_11pybInkscape_PYDockItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYDockItem_4get_vbox(struct __pyx_obj_11pybInkscape_PYDockItem *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_6PYDock___cinit__(struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_self, PyObject *__pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYDock_2new_item(struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_long_name, PyObject *__pyx_v_icon_name, int __pyx_v_state); /* proto */
static int __pyx_pf_11pybInkscape_6PYView___cinit__(struct __pyx_obj_11pybInkscape_PYView *__pyx_v_self, PyObject *__pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_selection(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_2doc(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_4getToplevel(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_6getDock(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_8setCurrentLayer(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_10currentLayer(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self); /* proto */
static void __pyx_pf_11pybInkscape_11PYSPDesktop_12__dealloc__(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_14__richcmp__(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_other, PyObject *__pyx_v_op); /* proto */
static int __pyx_pf_11pybInkscape_10PYInkscape___init__(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_ptr_co, CYTHON_UNUSED PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_2get_all_desktops(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_4active_document(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_6active_desktop(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_8refresh_display(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_10exit(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_10PYSPAction___cinit__(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self, PyObject *__pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPAction_2perform(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPAction_4set_active(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self, int __pyx_v_active); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10PYSPAction_6set_sensitive(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self, int __pyx_v_sensitive); /* proto */
static int __pyx_pf_11pybInkscape_6PYVerb___cinit__(struct __pyx_obj_11pybInkscape_PYVerb *__pyx_v_self, PyObject *__pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6PYVerb_2get_action(struct __pyx_obj_11pybInkscape_PYVerb *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYView *__pyx_v_view); /* proto */
static PyObject *__pyx_pf_11pybInkscape_verb_getbyid(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v__id); /* proto */
static int __pyx_pf_11pybInkscape_14PYNodeObserver___cinit__(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self); /* proto */
static void __pyx_pf_11pybInkscape_14PYNodeObserver_2__dealloc__(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_4_notify_add_observer(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_6_notifyChildAdded(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_child, PyObject *__pyx_v_prev); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_8_notifyChildRemoved(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_child, PyObject *__pyx_v_prev); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_10_notifyChildOrderChanged(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_child, PyObject *__pyx_v_old_prev, PyObject *__pyx_v_new_prev); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_12_notifyContentChanged(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_old_content, PyObject *__pyx_v_new_content); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_14_notifyAttributeChanged(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_name, PyObject *__pyx_v_old_value, PyObject *__pyx_v_new_value); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_16notifyChildAdded(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_child, CYTHON_UNUSED PyObject *__pyx_v_prev); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_18notifyChildRemoved(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_child, CYTHON_UNUSED PyObject *__pyx_v_prev); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_20notifyChildOrderChanged(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_child, CYTHON_UNUSED PyObject *__pyx_v_old_prev, CYTHON_UNUSED PyObject *__pyx_v_new_prev); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_22notifyContentChanged(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_old_content, CYTHON_UNUSED PyObject *__pyx_v_new_content); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_24notifyAttributeChanged(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_old_value, CYTHON_UNUSED PyObject *__pyx_v_new_value); /* proto */
static PyObject *__pyx_pf_11pybInkscape_2GPointer_2_PYSPDesktop(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_11pybInkscape_4GObjfromptr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_11pybInkscape_11unserattrib_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_6unserattrib(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_attrib); /* proto */
static PyObject *__pyx_pf_11pybInkscape_9serattrib_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_8serattrib(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_d); /* proto */
static PyObject *__pyx_pf_11pybInkscape_10test(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_12version(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static int __pyx_pf_11pybInkscape_4Slot___cinit__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_signal_name, PyObject *__pyx_v_callback); /* proto */
static void __pyx_pf_11pybInkscape_4Slot_2__dealloc__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_4Slot_4desktop_callback(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_desktop_co); /* proto */
static PyObject *__pyx_pf_11pybInkscape_4Slot_6selection_callback(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_selection_co, CYTHON_UNUSED PyObject *__pyx_v_flags); /* proto */
static PyObject *__pyx_pf_11pybInkscape_4Slot_8callback___get__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self); /* proto */
static int __pyx_pf_11pybInkscape_4Slot_8callback_2__set__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11pybInkscape_4Slot_8callback_4__del__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pybInkscape_14connect(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_signal_name, PyObject *__pyx_v_callback); /* proto */
static PyObject *__pyx_tp_new_11pybInkscape_PYNodeObserver(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYNode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYElementNode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYDocument(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSPDocument(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSelection(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSPObject(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSPItem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSPRoot(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSPRect(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYDock(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYDockItem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYView(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSPDesktop(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYInkscape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYSPAction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_PYVerb(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape_Slot(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct__unserattrib(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct_2_serattrib(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct_3_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_d[] = "d";
static char __pyx_k__3[] = "";
static char __pyx_k__8[] = ";";
static char __pyx_k_co[] = "co";
static char __pyx_k_id[] = "_id";
static char __pyx_k__10[] = ":";
static char __pyx_k_doc[] = "doc";
static char __pyx_k_end[] = "end";
static char __pyx_k_get[] = "get";
static char __pyx_k_key[] = "key";
static char __pyx_k_ptr[] = "ptr";
static char __pyx_k_src[] = "src";
static char __pyx_k_args[] = "args";
static char __pyx_k_dock[] = "dock";
static char __pyx_k_file[] = "file";
static char __pyx_k_init[] = "__init__";
static char __pyx_k_join[] = "join";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_name[] = "name";
static char __pyx_k_next[] = "next";
static char __pyx_k_node[] = "node";
static char __pyx_k_prev[] = "prev";
static char __pyx_k_rdoc[] = "rdoc";
static char __pyx_k_repr[] = "_repr";
static char __pyx_k_root[] = "root";
static char __pyx_k_send[] = "send";
static char __pyx_k_test[] = "test";
static char __pyx_k_verb[] = "_verb";
static char __pyx_k_after[] = "after";
static char __pyx_k_child[] = "child";
static char __pyx_k_close[] = "close";
static char __pyx_k_flags[] = "flags";
static char __pyx_k_items[] = "items";
static char __pyx_k_layer[] = "layer";
static char __pyx_k_print[] = "print";
static char __pyx_k_range[] = "range";
static char __pyx_k_spdoc[] = "spdoc";
static char __pyx_k_split[] = "split";
static char __pyx_k_state[] = "state";
static char __pyx_k_style[] = "style.";
static char __pyx_k_throw[] = "throw";
static char __pyx_k_value[] = "value";
static char __pyx_k_attrib[] = "attrib";
static char __pyx_k_doc_co[] = "doc_co";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_parent[] = "parent";
static char __pyx_k_ptr_co[] = "ptr_co";
static char __pyx_k_pybXML[] = "pybXML";
static char __pyx_k_repr_2[] = "repr";
static char __pyx_k_target[] = "target";
static char __pyx_k_test_2[] = "__test__";
static char __pyx_k_PI_NODE[] = "PI_NODE";
static char __pyx_k_connect[] = "connect";
static char __pyx_k_content[] = "content";
static char __pyx_k_default[] = "default";
static char __pyx_k_desktop[] = "desktop";
static char __pyx_k_genexpr[] = "genexpr";
static char __pyx_k_getitem[] = "__getitem__";
static char __pyx_k_gobject[] = "gobject";
static char __pyx_k_pyspdoc[] = "pyspdoc";
static char __pyx_k_style_2[] = "style";
static char __pyx_k_verb_co[] = "_verb_co";
static char __pyx_k_version[] = "version";
static char __pyx_k_wrapper[] = "wrapper";
static char __pyx_k_KeyError[] = "KeyError";
static char __pyx_k_callback[] = "callback";
static char __pyx_k_children[] = "children";
static char __pyx_k_inkscape[] = "inkscape";
static char __pyx_k_new_prev[] = "new_prev";
static char __pyx_k_old_prev[] = "old_prev";
static char __pyx_k_property[] = "property";
static char __pyx_k_TEXT_NODE[] = "TEXT_NODE";
static char __pyx_k_attribute[] = "attribute";
static char __pyx_k_c_desktop[] = "c_desktop";
static char __pyx_k_icon_name[] = "icon_name";
static char __pyx_k_long_name[] = "long_name";
static char __pyx_k_new_value[] = "new_value";
static char __pyx_k_old_value[] = "old_value";
static char __pyx_k_selection[] = "selection";
static char __pyx_k_serattrib[] = "serattrib";
static char __pyx_k_shut_down[] = "shut_down";
static char __pyx_k_UNATTACHED[] = "UNATTACHED";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_event_type[] = "event_type";
static char __pyx_k_firstChild[] = "firstChild";
static char __pyx_k_getwrapper[] = "getwrapper";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_setwrapper[] = "setwrapper";
static char __pyx_k_startswith[] = "startswith";
static char __pyx_k_GObjfromptr[] = "GObjfromptr";
static char __pyx_k_MemoryError[] = "MemoryError";
static char __pyx_k_child_added[] = "child_added";
static char __pyx_k_description[] = "description";
static char __pyx_k_get_pyspdoc[] = "_get_pyspdoc";
static char __pyx_k_interactive[] = "interactive";
static char __pyx_k_new_content[] = "new_content";
static char __pyx_k_old_content[] = "old_content";
static char __pyx_k_pybInkscape[] = "pybInkscape";
static char __pyx_k_signal_name[] = "signal_name";
static char __pyx_k_unserattrib[] = "unserattrib";
static char __pyx_k_COMMENT_NODE[] = "COMMENT_NODE";
static char __pyx_k_DOCKED_STATE[] = "DOCKED_STATE";
static char __pyx_k_ELEMENT_NODE[] = "ELEMENT_NODE";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_dialogs_hide[] = "dialogs_hide";
static char __pyx_k_selection_co[] = "selection_co";
static char __pyx_k_setAttribute[] = "setAttribute";
static char __pyx_k_signal_names[] = "signal_names";
static char __pyx_k_verb_getbyid[] = "verb_getbyid";
static char __pyx_k_DOCUMENT_NODE[] = "DOCUMENT_NODE";
static char __pyx_k_No_such_key_s[] = "No such key: %s";
static char __pyx_k_PyGObject_API[] = "_PyGObject_API";
static char __pyx_k_Testing_1_2_3[] = "Testing 1, 2, 3";
static char __pyx_k_child_removed[] = "child_removed";
static char __pyx_k_selection_set[] = "selection_set";
static char __pyx_k_set_selection[] = "set_selection";
static char __pyx_k_unknown_value[] = "unknown value";
static char __pyx_k_FLOATING_STATE[] = "FLOATING_STATE";
static char __pyx_k_active_desktop[] = "active_desktop";
static char __pyx_k_dialogs_unhide[] = "dialogs_unhide";
static char __pyx_k_active_document[] = "active_document";
static char __pyx_k_content_changed[] = "content_changed";
static char __pyx_k_external_change[] = "external_change";
static char __pyx_k_activate_desktop[] = "activate_desktop";
static char __pyx_k_change_selection[] = "change_selection";
static char __pyx_k_desktop_callback[] = "desktop_callback";
static char __pyx_k_modify_selection[] = "modify_selection";
static char __pyx_k_set_eventcontext[] = "set_eventcontext";
static char __pyx_k_attribute_changed[] = "attribute_changed";
static char __pyx_k_selection_changed[] = "selection_changed";
static char __pyx_k_ITEM_ST_UNATTACHED[] = "ITEM_ST_UNATTACHED";
static char __pyx_k_deactivate_desktop[] = "deactivate_desktop";
static char __pyx_k_selection_callback[] = "selection_callback";
static char __pyx_k_NotImplementedError[] = "NotImplementedError";
static char __pyx_k_can_not_create_node[] = "can not create node";
static char __pyx_k_change_subselection[] = "change_subselection";
static char __pyx_k_child_order_changed[] = "child_order_changed";
static char __pyx_k_notify_add_observer[] = "_notify_add_observer";
static char __pyx_k_ITEM_ST_DOCKED_STATE[] = "ITEM_ST_DOCKED_STATE";
static char __pyx_k_subselection_changed[] = "subselection_changed";
static char __pyx_k_GPointer_2_PYSPDesktop[] = "GPointer_2_PYSPDesktop";
static char __pyx_k_ITEM_ST_FLOATING_STATE[] = "ITEM_ST_FLOATING_STATE";
static char __pyx_k_Wed_Jun_10_21_53_version[] = "Wed Jun 10 21:53 version";
static char __pyx_k_cannot_create_an_element[] = "cannot create an element";
static char __pyx_k_serattrib_locals_genexpr[] = "serattrib.<locals>.genexpr";
static char __pyx_k_unserattrib_locals_genexpr[] = "unserattrib.<locals>.genexpr";
static char __pyx_k_mnt_external_aur_inkscape_bzr_s[] = "/mnt/external/aur/inkscape-bzr/src/inkscape/src/pybind/pybInkscape.pyx";
static char __pyx_k_an_PYNodeObserver_can_not_be_add[] = "an PYNodeObserver can not be added for nodes of different documents";
static char __pyx_k_notifyAttributeChanged_is_not_im[] = "notifyAttributeChanged is not implemented";
static char __pyx_k_notifyChildAdded_is_not_implemen[] = "notifyChildAdded is not implemented";
static char __pyx_k_notifyChildOrderChanged_is_not_i[] = "notifyChildOrderChanged is not implemented";
static char __pyx_k_notifyChildRemoved_is_not_implem[] = "notifyChildRemoved is not implemented";
static char __pyx_k_notifyContentChanged_is_not_impl[] = "notifyContentChanged is not implemented";
static PyObject *__pyx_n_s_COMMENT_NODE;
static PyObject *__pyx_n_s_DOCKED_STATE;
static PyObject *__pyx_n_s_DOCUMENT_NODE;
static PyObject *__pyx_n_s_ELEMENT_NODE;
static PyObject *__pyx_n_s_FLOATING_STATE;
static PyObject *__pyx_n_s_GObjfromptr;
static PyObject *__pyx_n_s_GPointer_2_PYSPDesktop;
static PyObject *__pyx_n_s_ITEM_ST_DOCKED_STATE;
static PyObject *__pyx_n_s_ITEM_ST_FLOATING_STATE;
static PyObject *__pyx_n_s_ITEM_ST_UNATTACHED;
static PyObject *__pyx_n_s_KeyError;
static PyObject *__pyx_n_s_MemoryError;
static PyObject *__pyx_kp_s_No_such_key_s;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_PI_NODE;
static PyObject *__pyx_n_s_PyGObject_API;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_TEXT_NODE;
static PyObject *__pyx_kp_s_Testing_1_2_3;
static PyObject *__pyx_n_s_UNATTACHED;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_s_Wed_Jun_10_21_53_version;
static PyObject *__pyx_kp_s__10;
static PyObject *__pyx_kp_s__3;
static PyObject *__pyx_kp_s__8;
static PyObject *__pyx_n_s_activate_desktop;
static PyObject *__pyx_n_s_active_desktop;
static PyObject *__pyx_n_s_active_document;
static PyObject *__pyx_n_s_after;
static PyObject *__pyx_kp_s_an_PYNodeObserver_can_not_be_add;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_attrib;
static PyObject *__pyx_n_s_attribute;
static PyObject *__pyx_n_s_attribute_changed;
static PyObject *__pyx_n_s_c_desktop;
static PyObject *__pyx_n_s_callback;
static PyObject *__pyx_kp_s_can_not_create_node;
static PyObject *__pyx_kp_s_cannot_create_an_element;
static PyObject *__pyx_n_s_change_selection;
static PyObject *__pyx_n_s_change_subselection;
static PyObject *__pyx_n_s_child;
static PyObject *__pyx_n_s_child_added;
static PyObject *__pyx_n_s_child_order_changed;
static PyObject *__pyx_n_s_child_removed;
static PyObject *__pyx_n_s_children;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_co;
static PyObject *__pyx_n_s_connect;
static PyObject *__pyx_n_s_content;
static PyObject *__pyx_n_s_content_changed;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_deactivate_desktop;
static PyObject *__pyx_n_s_default;
static PyObject *__pyx_n_s_description;
static PyObject *__pyx_n_s_desktop;
static PyObject *__pyx_n_s_desktop_callback;
static PyObject *__pyx_n_s_dialogs_hide;
static PyObject *__pyx_n_s_dialogs_unhide;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_doc_co;
static PyObject *__pyx_n_s_dock;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_event_type;
static PyObject *__pyx_n_s_external_change;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_firstChild;
static PyObject *__pyx_n_s_flags;
static PyObject *__pyx_n_s_genexpr;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_get_pyspdoc;
static PyObject *__pyx_n_s_getitem;
static PyObject *__pyx_n_s_getwrapper;
static PyObject *__pyx_n_s_gobject;
static PyObject *__pyx_n_s_icon_name;
static PyObject *__pyx_n_s_id;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_inkscape;
static PyObject *__pyx_n_s_interactive;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_join;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_long_name;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_kp_s_mnt_external_aur_inkscape_bzr_s;
static PyObject *__pyx_n_s_modify_selection;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_new_content;
static PyObject *__pyx_n_s_new_prev;
static PyObject *__pyx_n_s_new_value;
static PyObject *__pyx_n_s_next;
static PyObject *__pyx_n_s_node;
static PyObject *__pyx_kp_s_notifyAttributeChanged_is_not_im;
static PyObject *__pyx_kp_s_notifyChildAdded_is_not_implemen;
static PyObject *__pyx_kp_s_notifyChildOrderChanged_is_not_i;
static PyObject *__pyx_kp_s_notifyChildRemoved_is_not_implem;
static PyObject *__pyx_kp_s_notifyContentChanged_is_not_impl;
static PyObject *__pyx_n_s_notify_add_observer;
static PyObject *__pyx_n_s_old_content;
static PyObject *__pyx_n_s_old_prev;
static PyObject *__pyx_n_s_old_value;
static PyObject *__pyx_n_s_parent;
static PyObject *__pyx_n_s_prev;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_property;
static PyObject *__pyx_n_s_ptr;
static PyObject *__pyx_n_s_ptr_co;
static PyObject *__pyx_n_s_pybInkscape;
static PyObject *__pyx_n_s_pybXML;
static PyObject *__pyx_n_s_pyspdoc;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rdoc;
static PyObject *__pyx_n_s_repr;
static PyObject *__pyx_n_s_repr_2;
static PyObject *__pyx_n_s_root;
static PyObject *__pyx_n_s_selection;
static PyObject *__pyx_n_s_selection_callback;
static PyObject *__pyx_n_s_selection_changed;
static PyObject *__pyx_n_s_selection_co;
static PyObject *__pyx_n_s_selection_set;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_serattrib;
static PyObject *__pyx_n_s_serattrib_locals_genexpr;
static PyObject *__pyx_n_s_setAttribute;
static PyObject *__pyx_n_s_set_eventcontext;
static PyObject *__pyx_n_s_set_selection;
static PyObject *__pyx_n_s_setwrapper;
static PyObject *__pyx_n_s_shut_down;
static PyObject *__pyx_n_s_signal_name;
static PyObject *__pyx_n_s_signal_names;
static PyObject *__pyx_n_s_spdoc;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_src;
static PyObject *__pyx_n_s_startswith;
static PyObject *__pyx_n_s_state;
static PyObject *__pyx_kp_s_style;
static PyObject *__pyx_n_s_style_2;
static PyObject *__pyx_n_s_subselection_changed;
static PyObject *__pyx_n_s_target;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_test_2;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_kp_s_unknown_value;
static PyObject *__pyx_n_s_unserattrib;
static PyObject *__pyx_n_s_unserattrib_locals_genexpr;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_verb;
static PyObject *__pyx_n_s_verb_co;
static PyObject *__pyx_n_s_verb_getbyid;
static PyObject *__pyx_n_s_version;
static PyObject *__pyx_n_s_wrapper;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_codeobj__13;
static PyObject *__pyx_codeobj__15;
static PyObject *__pyx_codeobj__17;
static PyObject *__pyx_codeobj__19;
static PyObject *__pyx_codeobj__21;
static PyObject *__pyx_codeobj__22;
static PyObject *__pyx_codeobj__23;
static PyObject *__pyx_codeobj__25;

/* "pybInkscape.pyx":36
 *     cdef Selection *_thisptr
 * 
 *     def __cinit__(self, ptr_co):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr_co)
 *         sel = <Selection *>PyCObject_AsVoidPtr(ptr_co)
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_11PYSelection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_11PYSelection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr_co = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr_co,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr_co)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr_co = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSelection.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection___cinit__(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self), __pyx_v_ptr_co);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_11PYSelection___cinit__(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, PyObject *__pyx_v_ptr_co) {
  Inkscape::Selection *__pyx_v_sel;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":37
 * 
 *     def __cinit__(self, ptr_co):
 *         assert PyCObject_Check(ptr_co)             # <<<<<<<<<<<<<<
 *         sel = <Selection *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = sel
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(PyCObject_Check(__pyx_v_ptr_co) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "pybInkscape.pyx":38
 *     def __cinit__(self, ptr_co):
 *         assert PyCObject_Check(ptr_co)
 *         sel = <Selection *>PyCObject_AsVoidPtr(ptr_co)             # <<<<<<<<<<<<<<
 *         self._thisptr = sel
 * 
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_ptr_co); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_sel = ((Inkscape::Selection *)__pyx_t_1);

  /* "pybInkscape.pyx":39
 *         assert PyCObject_Check(ptr_co)
 *         sel = <Selection *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = sel             # <<<<<<<<<<<<<<
 * 
 *     def toggle(self, PYSPObject node):
 */
  __pyx_v_self->_thisptr = __pyx_v_sel;

  /* "pybInkscape.pyx":36
 *     cdef Selection *_thisptr
 * 
 *     def __cinit__(self, ptr_co):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr_co)
 *         sel = <Selection *>PyCObject_AsVoidPtr(ptr_co)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYSelection.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":41
 *         self._thisptr = sel
 * 
 *     def toggle(self, PYSPObject node):             # <<<<<<<<<<<<<<
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(node)
 *         self._thisptr.toggle(<pybSPDesktop.SPObject *>spobj)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_3toggle(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_3toggle(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("toggle (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_11pybInkscape_PYSPObject, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection_2toggle(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_node));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSelection_2toggle(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_node) {
  SPObject *__pyx_v_spobj;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("toggle", 0);

  /* "pybInkscape.pyx":42
 * 
 *     def toggle(self, PYSPObject node):
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(node)             # <<<<<<<<<<<<<<
 *         self._thisptr.toggle(<pybSPDesktop.SPObject *>spobj)
 * 
 */
  __pyx_v_spobj = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_node)));

  /* "pybInkscape.pyx":43
 *     def toggle(self, PYSPObject node):
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(node)
 *         self._thisptr.toggle(<pybSPDesktop.SPObject *>spobj)             # <<<<<<<<<<<<<<
 * 
 *     def clear(self):
 */
  __pyx_v_self->_thisptr->toggle(((SPObject *)((SPObject *)__pyx_v_spobj)));

  /* "pybInkscape.pyx":41
 *         self._thisptr = sel
 * 
 *     def toggle(self, PYSPObject node):             # <<<<<<<<<<<<<<
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(node)
 *         self._thisptr.toggle(<pybSPDesktop.SPObject *>spobj)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":45
 *         self._thisptr.toggle(<pybSPDesktop.SPObject *>spobj)
 * 
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         self._thisptr.clear()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_5clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_5clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection_4clear(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSelection_4clear(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear", 0);

  /* "pybInkscape.pyx":46
 * 
 *     def clear(self):
 *         self._thisptr.clear()             # <<<<<<<<<<<<<<
 * 
 *     def add(self, PYNode node):
 */
  __pyx_v_self->_thisptr->clear();

  /* "pybInkscape.pyx":45
 *         self._thisptr.toggle(<pybSPDesktop.SPObject *>spobj)
 * 
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         self._thisptr.clear()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":48
 *         self._thisptr.clear()
 * 
 *     def add(self, PYNode node):             # <<<<<<<<<<<<<<
 *         self._thisptr.add(node._thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_7add(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_7add(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_11pybInkscape_PYNode, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection_6add(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_node));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSelection_6add(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add", 0);

  /* "pybInkscape.pyx":49
 * 
 *     def add(self, PYNode node):
 *         self._thisptr.add(node._thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def remove(self, PYNode node):
 */
  __pyx_v_self->_thisptr->add(__pyx_v_node->_thisptr);

  /* "pybInkscape.pyx":48
 *         self._thisptr.clear()
 * 
 *     def add(self, PYNode node):             # <<<<<<<<<<<<<<
 *         self._thisptr.add(node._thisptr)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":51
 *         self._thisptr.add(node._thisptr)
 * 
 *     def remove(self, PYNode node):             # <<<<<<<<<<<<<<
 *         self._thisptr.remove(node._thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_9remove(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_9remove(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_11pybInkscape_PYNode, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection_8remove(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_node));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSelection_8remove(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove", 0);

  /* "pybInkscape.pyx":52
 * 
 *     def remove(self, PYNode node):
 *         self._thisptr.remove(node._thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def desktop(self):
 */
  __pyx_v_self->_thisptr->remove(__pyx_v_node->_thisptr);

  /* "pybInkscape.pyx":51
 *         self._thisptr.add(node._thisptr)
 * 
 *     def remove(self, PYNode node):             # <<<<<<<<<<<<<<
 *         self._thisptr.remove(node._thisptr)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":54
 *         self._thisptr.remove(node._thisptr)
 * 
 *     def desktop(self):             # <<<<<<<<<<<<<<
 *         dsk = self._thisptr.desktop()
 *         dsk_co = PyCObject_FromVoidPtr(dsk, NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_11desktop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_11desktop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("desktop (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection_10desktop(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSelection_10desktop(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self) {
  SPDesktop *__pyx_v_dsk;
  PyObject *__pyx_v_dsk_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("desktop", 0);

  /* "pybInkscape.pyx":55
 * 
 *     def desktop(self):
 *         dsk = self._thisptr.desktop()             # <<<<<<<<<<<<<<
 *         dsk_co = PyCObject_FromVoidPtr(dsk, NULL)
 *         wrapper = PYSPDesktop(dsk_co)
 */
  __pyx_v_dsk = __pyx_v_self->_thisptr->desktop();

  /* "pybInkscape.pyx":56
 *     def desktop(self):
 *         dsk = self._thisptr.desktop()
 *         dsk_co = PyCObject_FromVoidPtr(dsk, NULL)             # <<<<<<<<<<<<<<
 *         wrapper = PYSPDesktop(dsk_co)
 *         return wrapper
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(__pyx_v_dsk, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dsk_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":57
 *         dsk = self._thisptr.desktop()
 *         dsk_co = PyCObject_FromVoidPtr(dsk, NULL)
 *         wrapper = PYSPDesktop(dsk_co)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_dsk_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_dsk_co);
  __Pyx_GIVEREF(__pyx_v_dsk_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDesktop)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_wrapper = ((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":58
 *         dsk_co = PyCObject_FromVoidPtr(dsk, NULL)
 *         wrapper = PYSPDesktop(dsk_co)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def activeContext(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":54
 *         self._thisptr.remove(node._thisptr)
 * 
 *     def desktop(self):             # <<<<<<<<<<<<<<
 *         dsk = self._thisptr.desktop()
 *         dsk_co = PyCObject_FromVoidPtr(dsk, NULL)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSelection.desktop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dsk_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":60
 *         return wrapper
 * 
 *     def activeContext(self):             # <<<<<<<<<<<<<<
 *         ctx = <pybSPDesktop.SPObject *>self._thisptr.activeContext()
 *         wrapper = gobj_api.newgobj(<C_GObject *>ctx)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_13activeContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_13activeContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("activeContext (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection_12activeContext(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSelection_12activeContext(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self) {
  SPObject *__pyx_v_ctx;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("activeContext", 0);

  /* "pybInkscape.pyx":61
 * 
 *     def activeContext(self):
 *         ctx = <pybSPDesktop.SPObject *>self._thisptr.activeContext()             # <<<<<<<<<<<<<<
 *         wrapper = gobj_api.newgobj(<C_GObject *>ctx)
 *         return wrapper
 */
  __pyx_v_ctx = ((SPObject *)__pyx_v_self->_thisptr->activeContext());

  /* "pybInkscape.pyx":62
 *     def activeContext(self):
 *         ctx = <pybSPDesktop.SPObject *>self._thisptr.activeContext()
 *         wrapper = gobj_api.newgobj(<C_GObject *>ctx)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = __pyx_v_11pybInkscape_gobj_api->newgobj(((GObject *)__pyx_v_ctx)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_wrapper = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":63
 *         ctx = <pybSPDesktop.SPObject *>self._thisptr.activeContext()
 *         wrapper = gobj_api.newgobj(<C_GObject *>ctx)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def list(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":60
 *         return wrapper
 * 
 *     def activeContext(self):             # <<<<<<<<<<<<<<
 *         ctx = <pybSPDesktop.SPObject *>self._thisptr.activeContext()
 *         wrapper = gobj_api.newgobj(<C_GObject *>ctx)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSelection.activeContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":65
 *         return wrapper
 * 
 *     def list(self):             # <<<<<<<<<<<<<<
 *         objs = []
 *         vect = <const vector[pybSPDesktop.SPObject *]> self._thisptr.list()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_15list(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSelection_15list(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSelection_14list(((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSelection_14list(struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_self) {
  PyObject *__pyx_v_objs = NULL;
  std::vector<SPObject *>  __pyx_v_vect;
  std::vector<SPObject *> ::iterator __pyx_v_it;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("list", 0);

  /* "pybInkscape.pyx":66
 * 
 *     def list(self):
 *         objs = []             # <<<<<<<<<<<<<<
 *         vect = <const vector[pybSPDesktop.SPObject *]> self._thisptr.list()
 *         cdef vector[pybSPDesktop.SPObject *].iterator it = vect.begin()
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_objs = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":67
 *     def list(self):
 *         objs = []
 *         vect = <const vector[pybSPDesktop.SPObject *]> self._thisptr.list()             # <<<<<<<<<<<<<<
 *         cdef vector[pybSPDesktop.SPObject *].iterator it = vect.begin()
 *         while it != vect.end():
 */
  __pyx_v_vect = ((std::vector<SPObject *>  const )__pyx_v_self->_thisptr->list());

  /* "pybInkscape.pyx":68
 *         objs = []
 *         vect = <const vector[pybSPDesktop.SPObject *]> self._thisptr.list()
 *         cdef vector[pybSPDesktop.SPObject *].iterator it = vect.begin()             # <<<<<<<<<<<<<<
 *         while it != vect.end():
 *             wrapper = wrapobjtonode(deref(it))
 */
  __pyx_v_it = __pyx_v_vect.begin();

  /* "pybInkscape.pyx":69
 *         vect = <const vector[pybSPDesktop.SPObject *]> self._thisptr.list()
 *         cdef vector[pybSPDesktop.SPObject *].iterator it = vect.begin()
 *         while it != vect.end():             # <<<<<<<<<<<<<<
 *             wrapper = wrapobjtonode(deref(it))
 *             objs.append(wrapper)
 */
  while (1) {
    __pyx_t_2 = ((__pyx_v_it != __pyx_v_vect.end()) != 0);
    if (!__pyx_t_2) break;

    /* "pybInkscape.pyx":70
 *         cdef vector[pybSPDesktop.SPObject *].iterator it = vect.begin()
 *         while it != vect.end():
 *             wrapper = wrapobjtonode(deref(it))             # <<<<<<<<<<<<<<
 *             objs.append(wrapper)
 *             preincrement(it)
 */
    __pyx_t_1 = __pyx_f_11pybInkscape_wrapobjtonode((*__pyx_v_it)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_wrapper, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pybInkscape.pyx":71
 *         while it != vect.end():
 *             wrapper = wrapobjtonode(deref(it))
 *             objs.append(wrapper)             # <<<<<<<<<<<<<<
 *             preincrement(it)
 *         return objs
 */
    __pyx_t_3 = __Pyx_PyList_Append(__pyx_v_objs, __pyx_v_wrapper); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pybInkscape.pyx":72
 *             wrapper = wrapobjtonode(deref(it))
 *             objs.append(wrapper)
 *             preincrement(it)             # <<<<<<<<<<<<<<
 *         return objs
 * 
 */
    (++__pyx_v_it);
  }

  /* "pybInkscape.pyx":73
 *             objs.append(wrapper)
 *             preincrement(it)
 *         return objs             # <<<<<<<<<<<<<<
 * 
 * cdef class PYNode(object):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_objs);
  __pyx_r = __pyx_v_objs;
  goto __pyx_L0;

  /* "pybInkscape.pyx":65
 *         return wrapper
 * 
 *     def list(self):             # <<<<<<<<<<<<<<
 *         objs = []
 *         vect = <const vector[pybSPDesktop.SPObject *]> self._thisptr.list()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSelection.list", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_objs);
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":86
 *     PI_NODE = 4
 * 
 *     def __init__(self, ptr_co, PYDocument doc, *args):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr_co)
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr_co = 0;
  struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 2) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 2, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return -1;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr_co,&__pyx_n_s_doc,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr_co)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_doc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 2) ? pos_args : 2;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ptr_co = values[0];
    __pyx_v_doc = ((struct __pyx_obj_11pybInkscape_PYDocument *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("pybInkscape.PYNode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_doc), __pyx_ptype_11pybInkscape_PYDocument, 1, "doc", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode___init__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_ptr_co, __pyx_v_doc, __pyx_v_args);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode___init__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_ptr_co, struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc, CYTHON_UNUSED PyObject *__pyx_v_args) {
  Inkscape::XML::Node *__pyx_v__repr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pybInkscape.pyx":87
 * 
 *     def __init__(self, ptr_co, PYDocument doc, *args):
 *         assert PyCObject_Check(ptr_co)             # <<<<<<<<<<<<<<
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = _repr
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(PyCObject_Check(__pyx_v_ptr_co) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "pybInkscape.pyx":88
 *     def __init__(self, ptr_co, PYDocument doc, *args):
 *         assert PyCObject_Check(ptr_co)
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)             # <<<<<<<<<<<<<<
 *         self._thisptr = _repr
 *         self._doc = doc
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_ptr_co); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__repr = ((Inkscape::XML::Node *)__pyx_t_1);

  /* "pybInkscape.pyx":89
 *         assert PyCObject_Check(ptr_co)
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = _repr             # <<<<<<<<<<<<<<
 *         self._doc = doc
 *         self.pystore = {}
 */
  __pyx_v_self->_thisptr = __pyx_v__repr;

  /* "pybInkscape.pyx":90
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = _repr
 *         self._doc = doc             # <<<<<<<<<<<<<<
 *         self.pystore = {}
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_doc));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_doc));
  __Pyx_GOTREF(__pyx_v_self->_doc);
  __Pyx_DECREF(__pyx_v_self->_doc);
  __pyx_v_self->_doc = ((PyObject *)__pyx_v_doc);

  /* "pybInkscape.pyx":91
 *         self._thisptr = _repr
 *         self._doc = doc
 *         self.pystore = {}             # <<<<<<<<<<<<<<
 * 
 *     #
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->pystore);
  __Pyx_DECREF(__pyx_v_self->pystore);
  __pyx_v_self->pystore = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":86
 *     PI_NODE = 4
 * 
 *     def __init__(self, ptr_co, PYDocument doc, *args):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr_co)
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":96
 *     # Return respective SPItem of a PYNode.
 *     #
 *     cdef pybSPDesktop.SPItem *_get_spitem(self):             # <<<<<<<<<<<<<<
 *         pydoc = <PYDocument>self._doc
 *         spdoc = pydoc._pyspdoc._thisptr
 */

static SPItem *__pyx_f_11pybInkscape_6PYNode__get_spitem(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_pydoc = NULL;
  SPDocument *__pyx_v_spdoc;
  SPItem *__pyx_v_spitem;
  SPItem *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  SPDocument *__pyx_t_2;
  __Pyx_RefNannySetupContext("_get_spitem", 0);

  /* "pybInkscape.pyx":97
 *     #
 *     cdef pybSPDesktop.SPItem *_get_spitem(self):
 *         pydoc = <PYDocument>self._doc             # <<<<<<<<<<<<<<
 *         spdoc = pydoc._pyspdoc._thisptr
 *         spitem = <pybSPDesktop.SPItem *>spdoc.getObjectByRepr(self._thisptr)
 */
  __pyx_t_1 = __pyx_v_self->_doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_pydoc = ((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":98
 *     cdef pybSPDesktop.SPItem *_get_spitem(self):
 *         pydoc = <PYDocument>self._doc
 *         spdoc = pydoc._pyspdoc._thisptr             # <<<<<<<<<<<<<<
 *         spitem = <pybSPDesktop.SPItem *>spdoc.getObjectByRepr(self._thisptr)
 *         return spitem
 */
  __pyx_t_2 = __pyx_v_pydoc->_pyspdoc->_thisptr;
  __pyx_v_spdoc = __pyx_t_2;

  /* "pybInkscape.pyx":99
 *         pydoc = <PYDocument>self._doc
 *         spdoc = pydoc._pyspdoc._thisptr
 *         spitem = <pybSPDesktop.SPItem *>spdoc.getObjectByRepr(self._thisptr)             # <<<<<<<<<<<<<<
 *         return spitem
 * 
 */
  __pyx_v_spitem = ((SPItem *)__pyx_v_spdoc->getObjectByRepr(__pyx_v_self->_thisptr));

  /* "pybInkscape.pyx":100
 *         spdoc = pydoc._pyspdoc._thisptr
 *         spitem = <pybSPDesktop.SPItem *>spdoc.getObjectByRepr(self._thisptr)
 *         return spitem             # <<<<<<<<<<<<<<
 * 
 *     def type(self):
 */
  __pyx_r = __pyx_v_spitem;
  goto __pyx_L0;

  /* "pybInkscape.pyx":96
 *     # Return respective SPItem of a PYNode.
 *     #
 *     cdef pybSPDesktop.SPItem *_get_spitem(self):             # <<<<<<<<<<<<<<
 *         pydoc = <PYDocument>self._doc
 *         spdoc = pydoc._pyspdoc._thisptr
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_pydoc);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":102
 *         return spitem
 * 
 *     def type(self):             # <<<<<<<<<<<<<<
 *         _type = self._thisptr.type()
 *         if _type == pybXML.DOCUMENT_NODE:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_3type(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_3type(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("type (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_2type(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_2type(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  enum Inkscape::XML::NodeType __pyx_v__type;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("type", 0);

  /* "pybInkscape.pyx":103
 * 
 *     def type(self):
 *         _type = self._thisptr.type()             # <<<<<<<<<<<<<<
 *         if _type == pybXML.DOCUMENT_NODE:
 *             return PYNode.DOCUMENT_NODE
 */
  __pyx_v__type = __pyx_v_self->_thisptr->type();

  /* "pybInkscape.pyx":104
 *     def type(self):
 *         _type = self._thisptr.type()
 *         if _type == pybXML.DOCUMENT_NODE:             # <<<<<<<<<<<<<<
 *             return PYNode.DOCUMENT_NODE
 *         elif _type == pybXML.ELEMENT_NODE:
 */
  __pyx_t_1 = PyInt_FromLong(__pyx_v__type); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_pybXML); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DOCUMENT_NODE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":105
 *         _type = self._thisptr.type()
 *         if _type == pybXML.DOCUMENT_NODE:
 *             return PYNode.DOCUMENT_NODE             # <<<<<<<<<<<<<<
 *         elif _type == pybXML.ELEMENT_NODE:
 *             return PYNode.ELEMENT_NODE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_n_s_DOCUMENT_NODE); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":106
 *         if _type == pybXML.DOCUMENT_NODE:
 *             return PYNode.DOCUMENT_NODE
 *         elif _type == pybXML.ELEMENT_NODE:             # <<<<<<<<<<<<<<
 *             return PYNode.ELEMENT_NODE
 *         elif _type == pybXML.TEXT_NODE:
 */
  __pyx_t_2 = PyInt_FromLong(__pyx_v__type); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_pybXML); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ELEMENT_NODE); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":107
 *             return PYNode.DOCUMENT_NODE
 *         elif _type == pybXML.ELEMENT_NODE:
 *             return PYNode.ELEMENT_NODE             # <<<<<<<<<<<<<<
 *         elif _type == pybXML.TEXT_NODE:
 *             return PYNode.TEXT_NODE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_n_s_ELEMENT_NODE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":108
 *         elif _type == pybXML.ELEMENT_NODE:
 *             return PYNode.ELEMENT_NODE
 *         elif _type == pybXML.TEXT_NODE:             # <<<<<<<<<<<<<<
 *             return PYNode.TEXT_NODE
 *         elif _type == pybXML.COMMENT_NODE:
 */
  __pyx_t_3 = PyInt_FromLong(__pyx_v__type); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_pybXML); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_TEXT_NODE); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":109
 *             return PYNode.ELEMENT_NODE
 *         elif _type == pybXML.TEXT_NODE:
 *             return PYNode.TEXT_NODE             # <<<<<<<<<<<<<<
 *         elif _type == pybXML.COMMENT_NODE:
 *             return PYNode.COMMENT_NODE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_n_s_TEXT_NODE); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":110
 *         elif _type == pybXML.TEXT_NODE:
 *             return PYNode.TEXT_NODE
 *         elif _type == pybXML.COMMENT_NODE:             # <<<<<<<<<<<<<<
 *             return PYNode.COMMENT_NODE
 *         elif _type == pybXML.PI_NODE:
 */
  __pyx_t_1 = PyInt_FromLong(__pyx_v__type); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_pybXML); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_COMMENT_NODE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":111
 *             return PYNode.TEXT_NODE
 *         elif _type == pybXML.COMMENT_NODE:
 *             return PYNode.COMMENT_NODE             # <<<<<<<<<<<<<<
 *         elif _type == pybXML.PI_NODE:
 *             return PYNode.PI_NODE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_n_s_COMMENT_NODE); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":112
 *         elif _type == pybXML.COMMENT_NODE:
 *             return PYNode.COMMENT_NODE
 *         elif _type == pybXML.PI_NODE:             # <<<<<<<<<<<<<<
 *             return PYNode.PI_NODE
 *         else:
 */
  __pyx_t_2 = PyInt_FromLong(__pyx_v__type); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_pybXML); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_PI_NODE); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":113
 *             return PYNode.COMMENT_NODE
 *         elif _type == pybXML.PI_NODE:
 *             return PYNode.PI_NODE             # <<<<<<<<<<<<<<
 *         else:
 *             pass
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_n_s_PI_NODE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }
  /*else*/ {
  }

  /* "pybInkscape.pyx":117
 *             pass
 * 
 *         raise ValueError, 'unknown value'             # <<<<<<<<<<<<<<
 * 
 *     def name(self):
 */
  __Pyx_Raise(__pyx_builtin_ValueError, __pyx_kp_s_unknown_value, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":102
 *         return spitem
 * 
 *     def type(self):             # <<<<<<<<<<<<<<
 *         _type = self._thisptr.type()
 *         if _type == pybXML.DOCUMENT_NODE:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYNode.type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":119
 *         raise ValueError, 'unknown value'
 * 
 *     def name(self):             # <<<<<<<<<<<<<<
 *         _name = self._thisptr.name()
 *         if _name == NULL:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_5name(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_5name(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("name (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_4name(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_4name(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  const gchar *__pyx_v__name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("name", 0);

  /* "pybInkscape.pyx":120
 * 
 *     def name(self):
 *         _name = self._thisptr.name()             # <<<<<<<<<<<<<<
 *         if _name == NULL:
 *             return None
 */
  __pyx_v__name = __pyx_v_self->_thisptr->name();

  /* "pybInkscape.pyx":121
 *     def name(self):
 *         _name = self._thisptr.name()
 *         if _name == NULL:             # <<<<<<<<<<<<<<
 *             return None
 *         return <char *>_name
 */
  __pyx_t_1 = ((__pyx_v__name == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":122
 *         _name = self._thisptr.name()
 *         if _name == NULL:
 *             return None             # <<<<<<<<<<<<<<
 *         return <char *>_name
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":123
 *         if _name == NULL:
 *             return None
 *         return <char *>_name             # <<<<<<<<<<<<<<
 * 
 *     def content(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBytes_FromString(((char *)__pyx_v__name)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":119
 *         raise ValueError, 'unknown value'
 * 
 *     def name(self):             # <<<<<<<<<<<<<<
 *         _name = self._thisptr.name()
 *         if _name == NULL:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":125
 *         return <char *>_name
 * 
 *     def content(self):             # <<<<<<<<<<<<<<
 *         _content = self._thisptr.content()
 *         if _content == NULL:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_7content(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_7content(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("content (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_6content(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_6content(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  const gchar *__pyx_v__content;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("content", 0);

  /* "pybInkscape.pyx":126
 * 
 *     def content(self):
 *         _content = self._thisptr.content()             # <<<<<<<<<<<<<<
 *         if _content == NULL:
 *             return None
 */
  __pyx_v__content = __pyx_v_self->_thisptr->content();

  /* "pybInkscape.pyx":127
 *     def content(self):
 *         _content = self._thisptr.content()
 *         if _content == NULL:             # <<<<<<<<<<<<<<
 *             return None
 *         return <char *>_content
 */
  __pyx_t_1 = ((__pyx_v__content == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":128
 *         _content = self._thisptr.content()
 *         if _content == NULL:
 *             return None             # <<<<<<<<<<<<<<
 *         return <char *>_content
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":129
 *         if _content == NULL:
 *             return None
 *         return <char *>_content             # <<<<<<<<<<<<<<
 * 
 *     def attribute(self, bytes key):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBytes_FromString(((char *)__pyx_v__content)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":125
 *         return <char *>_name
 * 
 *     def content(self):             # <<<<<<<<<<<<<<
 *         _content = self._thisptr.content()
 *         if _content == NULL:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.content", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":131
 *         return <char *>_content
 * 
 *     def attribute(self, bytes key):             # <<<<<<<<<<<<<<
 *         value = <char *>self._thisptr.attribute(<char *>key)
 *         if value == NULL:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_9attribute(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_9attribute(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("attribute (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key), (&PyBytes_Type), 1, "key", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_8attribute(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject*)__pyx_v_key));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_8attribute(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key) {
  char *__pyx_v_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("attribute", 0);

  /* "pybInkscape.pyx":132
 * 
 *     def attribute(self, bytes key):
 *         value = <char *>self._thisptr.attribute(<char *>key)             # <<<<<<<<<<<<<<
 *         if value == NULL:
 *             raise KeyError, 'No such key: %s' % key
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_key); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_value = ((char *)__pyx_v_self->_thisptr->attribute(((char *)__pyx_t_1)));

  /* "pybInkscape.pyx":133
 *     def attribute(self, bytes key):
 *         value = <char *>self._thisptr.attribute(<char *>key)
 *         if value == NULL:             # <<<<<<<<<<<<<<
 *             raise KeyError, 'No such key: %s' % key
 *         return value
 */
  __pyx_t_2 = ((__pyx_v_value == NULL) != 0);
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":134
 *         value = <char *>self._thisptr.attribute(<char *>key)
 *         if value == NULL:
 *             raise KeyError, 'No such key: %s' % key             # <<<<<<<<<<<<<<
 *         return value
 * 
 */
    __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_No_such_key_s, __pyx_v_key); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_builtin_KeyError, __pyx_t_3, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pybInkscape.pyx":135
 *         if value == NULL:
 *             raise KeyError, 'No such key: %s' % key
 *         return value             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_value); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":131
 *         return <char *>_content
 * 
 *     def attribute(self, bytes key):             # <<<<<<<<<<<<<<
 *         value = <char *>self._thisptr.attribute(<char *>key)
 *         if value == NULL:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYNode.attribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":137
 *         return value
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_10__getitem__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_10__getitem__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_subkey = NULL;
  PyObject *__pyx_v_style = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pybInkscape.pyx":138
 * 
 *     def __getitem__(self, key):
 *         if key.startswith("style."):             # <<<<<<<<<<<<<<
 *             subkey = key[len("style."):]
 *             style = unserattrib(self["style"])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_startswith); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "pybInkscape.pyx":139
 *     def __getitem__(self, key):
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]             # <<<<<<<<<<<<<<
 *             style = unserattrib(self["style"])
 *             return style[subkey]
 */
    __pyx_t_4 = PyObject_Length(__pyx_kp_s_style); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_key, __pyx_t_4, 0, NULL, NULL, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_subkey = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pybInkscape.pyx":140
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 *             style = unserattrib(self["style"])             # <<<<<<<<<<<<<<
 *             return style[subkey]
 *         else:
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_unserattrib); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_n_s_style_2); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_style = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pybInkscape.pyx":141
 *             subkey = key[len("style."):]
 *             style = unserattrib(self["style"])
 *             return style[subkey]             # <<<<<<<<<<<<<<
 *         else:
 *             return self.attribute(key)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = PyObject_GetItem(__pyx_v_style, __pyx_v_subkey); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "pybInkscape.pyx":143
 *             return style[subkey]
 *         else:
 *             return self.attribute(key)             # <<<<<<<<<<<<<<
 * 
 *     def get(self, key, default=None):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_attribute); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_key); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":137
 *         return value
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pybInkscape.PYNode.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_subkey);
  __Pyx_XDECREF(__pyx_v_style);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":145
 *             return self.attribute(key)
 * 
 *     def get(self, key, default=None):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_12get(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_12get(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_v_subkey = NULL;
  PyObject *__pyx_v_style = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);

  /* "pybInkscape.pyx":146
 * 
 *     def get(self, key, default=None):
 *         if key.startswith("style."):             # <<<<<<<<<<<<<<
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_startswith); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "pybInkscape.pyx":147
 *     def get(self, key, default=None):
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]             # <<<<<<<<<<<<<<
 *             style = unserattrib(self.get("style",""))
 *             return style.get(subkey, default)
 */
    __pyx_t_4 = PyObject_Length(__pyx_kp_s_style); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_key, __pyx_t_4, 0, NULL, NULL, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_subkey = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pybInkscape.pyx":148
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))             # <<<<<<<<<<<<<<
 *             return style.get(subkey, default)
 *         else:
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_unserattrib); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_style = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pybInkscape.pyx":149
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 *             return style.get(subkey, default)             # <<<<<<<<<<<<<<
 *         else:
 *             try:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_style, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    __pyx_t_6 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_7) {
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_v_subkey);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_4, __pyx_v_subkey);
    __Pyx_GIVEREF(__pyx_v_subkey);
    __Pyx_INCREF(__pyx_v_default);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_4, __pyx_v_default);
    __Pyx_GIVEREF(__pyx_v_default);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "pybInkscape.pyx":151
 *             return style.get(subkey, default)
 *         else:
 *             try:             # <<<<<<<<<<<<<<
 *                 return PYNode.__getitem__(self, key)
 *             except KeyError:
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_9);
      __Pyx_XGOTREF(__pyx_t_10);
      /*try:*/ {

        /* "pybInkscape.pyx":152
 *         else:
 *             try:
 *                 return PYNode.__getitem__(self, key)             # <<<<<<<<<<<<<<
 *             except KeyError:
 *                 return default
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_n_s_getitem); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_6 = NULL;
        __pyx_t_4 = 0;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
            __pyx_t_4 = 1;
          }
        }
        __pyx_t_7 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_7);
        if (__pyx_t_6) {
          PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
        }
        __Pyx_INCREF(((PyObject *)__pyx_v_self));
        PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_4, ((PyObject *)__pyx_v_self));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
        __Pyx_INCREF(__pyx_v_key);
        PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_4, __pyx_v_key);
        __Pyx_GIVEREF(__pyx_v_key);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        goto __pyx_L8_try_return;
      }
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "pybInkscape.pyx":153
 *             try:
 *                 return PYNode.__getitem__(self, key)
 *             except KeyError:             # <<<<<<<<<<<<<<
 *                 return default
 * 
 */
      __pyx_t_11 = PyErr_ExceptionMatches(__pyx_builtin_KeyError);
      if (__pyx_t_11) {
        __Pyx_AddTraceback("pybInkscape.PYNode.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_7);

        /* "pybInkscape.pyx":154
 *                 return PYNode.__getitem__(self, key)
 *             except KeyError:
 *                 return default             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_v_default);
        __pyx_r = __pyx_v_default;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        goto __pyx_L7_except_return;
      }
      goto __pyx_L6_except_error;
      __pyx_L6_except_error:;
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_XGIVEREF(__pyx_t_9);
      __Pyx_XGIVEREF(__pyx_t_10);
      __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      goto __pyx_L1_error;
      __pyx_L8_try_return:;
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_XGIVEREF(__pyx_t_9);
      __Pyx_XGIVEREF(__pyx_t_10);
      __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      goto __pyx_L0;
      __pyx_L7_except_return:;
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_XGIVEREF(__pyx_t_9);
      __Pyx_XGIVEREF(__pyx_t_10);
      __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      goto __pyx_L0;
    }
  }

  /* "pybInkscape.pyx":145
 *             return self.attribute(key)
 * 
 *     def get(self, key, default=None):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pybInkscape.PYNode.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_subkey);
  __Pyx_XDECREF(__pyx_v_style);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":156
 *                 return default
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_15__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_15__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_14__setitem__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode_14__setitem__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_subkey = NULL;
  PyObject *__pyx_v_style = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "pybInkscape.pyx":157
 * 
 *     def __setitem__(self, key, value):
 *         if key.startswith("style."):             # <<<<<<<<<<<<<<
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_startswith); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "pybInkscape.pyx":158
 *     def __setitem__(self, key, value):
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]             # <<<<<<<<<<<<<<
 *             style = unserattrib(self.get("style",""))
 *             if value:
 */
    __pyx_t_4 = PyObject_Length(__pyx_kp_s_style); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_key, __pyx_t_4, 0, NULL, NULL, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_subkey = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pybInkscape.pyx":159
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))             # <<<<<<<<<<<<<<
 *             if value:
 *                 style[subkey] = value
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_unserattrib); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_style = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pybInkscape.pyx":160
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 *             if value:             # <<<<<<<<<<<<<<
 *                 style[subkey] = value
 *             elif subkey in style:
 */
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_3) {

      /* "pybInkscape.pyx":161
 *             style = unserattrib(self.get("style",""))
 *             if value:
 *                 style[subkey] = value             # <<<<<<<<<<<<<<
 *             elif subkey in style:
 *                 del style[subkey]
 */
      if (unlikely(PyObject_SetItem(__pyx_v_style, __pyx_v_subkey, __pyx_v_value) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "pybInkscape.pyx":162
 *             if value:
 *                 style[subkey] = value
 *             elif subkey in style:             # <<<<<<<<<<<<<<
 *                 del style[subkey]
 *             self["style"] = serattrib(style)
 */
    __pyx_t_3 = (__Pyx_PySequence_Contains(__pyx_v_subkey, __pyx_v_style, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_8 = (__pyx_t_3 != 0);
    if (__pyx_t_8) {

      /* "pybInkscape.pyx":163
 *                 style[subkey] = value
 *             elif subkey in style:
 *                 del style[subkey]             # <<<<<<<<<<<<<<
 *             self["style"] = serattrib(style)
 *         else:
 */
      if (PyObject_DelItem(__pyx_v_style, __pyx_v_subkey) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;

    /* "pybInkscape.pyx":164
 *             elif subkey in style:
 *                 del style[subkey]
 *             self["style"] = serattrib(style)             # <<<<<<<<<<<<<<
 *         else:
 *             self.setAttribute(key, value)
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_serattrib); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_style); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_v_style);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_style);
      __Pyx_GIVEREF(__pyx_v_style);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_self), __pyx_n_s_style_2, __pyx_t_2) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pybInkscape.pyx":166
 *             self["style"] = serattrib(style)
 *         else:
 *             self.setAttribute(key, value)             # <<<<<<<<<<<<<<
 * 
 *     def __delitem__(self, bytes key):
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setAttribute); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_6) {
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_INCREF(__pyx_v_key);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_4, __pyx_v_key);
    __Pyx_GIVEREF(__pyx_v_key);
    __Pyx_INCREF(__pyx_v_value);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_4, __pyx_v_value);
    __Pyx_GIVEREF(__pyx_v_value);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":156
 *                 return default
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pybInkscape.PYNode.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_subkey);
  __Pyx_XDECREF(__pyx_v_style);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":168
 *             self.setAttribute(key, value)
 * 
 *     def __delitem__(self, bytes key):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_17__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_17__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__delitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key), (&PyBytes_Type), 1, "key", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_16__delitem__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject*)__pyx_v_key));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode_16__delitem__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_subkey = NULL;
  PyObject *__pyx_v_style = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  char *__pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__delitem__", 0);

  /* "pybInkscape.pyx":169
 * 
 *     def __delitem__(self, bytes key):
 *         if key.startswith("style."):             # <<<<<<<<<<<<<<
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 */
  if (unlikely(__pyx_v_key == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "startswith");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyBytes_Tailmatch(__pyx_v_key, __pyx_kp_s_style, 0, PY_SSIZE_T_MAX, -1); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if ((__pyx_t_1 != 0)) {

    /* "pybInkscape.pyx":170
 *     def __delitem__(self, bytes key):
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]             # <<<<<<<<<<<<<<
 *             style = unserattrib(self.get("style",""))
 *             del style[subkey]
 */
    if (unlikely(__pyx_v_key == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_2 = PyObject_Length(__pyx_kp_s_style); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = PySequence_GetSlice(__pyx_v_key, __pyx_t_2, PY_SSIZE_T_MAX); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_subkey = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "pybInkscape.pyx":171
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))             # <<<<<<<<<<<<<<
 *             del style[subkey]
 *             # Should auto-delete or not?
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_unserattrib); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_style = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pybInkscape.pyx":172
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 *             del style[subkey]             # <<<<<<<<<<<<<<
 *             # Should auto-delete or not?
 *             self["style"] = serattrib(style)
 */
    if (PyObject_DelItem(__pyx_v_style, __pyx_v_subkey) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pybInkscape.pyx":174
 *             del style[subkey]
 *             # Should auto-delete or not?
 *             self["style"] = serattrib(style)             # <<<<<<<<<<<<<<
 *         else:
 *             self._thisptr.setAttribute(<char *>key, NULL, 0);
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_serattrib); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_style); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_v_style);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_style);
      __Pyx_GIVEREF(__pyx_v_style);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_self), __pyx_n_s_style_2, __pyx_t_3) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pybInkscape.pyx":176
 *             self["style"] = serattrib(style)
 *         else:
 *             self._thisptr.setAttribute(<char *>key, NULL, 0);             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, bytes key):
 */
    __pyx_t_8 = __Pyx_PyObject_AsString(__pyx_v_key); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->_thisptr->setAttribute(((char *)__pyx_t_8), NULL, 0);
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":168
 *             self.setAttribute(key, value)
 * 
 *     def __delitem__(self, bytes key):             # <<<<<<<<<<<<<<
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pybInkscape.PYNode.__delitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_subkey);
  __Pyx_XDECREF(__pyx_v_style);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":178
 *             self._thisptr.setAttribute(<char *>key, NULL, 0);
 * 
 *     def __contains__(self, bytes key):             # <<<<<<<<<<<<<<
 *         return (self.get(key) != None)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_19__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_19__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key), (&PyBytes_Type), 1, "key", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_18__contains__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject*)__pyx_v_key));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode_18__contains__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "pybInkscape.pyx":179
 * 
 *     def __contains__(self, bytes key):
 *         return (self.get(key) != None)             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(PYNode self, PYNode other,op):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_key); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_key);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_key);
    __Pyx_GIVEREF(__pyx_v_key);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, Py_None, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "pybInkscape.pyx":178
 *             self._thisptr.setAttribute(<char *>key, NULL, 0);
 * 
 *     def __contains__(self, bytes key):             # <<<<<<<<<<<<<<
 *         return (self.get(key) != None)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.PYNode.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":181
 *         return (self.get(key) != None)
 * 
 *     def __richcmp__(PYNode self, PYNode other,op):             # <<<<<<<<<<<<<<
 *         if op == 2:
 *             return self._thisptr == other._thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_21__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_21__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op) {
  PyObject *__pyx_v_op = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  __pyx_v_op = __Pyx_PyInt_From_int(__pyx_arg_op); if (unlikely(!__pyx_v_op)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __Pyx_GOTREF(__pyx_v_op);
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_11pybInkscape_PYNode, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_11pybInkscape_PYNode, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_20__richcmp__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_other), ((PyObject *)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_op);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_20__richcmp__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_other, PyObject *__pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "pybInkscape.pyx":182
 * 
 *     def __richcmp__(PYNode self, PYNode other,op):
 *         if op == 2:             # <<<<<<<<<<<<<<
 *             return self._thisptr == other._thisptr
 *         elif op == 3:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":183
 *     def __richcmp__(PYNode self, PYNode other,op):
 *         if op == 2:
 *             return self._thisptr == other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 3:
 *             return self._thisptr != other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->_thisptr == __pyx_v_other->_thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":184
 *         if op == 2:
 *             return self._thisptr == other._thisptr
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return self._thisptr != other._thisptr
 *         elif op == 0:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":185
 *             return self._thisptr == other._thisptr
 *         elif op == 3:
 *             return self._thisptr != other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 0:
 *             return self._thisptr < other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->_thisptr != __pyx_v_other->_thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":186
 *         elif op == 3:
 *             return self._thisptr != other._thisptr
 *         elif op == 0:             # <<<<<<<<<<<<<<
 *             return self._thisptr < other._thisptr
 *         elif op == 1:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":187
 *             return self._thisptr != other._thisptr
 *         elif op == 0:
 *             return self._thisptr < other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 1:
 *             return self._thisptr <= other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->_thisptr < __pyx_v_other->_thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":188
 *         elif op == 0:
 *             return self._thisptr < other._thisptr
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return self._thisptr <= other._thisptr
 *         elif op == 4:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":189
 *             return self._thisptr < other._thisptr
 *         elif op == 1:
 *             return self._thisptr <= other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 4:
 *             return self._thisptr > other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->_thisptr <= __pyx_v_other->_thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":190
 *         elif op == 1:
 *             return self._thisptr <= other._thisptr
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return self._thisptr > other._thisptr
 *         elif op == 5:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":191
 *             return self._thisptr <= other._thisptr
 *         elif op == 4:
 *             return self._thisptr > other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 5:
 *             return self._thisptr >= other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->_thisptr > __pyx_v_other->_thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":192
 *         elif op == 4:
 *             return self._thisptr > other._thisptr
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return self._thisptr >= other._thisptr
 * 
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":193
 *             return self._thisptr > other._thisptr
 *         elif op == 5:
 *             return self._thisptr >= other._thisptr             # <<<<<<<<<<<<<<
 * 
 *     def keys(self):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->_thisptr >= __pyx_v_other->_thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":181
 *         return (self.get(key) != None)
 * 
 *     def __richcmp__(PYNode self, PYNode other,op):             # <<<<<<<<<<<<<<
 *         if op == 2:
 *             return self._thisptr == other._thisptr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYNode.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":195
 *             return self._thisptr >= other._thisptr
 * 
 *     def keys(self):             # <<<<<<<<<<<<<<
 *         return list(self._thisptr.attributes())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_23keys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_23keys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keys (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_22keys(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_22keys(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keys", 0);

  /* "pybInkscape.pyx":196
 * 
 *     def keys(self):
 *         return list(self._thisptr.attributes())             # <<<<<<<<<<<<<<
 * 
 *     def delete(self, bytes key, bint interactive=0):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_const__gchar___2a_(__pyx_v_self->_thisptr->attributes()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PySequence_List(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":195
 *             return self._thisptr >= other._thisptr
 * 
 *     def keys(self):             # <<<<<<<<<<<<<<
 *         return list(self._thisptr.attributes())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":198
 *         return list(self._thisptr.attributes())
 * 
 *     def delete(self, bytes key, bint interactive=0):             # <<<<<<<<<<<<<<
 *         self._thisptr.setAttribute(<char *>key, NULL, interactive);
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_25delete(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_25delete(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  int __pyx_v_interactive;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("delete (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_interactive,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_interactive);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "delete") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_interactive = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_interactive == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_interactive = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("delete", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.delete", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key), (&PyBytes_Type), 1, "key", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_24delete(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_key, __pyx_v_interactive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_24delete(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_v_interactive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delete", 0);

  /* "pybInkscape.pyx":199
 * 
 *     def delete(self, bytes key, bint interactive=0):
 *         self._thisptr.setAttribute(<char *>key, NULL, interactive);             # <<<<<<<<<<<<<<
 * 
 *     def setPosition(self, int pos):
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_key); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr->setAttribute(((char *)__pyx_t_1), NULL, __pyx_v_interactive);

  /* "pybInkscape.pyx":198
 *         return list(self._thisptr.attributes())
 * 
 *     def delete(self, bytes key, bint interactive=0):             # <<<<<<<<<<<<<<
 *         self._thisptr.setAttribute(<char *>key, NULL, interactive);
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.delete", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":201
 *         self._thisptr.setAttribute(<char *>key, NULL, interactive);
 * 
 *     def setPosition(self, int pos):             # <<<<<<<<<<<<<<
 *         self._thisptr.setPosition(pos)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_27setPosition(PyObject *__pyx_v_self, PyObject *__pyx_arg_pos); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_27setPosition(PyObject *__pyx_v_self, PyObject *__pyx_arg_pos) {
  int __pyx_v_pos;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setPosition (wrapper)", 0);
  assert(__pyx_arg_pos); {
    __pyx_v_pos = __Pyx_PyInt_As_int(__pyx_arg_pos); if (unlikely((__pyx_v_pos == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.setPosition", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_26setPosition(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((int)__pyx_v_pos));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_26setPosition(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, int __pyx_v_pos) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setPosition", 0);

  /* "pybInkscape.pyx":202
 * 
 *     def setPosition(self, int pos):
 *         self._thisptr.setPosition(pos)             # <<<<<<<<<<<<<<
 * 
 *     def setContent(self, bytes value):
 */
  __pyx_v_self->_thisptr->setPosition(__pyx_v_pos);

  /* "pybInkscape.pyx":201
 *         self._thisptr.setAttribute(<char *>key, NULL, interactive);
 * 
 *     def setPosition(self, int pos):             # <<<<<<<<<<<<<<
 *         self._thisptr.setPosition(pos)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":204
 *         self._thisptr.setPosition(pos)
 * 
 *     def setContent(self, bytes value):             # <<<<<<<<<<<<<<
 *         self._thisptr.setContent(<char *>value)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_29setContent(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_29setContent(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setContent (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyBytes_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_28setContent(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject*)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_28setContent(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setContent", 0);

  /* "pybInkscape.pyx":205
 * 
 *     def setContent(self, bytes value):
 *         self._thisptr.setContent(<char *>value)             # <<<<<<<<<<<<<<
 * 
 *     def setAttribute(self, bytes key, bytes value, bint interactive=0):
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_value); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr->setContent(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":204
 *         self._thisptr.setPosition(pos)
 * 
 *     def setContent(self, bytes value):             # <<<<<<<<<<<<<<
 *         self._thisptr.setContent(<char *>value)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.setContent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":207
 *         self._thisptr.setContent(<char *>value)
 * 
 *     def setAttribute(self, bytes key, bytes value, bint interactive=0):             # <<<<<<<<<<<<<<
 *         self._thisptr.setAttribute(<char *>key, <char *>value, interactive)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_31setAttribute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_31setAttribute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_value = 0;
  int __pyx_v_interactive;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setAttribute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_value,&__pyx_n_s_interactive,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setAttribute", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_interactive);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setAttribute") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = ((PyObject*)values[0]);
    __pyx_v_value = ((PyObject*)values[1]);
    if (values[2]) {
      __pyx_v_interactive = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_interactive == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_interactive = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setAttribute", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.setAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key), (&PyBytes_Type), 1, "key", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyBytes_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_30setAttribute(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_key, __pyx_v_value, __pyx_v_interactive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_30setAttribute(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value, int __pyx_v_interactive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  char *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setAttribute", 0);

  /* "pybInkscape.pyx":208
 * 
 *     def setAttribute(self, bytes key, bytes value, bint interactive=0):
 *         self._thisptr.setAttribute(<char *>key, <char *>value, interactive)             # <<<<<<<<<<<<<<
 * 
 *     #http://stackoverflow.com/questions/16907168/convert-python-object-to-c-void-type
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_key); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_AsString(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr->setAttribute(((char *)__pyx_t_1), ((char *)__pyx_t_2), __pyx_v_interactive);

  /* "pybInkscape.pyx":207
 *         self._thisptr.setContent(<char *>value)
 * 
 *     def setAttribute(self, bytes key, bytes value, bint interactive=0):             # <<<<<<<<<<<<<<
 *         self._thisptr.setAttribute(<char *>key, <char *>value, interactive)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.setAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":211
 * 
 *     #http://stackoverflow.com/questions/16907168/convert-python-object-to-c-void-type
 *     def setwrapper(self, wrapper):             # <<<<<<<<<<<<<<
 *         if self._thisptr._wrapper != NULL:
 *             Py_DECREF(self.wrapper)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_33setwrapper(PyObject *__pyx_v_self, PyObject *__pyx_v_wrapper); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_33setwrapper(PyObject *__pyx_v_self, PyObject *__pyx_v_wrapper) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setwrapper (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_32setwrapper(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject *)__pyx_v_wrapper));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_32setwrapper(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_wrapper) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setwrapper", 0);

  /* "pybInkscape.pyx":212
 *     #http://stackoverflow.com/questions/16907168/convert-python-object-to-c-void-type
 *     def setwrapper(self, wrapper):
 *         if self._thisptr._wrapper != NULL:             # <<<<<<<<<<<<<<
 *             Py_DECREF(self.wrapper)
 *         self._thisptr._wrapper = <void *>wrapper
 */
  __pyx_t_1 = ((__pyx_v_self->_thisptr->_wrapper != NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":213
 *     def setwrapper(self, wrapper):
 *         if self._thisptr._wrapper != NULL:
 *             Py_DECREF(self.wrapper)             # <<<<<<<<<<<<<<
 *         self._thisptr._wrapper = <void *>wrapper
 *         Py_INCREF(wrapper)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_wrapper); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    Py_DECREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":214
 *         if self._thisptr._wrapper != NULL:
 *             Py_DECREF(self.wrapper)
 *         self._thisptr._wrapper = <void *>wrapper             # <<<<<<<<<<<<<<
 *         Py_INCREF(wrapper)
 * 
 */
  __pyx_v_self->_thisptr->_wrapper = ((void *)__pyx_v_wrapper);

  /* "pybInkscape.pyx":215
 *             Py_DECREF(self.wrapper)
 *         self._thisptr._wrapper = <void *>wrapper
 *         Py_INCREF(wrapper)             # <<<<<<<<<<<<<<
 * 
 *     def getwrapper(self):
 */
  Py_INCREF(__pyx_v_wrapper);

  /* "pybInkscape.pyx":211
 * 
 *     #http://stackoverflow.com/questions/16907168/convert-python-object-to-c-void-type
 *     def setwrapper(self, wrapper):             # <<<<<<<<<<<<<<
 *         if self._thisptr._wrapper != NULL:
 *             Py_DECREF(self.wrapper)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.setwrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":217
 *         Py_INCREF(wrapper)
 * 
 *     def getwrapper(self):             # <<<<<<<<<<<<<<
 *         if self._thisptr._wrapper == NULL:
 *             return None
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_35getwrapper(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_35getwrapper(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getwrapper (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_34getwrapper(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_34getwrapper(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_v_ptr;
  PyObject *__pyx_v_obj = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("getwrapper", 0);

  /* "pybInkscape.pyx":218
 * 
 *     def getwrapper(self):
 *         if self._thisptr._wrapper == NULL:             # <<<<<<<<<<<<<<
 *             return None
 *         ptr = <PyObject *>self._thisptr._wrapper
 */
  __pyx_t_1 = ((__pyx_v_self->_thisptr->_wrapper == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":219
 *     def getwrapper(self):
 *         if self._thisptr._wrapper == NULL:
 *             return None             # <<<<<<<<<<<<<<
 *         ptr = <PyObject *>self._thisptr._wrapper
 *         cdef object obj
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":220
 *         if self._thisptr._wrapper == NULL:
 *             return None
 *         ptr = <PyObject *>self._thisptr._wrapper             # <<<<<<<<<<<<<<
 *         cdef object obj
 *         obj = <object>ptr
 */
  __pyx_v_ptr = ((PyObject *)__pyx_v_self->_thisptr->_wrapper);

  /* "pybInkscape.pyx":222
 *         ptr = <PyObject *>self._thisptr._wrapper
 *         cdef object obj
 *         obj = <object>ptr             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_ptr);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_obj = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":223
 *         cdef object obj
 *         obj = <object>ptr
 *         return obj             # <<<<<<<<<<<<<<
 * 
 *     wrapper = property(getwrapper, setwrapper)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pybInkscape.pyx":217
 *         Py_INCREF(wrapper)
 * 
 *     def getwrapper(self):             # <<<<<<<<<<<<<<
 *         if self._thisptr._wrapper == NULL:
 *             return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":228
 * 
 *     @property
 *     def doc(self):             # <<<<<<<<<<<<<<
 *         return self._doc
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_37doc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_37doc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("doc (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_36doc(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_36doc(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("doc", 0);

  /* "pybInkscape.pyx":229
 *     @property
 *     def doc(self):
 *         return self._doc             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_doc);
  __pyx_r = __pyx_v_self->_doc;
  goto __pyx_L0;

  /* "pybInkscape.pyx":228
 * 
 *     @property
 *     def doc(self):             # <<<<<<<<<<<<<<
 *         return self._doc
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":232
 * 
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_39root(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_39root(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("root (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_38root(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_38root(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  Inkscape::XML::Node *__pyx_v_root;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("root", 0);

  /* "pybInkscape.pyx":233
 *     @property
 *     def root(self):
 *         root = self._thisptr.root()             # <<<<<<<<<<<<<<
 *         return wrapnode(root, self._doc)
 * 
 */
  __pyx_v_root = __pyx_v_self->_thisptr->root();

  /* "pybInkscape.pyx":234
 *     def root(self):
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->_doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_root, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":232
 * 
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.root", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":237
 * 
 *     @property
 *     def parent(self):             # <<<<<<<<<<<<<<
 *         return wrapnode(self._thisptr.parent(), self._doc)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_41parent(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_41parent(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parent (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_40parent(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_40parent(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parent", 0);

  /* "pybInkscape.pyx":238
 *     @property
 *     def parent(self):
 *         return wrapnode(self._thisptr.parent(), self._doc)             # <<<<<<<<<<<<<<
 * 
 *     def next(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->_doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_self->_thisptr->parent(), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":237
 * 
 *     @property
 *     def parent(self):             # <<<<<<<<<<<<<<
 *         return wrapnode(self._thisptr.parent(), self._doc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.parent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":240
 *         return wrapnode(self._thisptr.parent(), self._doc)
 * 
 *     def next(self):             # <<<<<<<<<<<<<<
 *         node = self._thisptr.next()
 *         return wrapnode(node, self._doc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_43next(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_43next(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("next (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_42next(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_42next(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("next", 0);

  /* "pybInkscape.pyx":241
 * 
 *     def next(self):
 *         node = self._thisptr.next()             # <<<<<<<<<<<<<<
 *         return wrapnode(node, self._doc)
 * 
 */
  __pyx_v_node = __pyx_v_self->_thisptr->next();

  /* "pybInkscape.pyx":242
 *     def next(self):
 *         node = self._thisptr.next()
 *         return wrapnode(node, self._doc)             # <<<<<<<<<<<<<<
 * 
 *     def firstChild(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->_doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_node, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":240
 *         return wrapnode(self._thisptr.parent(), self._doc)
 * 
 *     def next(self):             # <<<<<<<<<<<<<<
 *         node = self._thisptr.next()
 *         return wrapnode(node, self._doc)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.next", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":244
 *         return wrapnode(node, self._doc)
 * 
 *     def firstChild(self):             # <<<<<<<<<<<<<<
 *         node = self._thisptr.firstChild()
 *         return wrapnode(node, self._doc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_45firstChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_45firstChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("firstChild (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_44firstChild(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_44firstChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("firstChild", 0);

  /* "pybInkscape.pyx":245
 * 
 *     def firstChild(self):
 *         node = self._thisptr.firstChild()             # <<<<<<<<<<<<<<
 *         return wrapnode(node, self._doc)
 * 
 */
  __pyx_v_node = __pyx_v_self->_thisptr->firstChild();

  /* "pybInkscape.pyx":246
 *     def firstChild(self):
 *         node = self._thisptr.firstChild()
 *         return wrapnode(node, self._doc)             # <<<<<<<<<<<<<<
 * 
 *     def lastChild(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->_doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_node, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":244
 *         return wrapnode(node, self._doc)
 * 
 *     def firstChild(self):             # <<<<<<<<<<<<<<
 *         node = self._thisptr.firstChild()
 *         return wrapnode(node, self._doc)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.firstChild", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":248
 *         return wrapnode(node, self._doc)
 * 
 *     def lastChild(self):             # <<<<<<<<<<<<<<
 *         return wrapnode(self._thisptr.lastChild(), self._doc)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_47lastChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_47lastChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lastChild (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_46lastChild(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_46lastChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lastChild", 0);

  /* "pybInkscape.pyx":249
 * 
 *     def lastChild(self):
 *         return wrapnode(self._thisptr.lastChild(), self._doc)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->_doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_self->_thisptr->lastChild(), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":248
 *         return wrapnode(node, self._doc)
 * 
 *     def lastChild(self):             # <<<<<<<<<<<<<<
 *         return wrapnode(self._thisptr.lastChild(), self._doc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.lastChild", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":252
 * 
 *     @property
 *     def children(self):             # <<<<<<<<<<<<<<
 *         children = []
 *         child = self.firstChild()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_49children(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_49children(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("children (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_48children(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_48children(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_v_children = NULL;
  PyObject *__pyx_v_child = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("children", 0);

  /* "pybInkscape.pyx":253
 *     @property
 *     def children(self):
 *         children = []             # <<<<<<<<<<<<<<
 *         child = self.firstChild()
 *         while child:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_children = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":254
 *     def children(self):
 *         children = []
 *         child = self.firstChild()             # <<<<<<<<<<<<<<
 *         while child:
 *             children.append(child)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_firstChild); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_child = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":255
 *         children = []
 *         child = self.firstChild()
 *         while child:             # <<<<<<<<<<<<<<
 *             children.append(child)
 *             child = child.next()
 */
  while (1) {
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_child); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!__pyx_t_4) break;

    /* "pybInkscape.pyx":256
 *         child = self.firstChild()
 *         while child:
 *             children.append(child)             # <<<<<<<<<<<<<<
 *             child = child.next()
 *         return children
 */
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_children, __pyx_v_child); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pybInkscape.pyx":257
 *         while child:
 *             children.append(child)
 *             child = child.next()             # <<<<<<<<<<<<<<
 *         return children
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_child, __pyx_n_s_next); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_child, __pyx_t_1);
    __pyx_t_1 = 0;
  }

  /* "pybInkscape.pyx":258
 *             children.append(child)
 *             child = child.next()
 *         return children             # <<<<<<<<<<<<<<
 * 
 *     def nthChild(self, int index):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_children);
  __pyx_r = __pyx_v_children;
  goto __pyx_L0;

  /* "pybInkscape.pyx":252
 * 
 *     @property
 *     def children(self):             # <<<<<<<<<<<<<<
 *         children = []
 *         child = self.firstChild()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYNode.children", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_children);
  __Pyx_XDECREF(__pyx_v_child);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":260
 *         return children
 * 
 *     def nthChild(self, int index):             # <<<<<<<<<<<<<<
 *         node = self._thisptr.nthChild(index)
 *         return wrapnode(node, self._doc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_51nthChild(PyObject *__pyx_v_self, PyObject *__pyx_arg_index); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_51nthChild(PyObject *__pyx_v_self, PyObject *__pyx_arg_index) {
  int __pyx_v_index;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nthChild (wrapper)", 0);
  assert(__pyx_arg_index); {
    __pyx_v_index = __Pyx_PyInt_As_int(__pyx_arg_index); if (unlikely((__pyx_v_index == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.nthChild", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_50nthChild(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((int)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_50nthChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, int __pyx_v_index) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nthChild", 0);

  /* "pybInkscape.pyx":261
 * 
 *     def nthChild(self, int index):
 *         node = self._thisptr.nthChild(index)             # <<<<<<<<<<<<<<
 *         return wrapnode(node, self._doc)
 * 
 */
  __pyx_v_node = __pyx_v_self->_thisptr->nthChild(__pyx_v_index);

  /* "pybInkscape.pyx":262
 *     def nthChild(self, int index):
 *         node = self._thisptr.nthChild(index)
 *         return wrapnode(node, self._doc)             # <<<<<<<<<<<<<<
 * 
 *     def addChild(self, PYNode child, PYNode after):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->_doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_node, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":260
 *         return children
 * 
 *     def nthChild(self, int index):             # <<<<<<<<<<<<<<
 *         node = self._thisptr.nthChild(index)
 *         return wrapnode(node, self._doc)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNode.nthChild", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":264
 *         return wrapnode(node, self._doc)
 * 
 *     def addChild(self, PYNode child, PYNode after):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         _after = after._thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_53addChild(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_53addChild(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child = 0;
  struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_after = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addChild (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_child,&__pyx_n_s_after,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_after)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addChild", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addChild") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_child = ((struct __pyx_obj_11pybInkscape_PYNode *)values[0]);
    __pyx_v_after = ((struct __pyx_obj_11pybInkscape_PYNode *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addChild", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.addChild", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_child), __pyx_ptype_11pybInkscape_PYNode, 1, "child", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_after), __pyx_ptype_11pybInkscape_PYNode, 1, "after", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_52addChild(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_child, __pyx_v_after);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_52addChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_after) {
  Inkscape::XML::Node *__pyx_v__child;
  Inkscape::XML::Node *__pyx_v__after;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Inkscape::XML::Node *__pyx_t_1;
  __Pyx_RefNannySetupContext("addChild", 0);

  /* "pybInkscape.pyx":265
 * 
 *     def addChild(self, PYNode child, PYNode after):
 *         _child = child._thisptr             # <<<<<<<<<<<<<<
 *         _after = after._thisptr
 *         self._thisptr.addChild(_child, _after)
 */
  __pyx_t_1 = __pyx_v_child->_thisptr;
  __pyx_v__child = __pyx_t_1;

  /* "pybInkscape.pyx":266
 *     def addChild(self, PYNode child, PYNode after):
 *         _child = child._thisptr
 *         _after = after._thisptr             # <<<<<<<<<<<<<<
 *         self._thisptr.addChild(_child, _after)
 * 
 */
  __pyx_t_1 = __pyx_v_after->_thisptr;
  __pyx_v__after = __pyx_t_1;

  /* "pybInkscape.pyx":267
 *         _child = child._thisptr
 *         _after = after._thisptr
 *         self._thisptr.addChild(_child, _after)             # <<<<<<<<<<<<<<
 * 
 *     def appendChild(self, PYNode child):
 */
  __pyx_v_self->_thisptr->addChild(__pyx_v__child, __pyx_v__after);

  /* "pybInkscape.pyx":264
 *         return wrapnode(node, self._doc)
 * 
 *     def addChild(self, PYNode child, PYNode after):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         _after = after._thisptr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":269
 *         self._thisptr.addChild(_child, _after)
 * 
 *     def appendChild(self, PYNode child):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         self._thisptr.appendChild(_child)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_55appendChild(PyObject *__pyx_v_self, PyObject *__pyx_v_child); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_55appendChild(PyObject *__pyx_v_self, PyObject *__pyx_v_child) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("appendChild (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_child), __pyx_ptype_11pybInkscape_PYNode, 1, "child", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_54appendChild(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_child));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_54appendChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child) {
  Inkscape::XML::Node *__pyx_v__child;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Inkscape::XML::Node *__pyx_t_1;
  __Pyx_RefNannySetupContext("appendChild", 0);

  /* "pybInkscape.pyx":270
 * 
 *     def appendChild(self, PYNode child):
 *         _child = child._thisptr             # <<<<<<<<<<<<<<
 *         self._thisptr.appendChild(_child)
 * 
 */
  __pyx_t_1 = __pyx_v_child->_thisptr;
  __pyx_v__child = __pyx_t_1;

  /* "pybInkscape.pyx":271
 *     def appendChild(self, PYNode child):
 *         _child = child._thisptr
 *         self._thisptr.appendChild(_child)             # <<<<<<<<<<<<<<
 * 
 *     def removeChild(self, PYNode child):
 */
  __pyx_v_self->_thisptr->appendChild(__pyx_v__child);

  /* "pybInkscape.pyx":269
 *         self._thisptr.addChild(_child, _after)
 * 
 *     def appendChild(self, PYNode child):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         self._thisptr.appendChild(_child)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":273
 *         self._thisptr.appendChild(_child)
 * 
 *     def removeChild(self, PYNode child):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         self._thisptr.removeChild(_child)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_57removeChild(PyObject *__pyx_v_self, PyObject *__pyx_v_child); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_57removeChild(PyObject *__pyx_v_self, PyObject *__pyx_v_child) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeChild (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_child), __pyx_ptype_11pybInkscape_PYNode, 1, "child", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_56removeChild(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_child));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_56removeChild(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child) {
  Inkscape::XML::Node *__pyx_v__child;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Inkscape::XML::Node *__pyx_t_1;
  __Pyx_RefNannySetupContext("removeChild", 0);

  /* "pybInkscape.pyx":274
 * 
 *     def removeChild(self, PYNode child):
 *         _child = child._thisptr             # <<<<<<<<<<<<<<
 *         self._thisptr.removeChild(_child)
 * 
 */
  __pyx_t_1 = __pyx_v_child->_thisptr;
  __pyx_v__child = __pyx_t_1;

  /* "pybInkscape.pyx":275
 *     def removeChild(self, PYNode child):
 *         _child = child._thisptr
 *         self._thisptr.removeChild(_child)             # <<<<<<<<<<<<<<
 * 
 *     def changeOrder(self, PYNode child, PYNode after):
 */
  __pyx_v_self->_thisptr->removeChild(__pyx_v__child);

  /* "pybInkscape.pyx":273
 *         self._thisptr.appendChild(_child)
 * 
 *     def removeChild(self, PYNode child):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         self._thisptr.removeChild(_child)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":277
 *         self._thisptr.removeChild(_child)
 * 
 *     def changeOrder(self, PYNode child, PYNode after):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         _after = after._thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_59changeOrder(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_59changeOrder(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child = 0;
  struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_after = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("changeOrder (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_child,&__pyx_n_s_after,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_after)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("changeOrder", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "changeOrder") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_child = ((struct __pyx_obj_11pybInkscape_PYNode *)values[0]);
    __pyx_v_after = ((struct __pyx_obj_11pybInkscape_PYNode *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("changeOrder", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.changeOrder", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_child), __pyx_ptype_11pybInkscape_PYNode, 1, "child", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_after), __pyx_ptype_11pybInkscape_PYNode, 1, "after", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_58changeOrder(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_child, __pyx_v_after);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_58changeOrder(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_child, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_after) {
  Inkscape::XML::Node *__pyx_v__child;
  Inkscape::XML::Node *__pyx_v__after;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Inkscape::XML::Node *__pyx_t_1;
  __Pyx_RefNannySetupContext("changeOrder", 0);

  /* "pybInkscape.pyx":278
 * 
 *     def changeOrder(self, PYNode child, PYNode after):
 *         _child = child._thisptr             # <<<<<<<<<<<<<<
 *         _after = after._thisptr
 *         self._thisptr.changeOrder(_child, _after)
 */
  __pyx_t_1 = __pyx_v_child->_thisptr;
  __pyx_v__child = __pyx_t_1;

  /* "pybInkscape.pyx":279
 *     def changeOrder(self, PYNode child, PYNode after):
 *         _child = child._thisptr
 *         _after = after._thisptr             # <<<<<<<<<<<<<<
 *         self._thisptr.changeOrder(_child, _after)
 * 
 */
  __pyx_t_1 = __pyx_v_after->_thisptr;
  __pyx_v__after = __pyx_t_1;

  /* "pybInkscape.pyx":280
 *         _child = child._thisptr
 *         _after = after._thisptr
 *         self._thisptr.changeOrder(_child, _after)             # <<<<<<<<<<<<<<
 * 
 *     def mergeFrom(self, PYNode src, bytes key):
 */
  __pyx_v_self->_thisptr->changeOrder(__pyx_v__child, __pyx_v__after);

  /* "pybInkscape.pyx":277
 *         self._thisptr.removeChild(_child)
 * 
 *     def changeOrder(self, PYNode child, PYNode after):             # <<<<<<<<<<<<<<
 *         _child = child._thisptr
 *         _after = after._thisptr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":282
 *         self._thisptr.changeOrder(_child, _after)
 * 
 *     def mergeFrom(self, PYNode src, bytes key):             # <<<<<<<<<<<<<<
 *         _src = src._thisptr
 *         self._thisptr.mergeFrom(_src, <char *>key)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_61mergeFrom(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_61mergeFrom(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_src = 0;
  PyObject *__pyx_v_key = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mergeFrom (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_src,&__pyx_n_s_key,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_src)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("mergeFrom", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mergeFrom") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_src = ((struct __pyx_obj_11pybInkscape_PYNode *)values[0]);
    __pyx_v_key = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mergeFrom", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.mergeFrom", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_src), __pyx_ptype_11pybInkscape_PYNode, 1, "src", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key), (&PyBytes_Type), 1, "key", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_60mergeFrom(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_src, __pyx_v_key);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_60mergeFrom(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_src, PyObject *__pyx_v_key) {
  Inkscape::XML::Node *__pyx_v__src;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Inkscape::XML::Node *__pyx_t_1;
  char *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mergeFrom", 0);

  /* "pybInkscape.pyx":283
 * 
 *     def mergeFrom(self, PYNode src, bytes key):
 *         _src = src._thisptr             # <<<<<<<<<<<<<<
 *         self._thisptr.mergeFrom(_src, <char *>key)
 * 
 */
  __pyx_t_1 = __pyx_v_src->_thisptr;
  __pyx_v__src = __pyx_t_1;

  /* "pybInkscape.pyx":284
 *     def mergeFrom(self, PYNode src, bytes key):
 *         _src = src._thisptr
 *         self._thisptr.mergeFrom(_src, <char *>key)             # <<<<<<<<<<<<<<
 * 
 *     def overwriteWith(self, PYNode src):
 */
  __pyx_t_2 = __Pyx_PyObject_AsString(__pyx_v_key); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr->mergeFrom(__pyx_v__src, ((char *)__pyx_t_2));

  /* "pybInkscape.pyx":282
 *         self._thisptr.changeOrder(_child, _after)
 * 
 *     def mergeFrom(self, PYNode src, bytes key):             # <<<<<<<<<<<<<<
 *         _src = src._thisptr
 *         self._thisptr.mergeFrom(_src, <char *>key)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.mergeFrom", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":286
 *         self._thisptr.mergeFrom(_src, <char *>key)
 * 
 *     def overwriteWith(self, PYNode src):             # <<<<<<<<<<<<<<
 *         _src = src._thisptr
 *         self._thisptr.overwriteWith(_src)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_63overwriteWith(PyObject *__pyx_v_self, PyObject *__pyx_v_src); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_63overwriteWith(PyObject *__pyx_v_self, PyObject *__pyx_v_src) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("overwriteWith (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_src), __pyx_ptype_11pybInkscape_PYNode, 1, "src", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_62overwriteWith(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_src));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_62overwriteWith(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_src) {
  Inkscape::XML::Node *__pyx_v__src;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Inkscape::XML::Node *__pyx_t_1;
  __Pyx_RefNannySetupContext("overwriteWith", 0);

  /* "pybInkscape.pyx":287
 * 
 *     def overwriteWith(self, PYNode src):
 *         _src = src._thisptr             # <<<<<<<<<<<<<<
 *         self._thisptr.overwriteWith(_src)
 * 
 */
  __pyx_t_1 = __pyx_v_src->_thisptr;
  __pyx_v__src = __pyx_t_1;

  /* "pybInkscape.pyx":288
 *     def overwriteWith(self, PYNode src):
 *         _src = src._thisptr
 *         self._thisptr.overwriteWith(_src)             # <<<<<<<<<<<<<<
 * 
 *     def addObserver(self, PYNodeObserver observer):
 */
  __pyx_v_self->_thisptr->overwriteWith(__pyx_v__src);

  /* "pybInkscape.pyx":286
 *         self._thisptr.mergeFrom(_src, <char *>key)
 * 
 *     def overwriteWith(self, PYNode src):             # <<<<<<<<<<<<<<
 *         _src = src._thisptr
 *         self._thisptr.overwriteWith(_src)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":290
 *         self._thisptr.overwriteWith(_src)
 * 
 *     def addObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_65addObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_65addObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addObserver (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_observer), __pyx_ptype_11pybInkscape_PYNodeObserver, 1, "observer", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_64addObserver(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_observer));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_64addObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer) {
  void **__pyx_v_p_ptr;
  Inkscape::GC::Core *__pyx_v_core;
  Inkscape::XML::NodeObserver *__pyx_v_proxy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("addObserver", 0);

  /* "pybInkscape.pyx":291
 * 
 *     def addObserver(self, PYNodeObserver observer):
 *         if observer._proxy == NULL:             # <<<<<<<<<<<<<<
 *             observer._proxy = new NodeObserver_proxy(observer)
 *             p_ptr = <void **>addr(observer._proxy)
 */
  __pyx_t_1 = ((__pyx_v_observer->_proxy == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":292
 *     def addObserver(self, PYNodeObserver observer):
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)             # <<<<<<<<<<<<<<
 *             p_ptr = <void **>addr(observer._proxy)
 *             core = <pybgc.Core *>NULL
 */
    __pyx_v_observer->_proxy = new Inkscape::pybind::NodeObserver_proxy(((PyObject *)__pyx_v_observer));

    /* "pybInkscape.pyx":293
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)
 *             p_ptr = <void **>addr(observer._proxy)             # <<<<<<<<<<<<<<
 *             core = <pybgc.Core *>NULL
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 */
    __pyx_v_p_ptr = ((void **)(&__pyx_v_observer->_proxy));

    /* "pybInkscape.pyx":294
 *             observer._proxy = new NodeObserver_proxy(observer)
 *             p_ptr = <void **>addr(observer._proxy)
 *             core = <pybgc.Core *>NULL             # <<<<<<<<<<<<<<
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 *         proxy = <NodeObserver *>observer._proxy
 */
    __pyx_v_core = ((Inkscape::GC::Core *)NULL);

    /* "pybInkscape.pyx":295
 *             p_ptr = <void **>addr(observer._proxy)
 *             core = <pybgc.Core *>NULL
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)             # <<<<<<<<<<<<<<
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.addObserver(deref(proxy))
 */
    __pyx_v_core->general_register_disappearing_link(__pyx_v_p_ptr, __pyx_v_observer->_proxy);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":296
 *             core = <pybgc.Core *>NULL
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 *         proxy = <NodeObserver *>observer._proxy             # <<<<<<<<<<<<<<
 *         self._thisptr.addObserver(deref(proxy))
 *         observer._notify_add_observer(self)
 */
  __pyx_v_proxy = ((Inkscape::XML::NodeObserver *)__pyx_v_observer->_proxy);

  /* "pybInkscape.pyx":297
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.addObserver(deref(proxy))             # <<<<<<<<<<<<<<
 *         observer._notify_add_observer(self)
 * 
 */
  __pyx_v_self->_thisptr->addObserver((*__pyx_v_proxy));

  /* "pybInkscape.pyx":298
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.addObserver(deref(proxy))
 *         observer._notify_add_observer(self)             # <<<<<<<<<<<<<<
 * 
 *     def removeObserver(self, PYNodeObserver observer):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_observer), __pyx_n_s_notify_add_observer); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":290
 *         self._thisptr.overwriteWith(_src)
 * 
 *     def addObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pybInkscape.PYNode.addObserver", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":300
 *         observer._notify_add_observer(self)
 * 
 *     def removeObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.removeObserver(deref(proxy))
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_67removeObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_67removeObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeObserver (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_observer), __pyx_ptype_11pybInkscape_PYNodeObserver, 1, "observer", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_66removeObserver(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_observer));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_66removeObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer) {
  Inkscape::XML::NodeObserver *__pyx_v_proxy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeObserver", 0);

  /* "pybInkscape.pyx":301
 * 
 *     def removeObserver(self, PYNodeObserver observer):
 *         proxy = <NodeObserver *>observer._proxy             # <<<<<<<<<<<<<<
 *         self._thisptr.removeObserver(deref(proxy))
 * 
 */
  __pyx_v_proxy = ((Inkscape::XML::NodeObserver *)__pyx_v_observer->_proxy);

  /* "pybInkscape.pyx":302
 *     def removeObserver(self, PYNodeObserver observer):
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.removeObserver(deref(proxy))             # <<<<<<<<<<<<<<
 * 
 *     def addSubtreeObserver(self, PYNodeObserver observer):
 */
  __pyx_v_self->_thisptr->removeObserver((*__pyx_v_proxy));

  /* "pybInkscape.pyx":300
 *         observer._notify_add_observer(self)
 * 
 *     def removeObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.removeObserver(deref(proxy))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":304
 *         self._thisptr.removeObserver(deref(proxy))
 * 
 *     def addSubtreeObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_69addSubtreeObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_69addSubtreeObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addSubtreeObserver (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_observer), __pyx_ptype_11pybInkscape_PYNodeObserver, 1, "observer", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_68addSubtreeObserver(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_observer));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_68addSubtreeObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer) {
  void **__pyx_v_p_ptr;
  Inkscape::GC::Core *__pyx_v_core;
  Inkscape::XML::NodeObserver *__pyx_v_proxy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("addSubtreeObserver", 0);

  /* "pybInkscape.pyx":305
 * 
 *     def addSubtreeObserver(self, PYNodeObserver observer):
 *         if observer._proxy == NULL:             # <<<<<<<<<<<<<<
 *             observer._proxy = new NodeObserver_proxy(observer)
 *             p_ptr = <void **>addr(observer._proxy)
 */
  __pyx_t_1 = ((__pyx_v_observer->_proxy == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":306
 *     def addSubtreeObserver(self, PYNodeObserver observer):
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)             # <<<<<<<<<<<<<<
 *             p_ptr = <void **>addr(observer._proxy)
 *             core = <pybgc.Core *>NULL
 */
    __pyx_v_observer->_proxy = new Inkscape::pybind::NodeObserver_proxy(((PyObject *)__pyx_v_observer));

    /* "pybInkscape.pyx":307
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)
 *             p_ptr = <void **>addr(observer._proxy)             # <<<<<<<<<<<<<<
 *             core = <pybgc.Core *>NULL
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 */
    __pyx_v_p_ptr = ((void **)(&__pyx_v_observer->_proxy));

    /* "pybInkscape.pyx":308
 *             observer._proxy = new NodeObserver_proxy(observer)
 *             p_ptr = <void **>addr(observer._proxy)
 *             core = <pybgc.Core *>NULL             # <<<<<<<<<<<<<<
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 *         proxy = <NodeObserver *>observer._proxy
 */
    __pyx_v_core = ((Inkscape::GC::Core *)NULL);

    /* "pybInkscape.pyx":309
 *             p_ptr = <void **>addr(observer._proxy)
 *             core = <pybgc.Core *>NULL
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)             # <<<<<<<<<<<<<<
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.addSubtreeObserver(deref(proxy))
 */
    __pyx_v_core->general_register_disappearing_link(__pyx_v_p_ptr, __pyx_v_observer->_proxy);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":310
 *             core = <pybgc.Core *>NULL
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 *         proxy = <NodeObserver *>observer._proxy             # <<<<<<<<<<<<<<
 *         self._thisptr.addSubtreeObserver(deref(proxy))
 *         observer._notify_add_observer(self)
 */
  __pyx_v_proxy = ((Inkscape::XML::NodeObserver *)__pyx_v_observer->_proxy);

  /* "pybInkscape.pyx":311
 *             core.general_register_disappearing_link(p_ptr, observer._proxy)
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.addSubtreeObserver(deref(proxy))             # <<<<<<<<<<<<<<
 *         observer._notify_add_observer(self)
 * 
 */
  __pyx_v_self->_thisptr->addSubtreeObserver((*__pyx_v_proxy));

  /* "pybInkscape.pyx":312
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.addSubtreeObserver(deref(proxy))
 *         observer._notify_add_observer(self)             # <<<<<<<<<<<<<<
 * 
 *     def removeSubtreeObserver(self, PYNodeObserver observer):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_observer), __pyx_n_s_notify_add_observer); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":304
 *         self._thisptr.removeObserver(deref(proxy))
 * 
 *     def addSubtreeObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         if observer._proxy == NULL:
 *             observer._proxy = new NodeObserver_proxy(observer)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pybInkscape.PYNode.addSubtreeObserver", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":314
 *         observer._notify_add_observer(self)
 * 
 *     def removeSubtreeObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.removeSubtreeObserver(deref(proxy))
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_71removeSubtreeObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_71removeSubtreeObserver(PyObject *__pyx_v_self, PyObject *__pyx_v_observer) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeSubtreeObserver (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_observer), __pyx_ptype_11pybInkscape_PYNodeObserver, 1, "observer", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_70removeSubtreeObserver(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_observer));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_70removeSubtreeObserver(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_observer) {
  Inkscape::XML::NodeObserver *__pyx_v_proxy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeSubtreeObserver", 0);

  /* "pybInkscape.pyx":315
 * 
 *     def removeSubtreeObserver(self, PYNodeObserver observer):
 *         proxy = <NodeObserver *>observer._proxy             # <<<<<<<<<<<<<<
 *         self._thisptr.removeSubtreeObserver(deref(proxy))
 * 
 */
  __pyx_v_proxy = ((Inkscape::XML::NodeObserver *)__pyx_v_observer->_proxy);

  /* "pybInkscape.pyx":316
 *     def removeSubtreeObserver(self, PYNodeObserver observer):
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.removeSubtreeObserver(deref(proxy))             # <<<<<<<<<<<<<<
 * 
 *     def duplicate(self, PYDocument doc=None):
 */
  __pyx_v_self->_thisptr->removeSubtreeObserver((*__pyx_v_proxy));

  /* "pybInkscape.pyx":314
 *         observer._notify_add_observer(self)
 * 
 *     def removeSubtreeObserver(self, PYNodeObserver observer):             # <<<<<<<<<<<<<<
 *         proxy = <NodeObserver *>observer._proxy
 *         self._thisptr.removeSubtreeObserver(deref(proxy))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":318
 *         self._thisptr.removeSubtreeObserver(deref(proxy))
 * 
 *     def duplicate(self, PYDocument doc=None):             # <<<<<<<<<<<<<<
 *         #Should call Inkscape::GC::release on the new node after addition...
 *         if doc == None:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_73duplicate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_73duplicate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("duplicate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_doc,0};
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_11pybInkscape_PYDocument *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_doc);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "duplicate") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_doc = ((struct __pyx_obj_11pybInkscape_PYDocument *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("duplicate", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNode.duplicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_doc), __pyx_ptype_11pybInkscape_PYDocument, 1, "doc", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_72duplicate(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), __pyx_v_doc);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_72duplicate(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc) {
  struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_pydoc = NULL;
  Inkscape::XML::Node *__pyx_v_node;
  Inkscape::XML::Document *__pyx_v_docptr;
  PyObject *__pyx_v_node_co = NULL;
  struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Inkscape::XML::Document *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("duplicate", 0);

  /* "pybInkscape.pyx":320
 *     def duplicate(self, PYDocument doc=None):
 *         #Should call Inkscape::GC::release on the new node after addition...
 *         if doc == None:             # <<<<<<<<<<<<<<
 *           pydoc = <PYDocument>self._doc
 *           node = self._thisptr.duplicate(pydoc._back_doc)
 */
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)__pyx_v_doc), Py_None, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":321
 *         #Should call Inkscape::GC::release on the new node after addition...
 *         if doc == None:
 *           pydoc = <PYDocument>self._doc             # <<<<<<<<<<<<<<
 *           node = self._thisptr.duplicate(pydoc._back_doc)
 *         else:
 */
    __pyx_t_1 = __pyx_v_self->_doc;
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v_pydoc = ((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "pybInkscape.pyx":322
 *         if doc == None:
 *           pydoc = <PYDocument>self._doc
 *           node = self._thisptr.duplicate(pydoc._back_doc)             # <<<<<<<<<<<<<<
 *         else:
 *           docptr = doc._back_doc
 */
    __pyx_v_node = __pyx_v_self->_thisptr->duplicate(__pyx_v_pydoc->_back_doc);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pybInkscape.pyx":324
 *           node = self._thisptr.duplicate(pydoc._back_doc)
 *         else:
 *           docptr = doc._back_doc             # <<<<<<<<<<<<<<
 *           node = self._thisptr.duplicate(docptr)
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 */
    __pyx_t_3 = __pyx_v_doc->_back_doc;
    __pyx_v_docptr = __pyx_t_3;

    /* "pybInkscape.pyx":325
 *         else:
 *           docptr = doc._back_doc
 *           node = self._thisptr.duplicate(docptr)             # <<<<<<<<<<<<<<
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 *         wrapper = PYNode(node_co, doc)
 */
    __pyx_v_node = __pyx_v_self->_thisptr->duplicate(__pyx_v_docptr);
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":326
 *           docptr = doc._back_doc
 *           node = self._thisptr.duplicate(docptr)
 *         node_co = PyCObject_FromVoidPtr(node, NULL)             # <<<<<<<<<<<<<<
 *         wrapper = PYNode(node_co, doc)
 *         return wrapper
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(__pyx_v_node, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_node_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":327
 *           node = self._thisptr.duplicate(docptr)
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 *         wrapper = PYNode(node_co, doc)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_node_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_node_co);
  __Pyx_GIVEREF(__pyx_v_node_co);
  __Pyx_INCREF(((PyObject *)__pyx_v_doc));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_doc));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_doc));
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_wrapper = ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "pybInkscape.pyx":328
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 *         wrapper = PYNode(node_co, doc)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def getCenter(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":318
 *         self._thisptr.removeSubtreeObserver(deref(proxy))
 * 
 *     def duplicate(self, PYDocument doc=None):             # <<<<<<<<<<<<<<
 *         #Should call Inkscape::GC::release on the new node after addition...
 *         if doc == None:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.PYNode.duplicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_pydoc);
  __Pyx_XDECREF(__pyx_v_node_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":330
 *         return wrapper
 * 
 *     def getCenter(self):             # <<<<<<<<<<<<<<
 *         spitem = self._get_spitem()
 *         if not spitem:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_75getCenter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_75getCenter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getCenter (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_74getCenter(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_74getCenter(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  SPItem *__pyx_v_spitem;
  Geom::Point __pyx_v_point;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getCenter", 0);

  /* "pybInkscape.pyx":331
 * 
 *     def getCenter(self):
 *         spitem = self._get_spitem()             # <<<<<<<<<<<<<<
 *         if not spitem:
 *             return None
 */
  __pyx_v_spitem = ((struct __pyx_vtabstruct_11pybInkscape_PYNode *)__pyx_v_self->__pyx_vtab)->_get_spitem(__pyx_v_self);

  /* "pybInkscape.pyx":332
 *     def getCenter(self):
 *         spitem = self._get_spitem()
 *         if not spitem:             # <<<<<<<<<<<<<<
 *             return None
 *         point = spitem.getCenter()
 */
  __pyx_t_1 = ((!(__pyx_v_spitem != 0)) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":333
 *         spitem = self._get_spitem()
 *         if not spitem:
 *             return None             # <<<<<<<<<<<<<<
 *         point = spitem.getCenter()
 *         return [point[0],point[1]]
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":334
 *         if not spitem:
 *             return None
 *         point = spitem.getCenter()             # <<<<<<<<<<<<<<
 *         return [point[0],point[1]]
 * 
 */
  __pyx_v_point = __pyx_v_spitem->getCenter();

  /* "pybInkscape.pyx":335
 *             return None
 *         point = spitem.getCenter()
 *         return [point[0],point[1]]             # <<<<<<<<<<<<<<
 * 
 * cdef class PYElementNode(PYNode):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_point[0])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_point[1])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":330
 *         return wrapper
 * 
 *     def getCenter(self):             # <<<<<<<<<<<<<<
 *         spitem = self._get_spitem()
 *         if not spitem:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.PYNode.getCenter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":77
 * cdef class PYNode(object):
 *     cdef Node *_thisptr
 *     cdef public object _doc             # <<<<<<<<<<<<<<
 *     cdef public object pystore
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_4_doc_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_4_doc_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_4_doc___get__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_4_doc___get__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_doc);
  __pyx_r = __pyx_v_self->_doc;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_4_doc_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_4_doc_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_4_doc_2__set__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode_4_doc_2__set__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_doc);
  __Pyx_DECREF(__pyx_v_self->_doc);
  __pyx_v_self->_doc = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_4_doc_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_4_doc_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_4_doc_4__del__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode_4_doc_4__del__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_doc);
  __Pyx_DECREF(__pyx_v_self->_doc);
  __pyx_v_self->_doc = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":78
 *     cdef Node *_thisptr
 *     cdef public object _doc
 *     cdef public object pystore             # <<<<<<<<<<<<<<
 * 
 *     DOCUMENT_NODE = 0
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYNode_7pystore_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYNode_7pystore_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_7pystore___get__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYNode_7pystore___get__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->pystore);
  __pyx_r = __pyx_v_self->pystore;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_7pystore_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_7pystore_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_7pystore_2__set__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode_7pystore_2__set__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->pystore);
  __Pyx_DECREF(__pyx_v_self->pystore);
  __pyx_v_self->pystore = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYNode_7pystore_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11pybInkscape_6PYNode_7pystore_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6PYNode_7pystore_4__del__(((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYNode_7pystore_4__del__(struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->pystore);
  __Pyx_DECREF(__pyx_v_self->pystore);
  __pyx_v_self->pystore = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":338
 * 
 * cdef class PYElementNode(PYNode):
 *     def __init__(self, bytes name, PYDocument doc, *args):             # <<<<<<<<<<<<<<
 *         node = doc._back_doc.createElement(<char *>name)
 *         if node == NULL:
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_13PYElementNode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_13PYElementNode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 2) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 2, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return -1;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_doc,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_doc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 2) ? pos_args : 2;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_name = ((PyObject*)values[0]);
    __pyx_v_doc = ((struct __pyx_obj_11pybInkscape_PYDocument *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("pybInkscape.PYElementNode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyBytes_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_doc), __pyx_ptype_11pybInkscape_PYDocument, 1, "doc", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_13PYElementNode___init__(((struct __pyx_obj_11pybInkscape_PYElementNode *)__pyx_v_self), __pyx_v_name, __pyx_v_doc, __pyx_v_args);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_13PYElementNode___init__(struct __pyx_obj_11pybInkscape_PYElementNode *__pyx_v_self, PyObject *__pyx_v_name, struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc, CYTHON_UNUSED PyObject *__pyx_v_args) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_v_ptr_co = NULL;
  Inkscape::XML::Node *__pyx_v__repr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  void *__pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pybInkscape.pyx":339
 * cdef class PYElementNode(PYNode):
 *     def __init__(self, bytes name, PYDocument doc, *args):
 *         node = doc._back_doc.createElement(<char *>name)             # <<<<<<<<<<<<<<
 *         if node == NULL:
 *             raise MemoryError, 'cannot create an element'
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_node = __pyx_v_doc->_back_doc->createElement(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":340
 *     def __init__(self, bytes name, PYDocument doc, *args):
 *         node = doc._back_doc.createElement(<char *>name)
 *         if node == NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError, 'cannot create an element'
 *         ptr_co = PyCObject_FromVoidPtr(node, NULL)
 */
  __pyx_t_2 = ((__pyx_v_node == NULL) != 0);
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":341
 *         node = doc._back_doc.createElement(<char *>name)
 *         if node == NULL:
 *             raise MemoryError, 'cannot create an element'             # <<<<<<<<<<<<<<
 *         ptr_co = PyCObject_FromVoidPtr(node, NULL)
 * 
 */
    __Pyx_Raise(__pyx_builtin_MemoryError, __pyx_kp_s_cannot_create_an_element, 0, 0);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pybInkscape.pyx":342
 *         if node == NULL:
 *             raise MemoryError, 'cannot create an element'
 *         ptr_co = PyCObject_FromVoidPtr(node, NULL)             # <<<<<<<<<<<<<<
 * 
 *         assert PyCObject_Check(ptr_co)
 */
  __pyx_t_3 = PyCObject_FromVoidPtr(__pyx_v_node, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_ptr_co = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":344
 *         ptr_co = PyCObject_FromVoidPtr(node, NULL)
 * 
 *         assert PyCObject_Check(ptr_co)             # <<<<<<<<<<<<<<
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = _repr
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(PyCObject_Check(__pyx_v_ptr_co) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "pybInkscape.pyx":345
 * 
 *         assert PyCObject_Check(ptr_co)
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)             # <<<<<<<<<<<<<<
 *         self._thisptr = _repr
 *         self._doc = doc
 */
  __pyx_t_4 = PyCObject_AsVoidPtr(__pyx_v_ptr_co); if (unlikely(__pyx_t_4 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__repr = ((Inkscape::XML::Node *)__pyx_t_4);

  /* "pybInkscape.pyx":346
 *         assert PyCObject_Check(ptr_co)
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = _repr             # <<<<<<<<<<<<<<
 *         self._doc = doc
 *         self.pystore = {}
 */
  __pyx_v_self->__pyx_base._thisptr = __pyx_v__repr;

  /* "pybInkscape.pyx":347
 *         _repr = <Node *>PyCObject_AsVoidPtr(ptr_co)
 *         self._thisptr = _repr
 *         self._doc = doc             # <<<<<<<<<<<<<<
 *         self.pystore = {}
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_doc));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_doc));
  __Pyx_GOTREF(__pyx_v_self->__pyx_base._doc);
  __Pyx_DECREF(__pyx_v_self->__pyx_base._doc);
  __pyx_v_self->__pyx_base._doc = ((PyObject *)__pyx_v_doc);

  /* "pybInkscape.pyx":348
 *         self._thisptr = _repr
 *         self._doc = doc
 *         self.pystore = {}             # <<<<<<<<<<<<<<
 * 
 * ## \page how_det_layers How to detect adding and removing layers?
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base.pystore);
  __Pyx_DECREF(__pyx_v_self->__pyx_base.pystore);
  __pyx_v_self->__pyx_base.pystore = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":338
 * 
 * cdef class PYElementNode(PYNode):
 *     def __init__(self, bytes name, PYDocument doc, *args):             # <<<<<<<<<<<<<<
 *         node = doc._back_doc.createElement(<char *>name)
 *         if node == NULL:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYElementNode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ptr_co);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":366
 *     cdef PYSPDocument _pyspdoc
 * 
 *     def __cinit__(self, ptr_co, node, PYSPDocument pyspdoc, doc_co, *args):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(doc_co)
 *         self._pyspdoc = pyspdoc
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_10PYDocument_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_10PYDocument_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_ptr_co = 0;
  CYTHON_UNUSED PyObject *__pyx_v_node = 0;
  struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_pyspdoc = 0;
  PyObject *__pyx_v_doc_co = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 4) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 4, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return -1;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr_co,&__pyx_n_s_node,&__pyx_n_s_pyspdoc,&__pyx_n_s_doc_co,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr_co)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyspdoc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_doc_co)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 4) ? pos_args : 4;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_ptr_co = values[0];
    __pyx_v_node = values[1];
    __pyx_v_pyspdoc = ((struct __pyx_obj_11pybInkscape_PYSPDocument *)values[2]);
    __pyx_v_doc_co = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("pybInkscape.PYDocument.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pyspdoc), __pyx_ptype_11pybInkscape_PYSPDocument, 1, "pyspdoc", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument___cinit__(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self), __pyx_v_ptr_co, __pyx_v_node, __pyx_v_pyspdoc, __pyx_v_doc_co, __pyx_v_args);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_10PYDocument___cinit__(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_ptr_co, CYTHON_UNUSED PyObject *__pyx_v_node, struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_pyspdoc, PyObject *__pyx_v_doc_co, CYTHON_UNUSED PyObject *__pyx_v_args) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":367
 * 
 *     def __cinit__(self, ptr_co, node, PYSPDocument pyspdoc, doc_co, *args):
 *         assert PyCObject_Check(doc_co)             # <<<<<<<<<<<<<<
 *         self._pyspdoc = pyspdoc
 *         self._back_doc = <Document *>PyCObject_AsVoidPtr(doc_co)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(PyCObject_Check(__pyx_v_doc_co) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "pybInkscape.pyx":368
 *     def __cinit__(self, ptr_co, node, PYSPDocument pyspdoc, doc_co, *args):
 *         assert PyCObject_Check(doc_co)
 *         self._pyspdoc = pyspdoc             # <<<<<<<<<<<<<<
 *         self._back_doc = <Document *>PyCObject_AsVoidPtr(doc_co)
 *         self._doc = self    # It is assigned to None by PYNode.
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_pyspdoc));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_pyspdoc));
  __Pyx_GOTREF(__pyx_v_self->_pyspdoc);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_pyspdoc));
  __pyx_v_self->_pyspdoc = __pyx_v_pyspdoc;

  /* "pybInkscape.pyx":369
 *         assert PyCObject_Check(doc_co)
 *         self._pyspdoc = pyspdoc
 *         self._back_doc = <Document *>PyCObject_AsVoidPtr(doc_co)             # <<<<<<<<<<<<<<
 *         self._doc = self    # It is assigned to None by PYNode.
 *                                 # \see PYSPDocument.rdoc().  But, it
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_doc_co); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_back_doc = ((Inkscape::XML::Document *)__pyx_t_1);

  /* "pybInkscape.pyx":370
 *         self._pyspdoc = pyspdoc
 *         self._back_doc = <Document *>PyCObject_AsVoidPtr(doc_co)
 *         self._doc = self    # It is assigned to None by PYNode.             # <<<<<<<<<<<<<<
 *                                 # \see PYSPDocument.rdoc().  But, it
 *                                 # should point back to PYDocument
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_self->__pyx_base._doc);
  __Pyx_DECREF(__pyx_v_self->__pyx_base._doc);
  __pyx_v_self->__pyx_base._doc = ((PyObject *)__pyx_v_self);

  /* "pybInkscape.pyx":366
 *     cdef PYSPDocument _pyspdoc
 * 
 *     def __cinit__(self, ptr_co, node, PYSPDocument pyspdoc, doc_co, *args):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(doc_co)
 *         self._pyspdoc = pyspdoc
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYDocument.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":375
 *                                 # it-self.
 * 
 *     def __init__(self, ptr_co, PYDocument doc, *args):             # <<<<<<<<<<<<<<
 *         PYNode.__init__(self, ptr_co, self._doc, *args)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_10PYDocument_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_10PYDocument_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr_co = 0;
  CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 2) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 2, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return -1;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr_co,&__pyx_n_s_doc,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr_co)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_doc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 2) ? pos_args : 2;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ptr_co = values[0];
    __pyx_v_doc = ((struct __pyx_obj_11pybInkscape_PYDocument *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("pybInkscape.PYDocument.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_doc), __pyx_ptype_11pybInkscape_PYDocument, 1, "doc", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_2__init__(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self), __pyx_v_ptr_co, __pyx_v_doc, __pyx_v_args);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_10PYDocument_2__init__(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_ptr_co, CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_doc, PyObject *__pyx_v_args) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pybInkscape.pyx":376
 * 
 *     def __init__(self, ptr_co, PYDocument doc, *args):
 *         PYNode.__init__(self, ptr_co, self._doc, *args)             # <<<<<<<<<<<<<<
 * 
 *     #
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_n_s_init); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_ptr_co);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_ptr_co);
  __Pyx_GIVEREF(__pyx_v_ptr_co);
  __Pyx_INCREF(__pyx_v_self->__pyx_base._doc);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_self->__pyx_base._doc);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base._doc);
  __pyx_t_3 = PySequence_Tuple(__pyx_v_args); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pybInkscape.pyx":375
 *                                 # it-self.
 * 
 *     def __init__(self, ptr_co, PYDocument doc, *args):             # <<<<<<<<<<<<<<
 *         PYNode.__init__(self, ptr_co, self._doc, *args)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.PYDocument.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":385
 *     #
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_5root(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_5root(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("root (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_4root(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_4root(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self) {
  Inkscape::XML::Node *__pyx_v_root;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("root", 0);

  /* "pybInkscape.pyx":386
 *     @property
 *     def root(self):
 *         root = self._thisptr.root()             # <<<<<<<<<<<<<<
 *         return wrapnode(root, self._doc)
 * 
 */
  __pyx_v_root = __pyx_v_self->__pyx_base._thisptr->root();

  /* "pybInkscape.pyx":387
 *     def root(self):
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)             # <<<<<<<<<<<<<<
 * 
 *     def inTransaction(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->__pyx_base._doc;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_root, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":385
 *     #
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYDocument.root", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":389
 *         return wrapnode(root, self._doc)
 * 
 *     def inTransaction(self):             # <<<<<<<<<<<<<<
 *         r = self._back_doc.inTransaction()
 *         return r
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_7inTransaction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_7inTransaction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inTransaction (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_6inTransaction(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_6inTransaction(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self) {
  int __pyx_v_r;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inTransaction", 0);

  /* "pybInkscape.pyx":390
 * 
 *     def inTransaction(self):
 *         r = self._back_doc.inTransaction()             # <<<<<<<<<<<<<<
 *         return r
 * 
 */
  __pyx_v_r = __pyx_v_self->_back_doc->inTransaction();

  /* "pybInkscape.pyx":391
 *     def inTransaction(self):
 *         r = self._back_doc.inTransaction()
 *         return r             # <<<<<<<<<<<<<<
 * 
 *     def beginTransaction(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_r); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":389
 *         return wrapnode(root, self._doc)
 * 
 *     def inTransaction(self):             # <<<<<<<<<<<<<<
 *         r = self._back_doc.inTransaction()
 *         return r
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYDocument.inTransaction", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":393
 *         return r
 * 
 *     def beginTransaction(self):             # <<<<<<<<<<<<<<
 *         self._back_doc.beginTransaction()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_9beginTransaction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_9beginTransaction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("beginTransaction (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_8beginTransaction(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_8beginTransaction(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("beginTransaction", 0);

  /* "pybInkscape.pyx":394
 * 
 *     def beginTransaction(self):
 *         self._back_doc.beginTransaction()             # <<<<<<<<<<<<<<
 * 
 *     def rollback(self):
 */
  __pyx_v_self->_back_doc->beginTransaction();

  /* "pybInkscape.pyx":393
 *         return r
 * 
 *     def beginTransaction(self):             # <<<<<<<<<<<<<<
 *         self._back_doc.beginTransaction()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":396
 *         self._back_doc.beginTransaction()
 * 
 *     def rollback(self):             # <<<<<<<<<<<<<<
 *         self._back_doc.rollback()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_11rollback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_11rollback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rollback (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_10rollback(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_10rollback(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rollback", 0);

  /* "pybInkscape.pyx":397
 * 
 *     def rollback(self):
 *         self._back_doc.rollback()             # <<<<<<<<<<<<<<
 * 
 *     def commit(self):
 */
  __pyx_v_self->_back_doc->rollback();

  /* "pybInkscape.pyx":396
 *         self._back_doc.beginTransaction()
 * 
 *     def rollback(self):             # <<<<<<<<<<<<<<
 *         self._back_doc.rollback()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":399
 *         self._back_doc.rollback()
 * 
 *     def commit(self):             # <<<<<<<<<<<<<<
 *         self._back_doc.commit()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_13commit(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_13commit(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("commit (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_12commit(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_12commit(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("commit", 0);

  /* "pybInkscape.pyx":400
 * 
 *     def commit(self):
 *         self._back_doc.commit()             # <<<<<<<<<<<<<<
 * 
 *     def createElement(self, bytes name):
 */
  __pyx_v_self->_back_doc->commit();

  /* "pybInkscape.pyx":399
 *         self._back_doc.rollback()
 * 
 *     def commit(self):             # <<<<<<<<<<<<<<
 *         self._back_doc.commit()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":402
 *         self._back_doc.commit()
 * 
 *     def createElement(self, bytes name):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createElement(<char *>name)
 *         return wrapnode(node, self._doc, True)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_15createElement(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_15createElement(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createElement (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyBytes_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_14createElement(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self), ((PyObject*)__pyx_v_name));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_14createElement(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_name) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_opt_args_11pybInkscape_wrapnode __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createElement", 0);

  /* "pybInkscape.pyx":403
 * 
 *     def createElement(self, bytes name):
 *         node = self._back_doc.createElement(<char *>name)             # <<<<<<<<<<<<<<
 *         return wrapnode(node, self._doc, True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_node = __pyx_v_self->_back_doc->createElement(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":404
 *     def createElement(self, bytes name):
 *         node = self._back_doc.createElement(<char *>name)
 *         return wrapnode(node, self._doc, True)             # <<<<<<<<<<<<<<
 * 
 *     def createTextNode(self, bytes content):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_v_self->__pyx_base._doc;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_4.__pyx_n = 1;
  __pyx_t_4.memoryerror = Py_True;
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_node, __pyx_t_2, &__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":402
 *         self._back_doc.commit()
 * 
 *     def createElement(self, bytes name):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createElement(<char *>name)
 *         return wrapnode(node, self._doc, True)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYDocument.createElement", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":406
 *         return wrapnode(node, self._doc, True)
 * 
 *     def createTextNode(self, bytes content):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createTextNode(<char *>content)
 *         return wrapnode(node, self._doc, True)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_17createTextNode(PyObject *__pyx_v_self, PyObject *__pyx_v_content); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_17createTextNode(PyObject *__pyx_v_self, PyObject *__pyx_v_content) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createTextNode (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_content), (&PyBytes_Type), 1, "content", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_16createTextNode(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self), ((PyObject*)__pyx_v_content));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_16createTextNode(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_content) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_opt_args_11pybInkscape_wrapnode __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createTextNode", 0);

  /* "pybInkscape.pyx":407
 * 
 *     def createTextNode(self, bytes content):
 *         node = self._back_doc.createTextNode(<char *>content)             # <<<<<<<<<<<<<<
 *         return wrapnode(node, self._doc, True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_content); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_node = __pyx_v_self->_back_doc->createTextNode(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":408
 *     def createTextNode(self, bytes content):
 *         node = self._back_doc.createTextNode(<char *>content)
 *         return wrapnode(node, self._doc, True)             # <<<<<<<<<<<<<<
 * 
 *     def createComment(self, bytes content):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_v_self->__pyx_base._doc;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_4.__pyx_n = 1;
  __pyx_t_4.memoryerror = Py_True;
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_node, __pyx_t_2, &__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":406
 *         return wrapnode(node, self._doc, True)
 * 
 *     def createTextNode(self, bytes content):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createTextNode(<char *>content)
 *         return wrapnode(node, self._doc, True)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYDocument.createTextNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":410
 *         return wrapnode(node, self._doc, True)
 * 
 *     def createComment(self, bytes content):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createComment(<char *>content)
 *         return wrapnode(node, self._doc, True)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_19createComment(PyObject *__pyx_v_self, PyObject *__pyx_v_content); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_19createComment(PyObject *__pyx_v_self, PyObject *__pyx_v_content) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createComment (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_content), (&PyBytes_Type), 1, "content", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_18createComment(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self), ((PyObject*)__pyx_v_content));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_18createComment(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_content) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_opt_args_11pybInkscape_wrapnode __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createComment", 0);

  /* "pybInkscape.pyx":411
 * 
 *     def createComment(self, bytes content):
 *         node = self._back_doc.createComment(<char *>content)             # <<<<<<<<<<<<<<
 *         return wrapnode(node, self._doc, True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_content); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_node = __pyx_v_self->_back_doc->createComment(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":412
 *     def createComment(self, bytes content):
 *         node = self._back_doc.createComment(<char *>content)
 *         return wrapnode(node, self._doc, True)             # <<<<<<<<<<<<<<
 * 
 *     def createPI(self, bytes target, bytes content):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_v_self->__pyx_base._doc;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_4.__pyx_n = 1;
  __pyx_t_4.memoryerror = Py_True;
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_node, __pyx_t_2, &__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":410
 *         return wrapnode(node, self._doc, True)
 * 
 *     def createComment(self, bytes content):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createComment(<char *>content)
 *         return wrapnode(node, self._doc, True)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYDocument.createComment", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":414
 *         return wrapnode(node, self._doc, True)
 * 
 *     def createPI(self, bytes target, bytes content):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createPI(<char *>target, <char *>content)
 *         return wrapnode(node, self._doc, True)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_21createPI(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_21createPI(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_target = 0;
  PyObject *__pyx_v_content = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createPI (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_target,&__pyx_n_s_content,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_target)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_content)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("createPI", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "createPI") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_target = ((PyObject*)values[0]);
    __pyx_v_content = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("createPI", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYDocument.createPI", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_target), (&PyBytes_Type), 1, "target", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_content), (&PyBytes_Type), 1, "content", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_20createPI(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self), __pyx_v_target, __pyx_v_content);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_20createPI(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self, PyObject *__pyx_v_target, PyObject *__pyx_v_content) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  char *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  struct __pyx_opt_args_11pybInkscape_wrapnode __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createPI", 0);

  /* "pybInkscape.pyx":415
 * 
 *     def createPI(self, bytes target, bytes content):
 *         node = self._back_doc.createPI(<char *>target, <char *>content)             # <<<<<<<<<<<<<<
 *         return wrapnode(node, self._doc, True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_target); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_AsString(__pyx_v_content); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_node = __pyx_v_self->_back_doc->createPI(((char *)__pyx_t_1), ((char *)__pyx_t_2));

  /* "pybInkscape.pyx":416
 *     def createPI(self, bytes target, bytes content):
 *         node = self._back_doc.createPI(<char *>target, <char *>content)
 *         return wrapnode(node, self._doc, True)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __pyx_v_self->__pyx_base._doc;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5.__pyx_n = 1;
  __pyx_t_5.memoryerror = Py_True;
  __pyx_t_4 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_node, __pyx_t_3, &__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":414
 *         return wrapnode(node, self._doc, True)
 * 
 *     def createPI(self, bytes target, bytes content):             # <<<<<<<<<<<<<<
 *         node = self._back_doc.createPI(<char *>target, <char *>content)
 *         return wrapnode(node, self._doc, True)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.PYDocument.createPI", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":419
 * 
 *     @property
 *     def spdoc(self):             # <<<<<<<<<<<<<<
 *         return self._pyspdoc
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_23spdoc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDocument_23spdoc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("spdoc (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDocument_22spdoc(((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDocument_22spdoc(struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("spdoc", 0);

  /* "pybInkscape.pyx":420
 *     @property
 *     def spdoc(self):
 *         return self._pyspdoc             # <<<<<<<<<<<<<<
 * 
 * cdef class PYSPObject(GObject):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_pyspdoc));
  __pyx_r = ((PyObject *)__pyx_v_self->_pyspdoc);
  goto __pyx_L0;

  /* "pybInkscape.pyx":419
 * 
 *     @property
 *     def spdoc(self):             # <<<<<<<<<<<<<<
 *         return self._pyspdoc
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":424
 * cdef class PYSPObject(GObject):
 *     @property
 *     def repr(self):             # <<<<<<<<<<<<<<
 *         if not hasattr(self, '_repr'):
 *             _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_1repr(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_1repr(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("repr (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_repr(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_repr(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  PyObject *__pyx_v_pyspdoc = NULL;
  PyObject *__pyx_v_pydoc = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("repr", 0);

  /* "pybInkscape.pyx":425
 *     @property
 *     def repr(self):
 *         if not hasattr(self, '_repr'):             # <<<<<<<<<<<<<<
 *             _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *             #repr_co = PyCObject_FromVoidPtr(_thisptr.repr, NULL)
 */
  __pyx_t_1 = PyObject_HasAttr(((PyObject *)__pyx_v_self), __pyx_n_s_repr); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":426
 *     def repr(self):
 *         if not hasattr(self, '_repr'):
 *             _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *             #repr_co = PyCObject_FromVoidPtr(_thisptr.repr, NULL)
 *             pyspdoc = self._get_pyspdoc()
 */
    __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

    /* "pybInkscape.pyx":428
 *             _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *             #repr_co = PyCObject_FromVoidPtr(_thisptr.repr, NULL)
 *             pyspdoc = self._get_pyspdoc()             # <<<<<<<<<<<<<<
 *             pydoc = pyspdoc.rdoc
 *             #self._repr = PYNode(repr_co, pydoc)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_pyspdoc); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_pyspdoc = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pybInkscape.pyx":429
 *             #repr_co = PyCObject_FromVoidPtr(_thisptr.repr, NULL)
 *             pyspdoc = self._get_pyspdoc()
 *             pydoc = pyspdoc.rdoc             # <<<<<<<<<<<<<<
 *             #self._repr = PYNode(repr_co, pydoc)
 *             self._repr = wrapnode(_thisptr.repr, pydoc)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_pyspdoc, __pyx_n_s_rdoc); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_pydoc = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pybInkscape.pyx":431
 *             pydoc = pyspdoc.rdoc
 *             #self._repr = PYNode(repr_co, pydoc)
 *             self._repr = wrapnode(_thisptr.repr, pydoc)             # <<<<<<<<<<<<<<
 *         return self._repr
 * 
 */
    __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(__pyx_v__thisptr->repr, __pyx_v_pydoc, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_repr, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":432
 *             #self._repr = PYNode(repr_co, pydoc)
 *             self._repr = wrapnode(_thisptr.repr, pydoc)
 *         return self._repr             # <<<<<<<<<<<<<<
 * 
 *     def _get_pyspdoc(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_repr); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":424
 * cdef class PYSPObject(GObject):
 *     @property
 *     def repr(self):             # <<<<<<<<<<<<<<
 *         if not hasattr(self, '_repr'):
 *             _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.repr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyspdoc);
  __Pyx_XDECREF(__pyx_v_pydoc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":434
 *         return self._repr
 * 
 *     def _get_pyspdoc(self):             # <<<<<<<<<<<<<<
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         spdoc = spobj.document
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_3_get_pyspdoc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_3_get_pyspdoc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_pyspdoc (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_2_get_pyspdoc(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_2_get_pyspdoc(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v_spobj;
  SPDocument *__pyx_v_spdoc;
  PyObject *__pyx_v_spdoc_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_pyspdoc = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  SPDocument *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_pyspdoc", 0);

  /* "pybInkscape.pyx":435
 * 
 *     def _get_pyspdoc(self):
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         spdoc = spobj.document
 *         spdoc_co = PyCObject_FromVoidPtr(spdoc, NULL)
 */
  __pyx_v_spobj = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":436
 *     def _get_pyspdoc(self):
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         spdoc = spobj.document             # <<<<<<<<<<<<<<
 *         spdoc_co = PyCObject_FromVoidPtr(spdoc, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)
 */
  __pyx_t_1 = __pyx_v_spobj->document;
  __pyx_v_spdoc = __pyx_t_1;

  /* "pybInkscape.pyx":437
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         spdoc = spobj.document
 *         spdoc_co = PyCObject_FromVoidPtr(spdoc, NULL)             # <<<<<<<<<<<<<<
 *         pyspdoc = PYSPDocument(spdoc_co)
 *         return pyspdoc
 */
  __pyx_t_2 = PyCObject_FromVoidPtr(__pyx_v_spdoc, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_spdoc_co = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":438
 *         spdoc = spobj.document
 *         spdoc_co = PyCObject_FromVoidPtr(spdoc, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)             # <<<<<<<<<<<<<<
 *         return pyspdoc
 * 
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_spdoc_co);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_spdoc_co);
  __Pyx_GIVEREF(__pyx_v_spdoc_co);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDocument)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_pyspdoc = ((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":439
 *         spdoc_co = PyCObject_FromVoidPtr(spdoc, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)
 *         return pyspdoc             # <<<<<<<<<<<<<<
 * 
 *     def firstChild(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_pyspdoc));
  __pyx_r = ((PyObject *)__pyx_v_pyspdoc);
  goto __pyx_L0;

  /* "pybInkscape.pyx":434
 *         return self._repr
 * 
 *     def _get_pyspdoc(self):             # <<<<<<<<<<<<<<
 *         spobj = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         spdoc = spobj.document
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYSPObject._get_pyspdoc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_spdoc_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_pyspdoc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":441
 *         return pyspdoc
 * 
 *     def firstChild(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.firstChild()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_5firstChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_5firstChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("firstChild (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_4firstChild(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_4firstChild(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  SPObject *__pyx_v_obj;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("firstChild", 0);

  /* "pybInkscape.pyx":442
 * 
 *     def firstChild(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         obj = _thisptr.firstChild()
 *         wrapobj(obj)
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":443
 *     def firstChild(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.firstChild()             # <<<<<<<<<<<<<<
 *         wrapobj(obj)
 * 
 */
  __pyx_v_obj = __pyx_v__thisptr->firstChild();

  /* "pybInkscape.pyx":444
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.firstChild()
 *         wrapobj(obj)             # <<<<<<<<<<<<<<
 * 
 *     def lastChild(self):
 */
  __pyx_t_1 = __pyx_f_11pybInkscape_wrapobj(__pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pybInkscape.pyx":441
 *         return pyspdoc
 * 
 *     def firstChild(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.firstChild()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.firstChild", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":446
 *         wrapobj(obj)
 * 
 *     def lastChild(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.lastChild()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_7lastChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_7lastChild(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lastChild (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_6lastChild(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_6lastChild(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  SPObject *__pyx_v_obj;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lastChild", 0);

  /* "pybInkscape.pyx":447
 * 
 *     def lastChild(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         obj = _thisptr.lastChild()
 *         wrapobj(obj)
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":448
 *     def lastChild(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.lastChild()             # <<<<<<<<<<<<<<
 *         wrapobj(obj)
 * 
 */
  __pyx_v_obj = __pyx_v__thisptr->lastChild();

  /* "pybInkscape.pyx":449
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.lastChild()
 *         wrapobj(obj)             # <<<<<<<<<<<<<<
 * 
 *     def getNext(self):
 */
  __pyx_t_1 = __pyx_f_11pybInkscape_wrapobj(__pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pybInkscape.pyx":446
 *         wrapobj(obj)
 * 
 *     def lastChild(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.lastChild()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.lastChild", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":451
 *         wrapobj(obj)
 * 
 *     def getNext(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getNext()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_9getNext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_9getNext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getNext (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_8getNext(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_8getNext(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  SPObject *__pyx_v_obj;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getNext", 0);

  /* "pybInkscape.pyx":452
 * 
 *     def getNext(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         obj = _thisptr.getNext()
 *         wrapobj(obj)
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":453
 *     def getNext(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getNext()             # <<<<<<<<<<<<<<
 *         wrapobj(obj)
 * 
 */
  __pyx_v_obj = __pyx_v__thisptr->getNext();

  /* "pybInkscape.pyx":454
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getNext()
 *         wrapobj(obj)             # <<<<<<<<<<<<<<
 * 
 *     def getPrev(self):
 */
  __pyx_t_1 = __pyx_f_11pybInkscape_wrapobj(__pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pybInkscape.pyx":451
 *         wrapobj(obj)
 * 
 *     def getNext(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getNext()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.getNext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":456
 *         wrapobj(obj)
 * 
 *     def getPrev(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getPrev()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_11getPrev(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_11getPrev(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getPrev (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_10getPrev(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_10getPrev(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  SPObject *__pyx_v_obj;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getPrev", 0);

  /* "pybInkscape.pyx":457
 * 
 *     def getPrev(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         obj = _thisptr.getPrev()
 *         wrapobj(obj)
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":458
 *     def getPrev(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getPrev()             # <<<<<<<<<<<<<<
 *         wrapobj(obj)
 * 
 */
  __pyx_v_obj = __pyx_v__thisptr->getPrev();

  /* "pybInkscape.pyx":459
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getPrev()
 *         wrapobj(obj)             # <<<<<<<<<<<<<<
 * 
 *     def hasChildren(self):
 */
  __pyx_t_1 = __pyx_f_11pybInkscape_wrapobj(__pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pybInkscape.pyx":456
 *         wrapobj(obj)
 * 
 *     def getPrev(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         obj = _thisptr.getPrev()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.getPrev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":461
 *         wrapobj(obj)
 * 
 *     def hasChildren(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         return _thisptr.hasChildren()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_13hasChildren(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_13hasChildren(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hasChildren (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_12hasChildren(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_12hasChildren(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hasChildren", 0);

  /* "pybInkscape.pyx":462
 * 
 *     def hasChildren(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         return _thisptr.hasChildren()
 * 
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":463
 *     def hasChildren(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         return _thisptr.hasChildren()             # <<<<<<<<<<<<<<
 * 
 *     def getId(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v__thisptr->hasChildren()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":461
 *         wrapobj(obj)
 * 
 *     def hasChildren(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         return _thisptr.hasChildren()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.hasChildren", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":465
 *         return _thisptr.hasChildren()
 * 
 *     def getId(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_id = <char *>_thisptr.getId()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_15getId(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_15getId(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getId (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_14getId(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_14getId(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  char *__pyx_v__id;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getId", 0);

  /* "pybInkscape.pyx":466
 * 
 *     def getId(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         cdef char *_id = <char *>_thisptr.getId()
 *         if _id == NULL:
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":467
 *     def getId(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_id = <char *>_thisptr.getId()             # <<<<<<<<<<<<<<
 *         if _id == NULL:
 *             return None
 */
  __pyx_v__id = ((char *)__pyx_v__thisptr->getId());

  /* "pybInkscape.pyx":468
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_id = <char *>_thisptr.getId()
 *         if _id == NULL:             # <<<<<<<<<<<<<<
 *             return None
 *         return _id
 */
  __pyx_t_1 = ((__pyx_v__id == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":469
 *         cdef char *_id = <char *>_thisptr.getId()
 *         if _id == NULL:
 *             return None             # <<<<<<<<<<<<<<
 *         return _id
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":470
 *         if _id == NULL:
 *             return None
 *         return _id             # <<<<<<<<<<<<<<
 * 
 *     def label(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBytes_FromString(__pyx_v__id); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":465
 *         return _thisptr.hasChildren()
 * 
 *     def getId(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_id = <char *>_thisptr.getId()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.getId", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":472
 *         return _id
 * 
 *     def label(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_label = <char *>_thisptr.label()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_17label(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_17label(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("label (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_16label(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_16label(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  char *__pyx_v__label;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("label", 0);

  /* "pybInkscape.pyx":473
 * 
 *     def label(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         cdef char *_label = <char *>_thisptr.label()
 *         if _label == NULL:
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":474
 *     def label(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_label = <char *>_thisptr.label()             # <<<<<<<<<<<<<<
 *         if _label == NULL:
 *             return None
 */
  __pyx_v__label = ((char *)__pyx_v__thisptr->label());

  /* "pybInkscape.pyx":475
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_label = <char *>_thisptr.label()
 *         if _label == NULL:             # <<<<<<<<<<<<<<
 *             return None
 *         return _label
 */
  __pyx_t_1 = ((__pyx_v__label == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":476
 *         cdef char *_label = <char *>_thisptr.label()
 *         if _label == NULL:
 *             return None             # <<<<<<<<<<<<<<
 *         return _label
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":477
 *         if _label == NULL:
 *             return None
 *         return _label             # <<<<<<<<<<<<<<
 * 
 *     def title(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBytes_FromString(__pyx_v__label); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":472
 *         return _id
 * 
 *     def label(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_label = <char *>_thisptr.label()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.label", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":479
 *         return _label
 * 
 *     def title(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_title = <char *>_thisptr.title()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_19title(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_19title(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("title (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_18title(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_18title(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  char *__pyx_v__title;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("title", 0);

  /* "pybInkscape.pyx":480
 * 
 *     def title(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         cdef char *_title = <char *>_thisptr.title()
 *         if _title == NULL:
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":481
 *     def title(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_title = <char *>_thisptr.title()             # <<<<<<<<<<<<<<
 *         if _title == NULL:
 *             return None
 */
  __pyx_v__title = ((char *)__pyx_v__thisptr->title());

  /* "pybInkscape.pyx":482
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_title = <char *>_thisptr.title()
 *         if _title == NULL:             # <<<<<<<<<<<<<<
 *             return None
 *         return _title
 */
  __pyx_t_1 = ((__pyx_v__title == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":483
 *         cdef char *_title = <char *>_thisptr.title()
 *         if _title == NULL:
 *             return None             # <<<<<<<<<<<<<<
 *         return _title
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":484
 *         if _title == NULL:
 *             return None
 *         return _title             # <<<<<<<<<<<<<<
 * 
 *     def desc(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBytes_FromString(__pyx_v__title); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":479
 *         return _label
 * 
 *     def title(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_title = <char *>_thisptr.title()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.title", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":486
 *         return _title
 * 
 *     def desc(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_desc = <char *>_thisptr.desc()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_21desc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPObject_21desc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("desc (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPObject_20desc(((struct __pyx_obj_11pybInkscape_PYSPObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPObject_20desc(struct __pyx_obj_11pybInkscape_PYSPObject *__pyx_v_self) {
  SPObject *__pyx_v__thisptr;
  char *__pyx_v__desc;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("desc", 0);

  /* "pybInkscape.pyx":487
 * 
 *     def desc(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         cdef char *_desc = <char *>_thisptr.desc()
 *         if _desc == NULL:
 */
  __pyx_v__thisptr = ((SPObject *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":488
 *     def desc(self):
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_desc = <char *>_thisptr.desc()             # <<<<<<<<<<<<<<
 *         if _desc == NULL:
 *             return None
 */
  __pyx_v__desc = ((char *)__pyx_v__thisptr->desc());

  /* "pybInkscape.pyx":489
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_desc = <char *>_thisptr.desc()
 *         if _desc == NULL:             # <<<<<<<<<<<<<<
 *             return None
 *         return _desc
 */
  __pyx_t_1 = ((__pyx_v__desc == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":490
 *         cdef char *_desc = <char *>_thisptr.desc()
 *         if _desc == NULL:
 *             return None             # <<<<<<<<<<<<<<
 *         return _desc
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":491
 *         if _desc == NULL:
 *             return None
 *         return _desc             # <<<<<<<<<<<<<<
 * 
 * cdef class PYSPItem(PYSPObject):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBytes_FromString(__pyx_v__desc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":486
 *         return _title
 * 
 *     def desc(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 *         cdef char *_desc = <char *>_thisptr.desc()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPObject.desc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":494
 * 
 * cdef class PYSPItem(PYSPObject):
 *     def getCenter(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPItem *>pygobject_get(self)
 *         point = _thisptr.getCenter()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_8PYSPItem_1getCenter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_8PYSPItem_1getCenter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getCenter (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_8PYSPItem_getCenter(((struct __pyx_obj_11pybInkscape_PYSPItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_8PYSPItem_getCenter(struct __pyx_obj_11pybInkscape_PYSPItem *__pyx_v_self) {
  SPItem *__pyx_v__thisptr;
  Geom::Point __pyx_v_point;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getCenter", 0);

  /* "pybInkscape.pyx":495
 * cdef class PYSPItem(PYSPObject):
 *     def getCenter(self):
 *         _thisptr = <pybSPDesktop.SPItem *>pygobject_get(self)             # <<<<<<<<<<<<<<
 *         point = _thisptr.getCenter()
 *         return [point[0],point[1]]
 */
  __pyx_v__thisptr = ((SPItem *)pygobject_get(((PyObject *)__pyx_v_self)));

  /* "pybInkscape.pyx":496
 *     def getCenter(self):
 *         _thisptr = <pybSPDesktop.SPItem *>pygobject_get(self)
 *         point = _thisptr.getCenter()             # <<<<<<<<<<<<<<
 *         return [point[0],point[1]]
 * 
 */
  __pyx_v_point = __pyx_v__thisptr->getCenter();

  /* "pybInkscape.pyx":497
 *         _thisptr = <pybSPDesktop.SPItem *>pygobject_get(self)
 *         point = _thisptr.getCenter()
 *         return [point[0],point[1]]             # <<<<<<<<<<<<<<
 * 
 * cdef class PYSPRoot(PYSPItem):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_point[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_point[1])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":494
 * 
 * cdef class PYSPItem(PYSPObject):
 *     def getCenter(self):             # <<<<<<<<<<<<<<
 *         _thisptr = <pybSPDesktop.SPItem *>pygobject_get(self)
 *         point = _thisptr.getCenter()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYSPItem.getCenter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":508
 *     cdef pybSPDesktop.SPDocument *_thisptr
 * 
 *     def __cinit__(self, ptr_co):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr_co)
 *         self._thisptr = <pybSPDesktop.SPDocument *>PyCObject_AsVoidPtr(ptr_co)
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_12PYSPDocument_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_12PYSPDocument_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr_co = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr_co,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr_co)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr_co = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_12PYSPDocument___cinit__(((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_v_self), __pyx_v_ptr_co);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_12PYSPDocument___cinit__(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_ptr_co) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":509
 * 
 *     def __cinit__(self, ptr_co):
 *         assert PyCObject_Check(ptr_co)             # <<<<<<<<<<<<<<
 *         self._thisptr = <pybSPDesktop.SPDocument *>PyCObject_AsVoidPtr(ptr_co)
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(PyCObject_Check(__pyx_v_ptr_co) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "pybInkscape.pyx":510
 *     def __cinit__(self, ptr_co):
 *         assert PyCObject_Check(ptr_co)
 *         self._thisptr = <pybSPDesktop.SPDocument *>PyCObject_AsVoidPtr(ptr_co)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_ptr_co); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr = ((SPDocument *)__pyx_t_1);

  /* "pybInkscape.pyx":508
 *     cdef pybSPDesktop.SPDocument *_thisptr
 * 
 *     def __cinit__(self, ptr_co):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr_co)
 *         self._thisptr = <pybSPDesktop.SPDocument *>PyCObject_AsVoidPtr(ptr_co)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":513
 * 
 *     @property
 *     def rdoc(self):             # <<<<<<<<<<<<<<
 *         node = pybindtools.cast_Node(self._thisptr.rdoc)
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_3rdoc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_3rdoc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rdoc (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_12PYSPDocument_2rdoc(((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_2rdoc(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self) {
  Inkscape::XML::Node *__pyx_v_node;
  PyObject *__pyx_v_node_co = NULL;
  PyObject *__pyx_v_doc_co = NULL;
  struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rdoc", 0);

  /* "pybInkscape.pyx":514
 *     @property
 *     def rdoc(self):
 *         node = pybindtools.cast_Node(self._thisptr.rdoc)             # <<<<<<<<<<<<<<
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 *         # doc_co is passed for using by PYDocument, since C++ allow to
 */
  __pyx_v_node = cast_Node(__pyx_v_self->_thisptr->rdoc);

  /* "pybInkscape.pyx":515
 *     def rdoc(self):
 *         node = pybindtools.cast_Node(self._thisptr.rdoc)
 *         node_co = PyCObject_FromVoidPtr(node, NULL)             # <<<<<<<<<<<<<<
 *         # doc_co is passed for using by PYDocument, since C++ allow to
 *         # cast a virtual base to a drived.
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(__pyx_v_node, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_node_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":518
 *         # doc_co is passed for using by PYDocument, since C++ allow to
 *         # cast a virtual base to a drived.
 *         doc_co = PyCObject_FromVoidPtr(self._thisptr.rdoc, NULL)             # <<<<<<<<<<<<<<
 *         wrapper = PYDocument(node_co, None, self, doc_co)
 *         return wrapper
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(__pyx_v_self->_thisptr->rdoc, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_doc_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":519
 *         # cast a virtual base to a drived.
 *         doc_co = PyCObject_FromVoidPtr(self._thisptr.rdoc, NULL)
 *         wrapper = PYDocument(node_co, None, self, doc_co)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_node_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_node_co);
  __Pyx_GIVEREF(__pyx_v_node_co);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_doc_co);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_doc_co);
  __Pyx_GIVEREF(__pyx_v_doc_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYDocument)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_wrapper = ((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":520
 *         doc_co = PyCObject_FromVoidPtr(self._thisptr.rdoc, NULL)
 *         wrapper = PYDocument(node_co, None, self, doc_co)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":513
 * 
 *     @property
 *     def rdoc(self):             # <<<<<<<<<<<<<<
 *         node = pybindtools.cast_Node(self._thisptr.rdoc)
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.rdoc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_node_co);
  __Pyx_XDECREF(__pyx_v_doc_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":523
 * 
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.getRoot()
 *         wrapper = wrapobj(root)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_5root(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_5root(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("root (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_12PYSPDocument_4root(((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_4root(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self) {
  SPObject *__pyx_v_root;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("root", 0);

  /* "pybInkscape.pyx":524
 *     @property
 *     def root(self):
 *         root = self._thisptr.getRoot()             # <<<<<<<<<<<<<<
 *         wrapper = wrapobj(root)
 *         return wrapper
 */
  __pyx_v_root = __pyx_v_self->_thisptr->getRoot();

  /* "pybInkscape.pyx":525
 *     def root(self):
 *         root = self._thisptr.getRoot()
 *         wrapper = wrapobj(root)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = __pyx_f_11pybInkscape_wrapobj(__pyx_v_root); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_wrapper = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":526
 *         root = self._thisptr.getRoot()
 *         wrapper = wrapobj(root)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def connect_layers_changed(self, callback):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":523
 * 
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.getRoot()
 *         wrapper = wrapobj(root)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.root", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":528
 *         return wrapper
 * 
 *     def connect_layers_changed(self, callback):             # <<<<<<<<<<<<<<
 *         proxy = new pybSPDesktop.slot_proxy(callback)
 *         slot = proxy.get_slot_0()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_7connect_layers_changed(PyObject *__pyx_v_self, PyObject *__pyx_v_callback); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_7connect_layers_changed(PyObject *__pyx_v_self, PyObject *__pyx_v_callback) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("connect_layers_changed (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_12PYSPDocument_6connect_layers_changed(((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_v_self), ((PyObject *)__pyx_v_callback));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_6connect_layers_changed(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_callback) {
  Inkscape::pybind::slot_proxy *__pyx_v_proxy;
  __pyx_t_12pybSPDesktop_res_slot_type __pyx_v_slot;
  CYTHON_UNUSED __pyx_t_12pybSPDesktop_sig_connection __pyx_v_connection;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("connect_layers_changed", 0);

  /* "pybInkscape.pyx":529
 * 
 *     def connect_layers_changed(self, callback):
 *         proxy = new pybSPDesktop.slot_proxy(callback)             # <<<<<<<<<<<<<<
 *         slot = proxy.get_slot_0()
 *         connection = \
 */
  __pyx_v_proxy = new Inkscape::pybind::slot_proxy(__pyx_v_callback);

  /* "pybInkscape.pyx":530
 *     def connect_layers_changed(self, callback):
 *         proxy = new pybSPDesktop.slot_proxy(callback)
 *         slot = proxy.get_slot_0()             # <<<<<<<<<<<<<<
 *         connection = \
 *             self._thisptr.connectResourcesChanged("layer",
 */
  __pyx_v_slot = __pyx_v_proxy->get_slot_0();

  /* "pybInkscape.pyx":532
 *         slot = proxy.get_slot_0()
 *         connection = \
 *             self._thisptr.connectResourcesChanged("layer",             # <<<<<<<<<<<<<<
 *                                                   slot)
 * 
 */
  __pyx_v_connection = __pyx_v_self->_thisptr->connectResourcesChanged(__pyx_k_layer, __pyx_v_slot);

  /* "pybInkscape.pyx":528
 *         return wrapper
 * 
 *     def connect_layers_changed(self, callback):             # <<<<<<<<<<<<<<
 *         proxy = new pybSPDesktop.slot_proxy(callback)
 *         slot = proxy.get_slot_0()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":535
 *                                                   slot)
 * 
 *     def done(self, event_type, description):             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_9done(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_9done(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_event_type = 0;
  PyObject *__pyx_v_description = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("done (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_event_type,&__pyx_n_s_description,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_event_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_description)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("done", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "done") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_event_type = values[0];
    __pyx_v_description = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("done", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_12PYSPDocument_8done(((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_v_self), __pyx_v_event_type, __pyx_v_description);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_8done(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_event_type, PyObject *__pyx_v_description) {
  Glib::ustring __pyx_v__desc;
  Inkscape::Verb *__pyx_v__verb;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("done", 0);

  /* "pybInkscape.pyx":536
 * 
 *     def done(self, event_type, description):
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)             # <<<<<<<<<<<<<<
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)
 *         pybSPDesktop.done(self._thisptr, _verb.get_code(), _desc)
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_description); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__desc = Glib::ustring(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":537
 *     def done(self, event_type, description):
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)             # <<<<<<<<<<<<<<
 *         pybSPDesktop.done(self._thisptr, _verb.get_code(), _desc)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_event_type); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__verb = pyb_verb_getbyid(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":538
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)
 *         pybSPDesktop.done(self._thisptr, _verb.get_code(), _desc)             # <<<<<<<<<<<<<<
 * 
 *     def maybe_undo(self, key, event_type, description):
 */
  Inkscape::DocumentUndo::done(__pyx_v_self->_thisptr, __pyx_v__verb->get_code(), __pyx_v__desc);

  /* "pybInkscape.pyx":535
 *                                                   slot)
 * 
 *     def done(self, event_type, description):             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":540
 *         pybSPDesktop.done(self._thisptr, _verb.get_code(), _desc)
 * 
 *     def maybe_undo(self, key, event_type, description):             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         cdef pybSPDesktop.gchar *_key = (<pybSPDesktop.gchar *> (<char *>key))
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_11maybe_undo(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_12PYSPDocument_11maybe_undo(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_event_type = 0;
  PyObject *__pyx_v_description = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("maybe_undo (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_event_type,&__pyx_n_s_description,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_event_type)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("maybe_undo", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_description)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("maybe_undo", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "maybe_undo") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_key = values[0];
    __pyx_v_event_type = values[1];
    __pyx_v_description = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("maybe_undo", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.maybe_undo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_12PYSPDocument_10maybe_undo(((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_v_self), __pyx_v_key, __pyx_v_event_type, __pyx_v_description);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_12PYSPDocument_10maybe_undo(struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_event_type, PyObject *__pyx_v_description) {
  Glib::ustring __pyx_v__desc;
  gchar *__pyx_v__key;
  Inkscape::Verb *__pyx_v__verb;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("maybe_undo", 0);

  /* "pybInkscape.pyx":541
 * 
 *     def maybe_undo(self, key, event_type, description):
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.gchar *_key = (<pybSPDesktop.gchar *> (<char *>key))
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_description); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__desc = Glib::ustring(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":542
 *     def maybe_undo(self, key, event_type, description):
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         cdef pybSPDesktop.gchar *_key = (<pybSPDesktop.gchar *> (<char *>key))             # <<<<<<<<<<<<<<
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_key); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__key = ((gchar *)((char *)__pyx_t_1));

  /* "pybInkscape.pyx":543
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         cdef pybSPDesktop.gchar *_key = (<pybSPDesktop.gchar *> (<char *>key))
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)             # <<<<<<<<<<<<<<
 * 
 *         pybSPDesktop.maybeDone(self._thisptr, _key, _verb.get_code(), _desc)
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_event_type); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__verb = pyb_verb_getbyid(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":545
 *         _verb = pybVerb.pyb_verb_getbyid(<char *>event_type)
 * 
 *         pybSPDesktop.maybeDone(self._thisptr, _key, _verb.get_code(), _desc)             # <<<<<<<<<<<<<<
 * 
 * ## \page make_dock How to make a dock?
 */
  Inkscape::DocumentUndo::maybeDone(__pyx_v_self->_thisptr, __pyx_v__key, __pyx_v__verb->get_code(), __pyx_v__desc);

  /* "pybInkscape.pyx":540
 *         pybSPDesktop.done(self._thisptr, _verb.get_code(), _desc)
 * 
 *     def maybe_undo(self, key, event_type, description):             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.ustring _desc = pybSPDesktop.ustring(<char *> description)
 *         cdef pybSPDesktop.gchar *_key = (<pybSPDesktop.gchar *> (<char *>key))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPDocument.maybe_undo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":572
 *     DOCKED_STATE=2
 * 
 *     def __cinit__(self, PYDock dock, bytes name, bytes long_name,             # <<<<<<<<<<<<<<
 *                   bytes icon_name, int state):
 *         cdef pybSPDesktop.ustring _name = \
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_10PYDockItem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_10PYDockItem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_dock = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_long_name = 0;
  PyObject *__pyx_v_icon_name = 0;
  int __pyx_v_state;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dock,&__pyx_n_s_name,&__pyx_n_s_long_name,&__pyx_n_s_icon_name,&__pyx_n_s_state,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dock)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_long_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_icon_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_dock = ((struct __pyx_obj_11pybInkscape_PYDock *)values[0]);
    __pyx_v_name = ((PyObject*)values[1]);
    __pyx_v_long_name = ((PyObject*)values[2]);
    __pyx_v_icon_name = ((PyObject*)values[3]);
    __pyx_v_state = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_state == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYDockItem.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dock), __pyx_ptype_11pybInkscape_PYDock, 1, "dock", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyBytes_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_long_name), (&PyBytes_Type), 1, "long_name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_icon_name), (&PyBytes_Type), 1, "icon_name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_10PYDockItem___cinit__(((struct __pyx_obj_11pybInkscape_PYDockItem *)__pyx_v_self), __pyx_v_dock, __pyx_v_name, __pyx_v_long_name, __pyx_v_icon_name, __pyx_v_state);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_10PYDockItem___cinit__(struct __pyx_obj_11pybInkscape_PYDockItem *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_dock, PyObject *__pyx_v_name, PyObject *__pyx_v_long_name, PyObject *__pyx_v_icon_name, int __pyx_v_state) {
  Glib::ustring __pyx_v__name;
  Glib::ustring __pyx_v__long_name;
  Glib::ustring __pyx_v__icon_name;
  enum Inkscape::UI::Widget::DockItem::State __pyx_v__state;
  PyObject *__pyx_v__placement = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  enum Inkscape::UI::Widget::DockItem::State __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  enum Inkscape::UI::Widget::DockItem::Placement __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":575
 *                   bytes icon_name, int state):
 *         cdef pybSPDesktop.ustring _name = \
 *             pybSPDesktop.ustring(<char *>name)             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.ustring _long_name = \
 *             pybSPDesktop.ustring(<char *>long_name)
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__name = Glib::ustring(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":577
 *             pybSPDesktop.ustring(<char *>name)
 *         cdef pybSPDesktop.ustring _long_name = \
 *             pybSPDesktop.ustring(<char *>long_name)             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.ustring _icon_name = \
 *             pybSPDesktop.ustring(<char *>icon_name)
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_long_name); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__long_name = Glib::ustring(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":579
 *             pybSPDesktop.ustring(<char *>long_name)
 *         cdef pybSPDesktop.ustring _icon_name = \
 *             pybSPDesktop.ustring(<char *>icon_name)             # <<<<<<<<<<<<<<
 *         cdef pybSPDesktop.State _state
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_icon_name); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__icon_name = Glib::ustring(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":582
 *         cdef pybSPDesktop.State _state
 * 
 *         _state = [pybSPDesktop.UNATTACHED,             # <<<<<<<<<<<<<<
 *                   pybSPDesktop.FLOATING_STATE,
 *                   pybSPDesktop.DOCKED_STATE][state]
 */
  __pyx_t_2 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::UNATTACHED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":583
 * 
 *         _state = [pybSPDesktop.UNATTACHED,
 *                   pybSPDesktop.FLOATING_STATE,             # <<<<<<<<<<<<<<
 *                   pybSPDesktop.DOCKED_STATE][state]
 *         _placement = [pybSPDesktop.NONE,
 */
  __pyx_t_3 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::FLOATING_STATE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "pybInkscape.pyx":584
 *         _state = [pybSPDesktop.UNATTACHED,
 *                   pybSPDesktop.FLOATING_STATE,
 *                   pybSPDesktop.DOCKED_STATE][state]             # <<<<<<<<<<<<<<
 *         _placement = [pybSPDesktop.NONE,
 *                       pybSPDesktop.TOP,
 */
  __pyx_t_4 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::DOCKED_STATE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);

  /* "pybInkscape.pyx":582
 *         cdef pybSPDesktop.State _state
 * 
 *         _state = [pybSPDesktop.UNATTACHED,             # <<<<<<<<<<<<<<
 *                   pybSPDesktop.FLOATING_STATE,
 *                   pybSPDesktop.DOCKED_STATE][state]
 */
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;

  /* "pybInkscape.pyx":584
 *         _state = [pybSPDesktop.UNATTACHED,
 *                   pybSPDesktop.FLOATING_STATE,
 *                   pybSPDesktop.DOCKED_STATE][state]             # <<<<<<<<<<<<<<
 *         _placement = [pybSPDesktop.NONE,
 *                       pybSPDesktop.TOP,
 */
  __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_t_5, __pyx_v_state, int, 1, __Pyx_PyInt_From_int, 1, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_6 = ((enum Inkscape::UI::Widget::DockItem::State)PyInt_AsLong(__pyx_t_4)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v__state = __pyx_t_6;

  /* "pybInkscape.pyx":585
 *                   pybSPDesktop.FLOATING_STATE,
 *                   pybSPDesktop.DOCKED_STATE][state]
 *         _placement = [pybSPDesktop.NONE,             # <<<<<<<<<<<<<<
 *                       pybSPDesktop.TOP,
 *                       pybSPDesktop.BOTTOM,
 */
  __pyx_t_4 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::NONE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);

  /* "pybInkscape.pyx":586
 *                   pybSPDesktop.DOCKED_STATE][state]
 *         _placement = [pybSPDesktop.NONE,
 *                       pybSPDesktop.TOP,             # <<<<<<<<<<<<<<
 *                       pybSPDesktop.BOTTOM,
 *                       pybSPDesktop.RIGHT,
 */
  __pyx_t_5 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::TOP); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);

  /* "pybInkscape.pyx":587
 *         _placement = [pybSPDesktop.NONE,
 *                       pybSPDesktop.TOP,
 *                       pybSPDesktop.BOTTOM,             # <<<<<<<<<<<<<<
 *                       pybSPDesktop.RIGHT,
 *                       pybSPDesktop.LEFT,
 */
  __pyx_t_3 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::BOTTOM); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "pybInkscape.pyx":588
 *                       pybSPDesktop.TOP,
 *                       pybSPDesktop.BOTTOM,
 *                       pybSPDesktop.RIGHT,             # <<<<<<<<<<<<<<
 *                       pybSPDesktop.LEFT,
 *                       pybSPDesktop.CENTER,
 */
  __pyx_t_2 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::RIGHT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":589
 *                       pybSPDesktop.BOTTOM,
 *                       pybSPDesktop.RIGHT,
 *                       pybSPDesktop.LEFT,             # <<<<<<<<<<<<<<
 *                       pybSPDesktop.CENTER,
 *                       pybSPDesktop.FLOATING]
 */
  __pyx_t_7 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::LEFT); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);

  /* "pybInkscape.pyx":590
 *                       pybSPDesktop.RIGHT,
 *                       pybSPDesktop.LEFT,
 *                       pybSPDesktop.CENTER,             # <<<<<<<<<<<<<<
 *                       pybSPDesktop.FLOATING]
 * 
 */
  __pyx_t_8 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::CENTER); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);

  /* "pybInkscape.pyx":591
 *                       pybSPDesktop.LEFT,
 *                       pybSPDesktop.CENTER,
 *                       pybSPDesktop.FLOATING]             # <<<<<<<<<<<<<<
 * 
 *         self._thisptr = new pybSPDesktop.DockItem(deref(dock._thisptr),
 */
  __pyx_t_9 = PyInt_FromLong(Inkscape::UI::Widget::DockItem::FLOATING); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);

  /* "pybInkscape.pyx":585
 *                   pybSPDesktop.FLOATING_STATE,
 *                   pybSPDesktop.DOCKED_STATE][state]
 *         _placement = [pybSPDesktop.NONE,             # <<<<<<<<<<<<<<
 *                       pybSPDesktop.TOP,
 *                       pybSPDesktop.BOTTOM,
 */
  __pyx_t_10 = PyList_New(7); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  PyList_SET_ITEM(__pyx_t_10, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_10, 1, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_10, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_10, 3, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_10, 4, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyList_SET_ITEM(__pyx_t_10, 5, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_8);
  PyList_SET_ITEM(__pyx_t_10, 6, __pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_9);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_9 = 0;
  __pyx_v__placement = ((PyObject*)__pyx_t_10);
  __pyx_t_10 = 0;

  /* "pybInkscape.pyx":595
 *         self._thisptr = new pybSPDesktop.DockItem(deref(dock._thisptr),
 *                                                   _name, _long_name,
 *                                                   _icon_name, _state, _placement)             # <<<<<<<<<<<<<<
 * 
 *     def gobj(self):
 */
  __pyx_t_11 = ((enum Inkscape::UI::Widget::DockItem::Placement)PyInt_AsLong(__pyx_v__placement)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":593
 *                       pybSPDesktop.FLOATING]
 * 
 *         self._thisptr = new pybSPDesktop.DockItem(deref(dock._thisptr),             # <<<<<<<<<<<<<<
 *                                                   _name, _long_name,
 *                                                   _icon_name, _state, _placement)
 */
  __pyx_v_self->_thisptr = new Inkscape::UI::Widget::DockItem((*__pyx_v_dock->_thisptr), __pyx_v__name, __pyx_v__long_name, __pyx_v__icon_name, __pyx_v__state, __pyx_t_11);

  /* "pybInkscape.pyx":572
 *     DOCKED_STATE=2
 * 
 *     def __cinit__(self, PYDock dock, bytes name, bytes long_name,             # <<<<<<<<<<<<<<
 *                   bytes icon_name, int state):
 *         cdef pybSPDesktop.ustring _name = \
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pybInkscape.PYDockItem.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__placement);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":597
 *                                                   _icon_name, _state, _placement)
 * 
 *     def gobj(self):             # <<<<<<<<<<<<<<
 *         widget = self._thisptr.gobj()
 *         wrapper = gobj_api.newgobj(<C_GObject *>widget)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDockItem_3gobj(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDockItem_3gobj(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("gobj (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDockItem_2gobj(((struct __pyx_obj_11pybInkscape_PYDockItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDockItem_2gobj(struct __pyx_obj_11pybInkscape_PYDockItem *__pyx_v_self) {
  GtkWidget *__pyx_v_widget;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("gobj", 0);

  /* "pybInkscape.pyx":598
 * 
 *     def gobj(self):
 *         widget = self._thisptr.gobj()             # <<<<<<<<<<<<<<
 *         wrapper = gobj_api.newgobj(<C_GObject *>widget)
 *         return wrapper
 */
  __pyx_v_widget = __pyx_v_self->_thisptr->gobj();

  /* "pybInkscape.pyx":599
 *     def gobj(self):
 *         widget = self._thisptr.gobj()
 *         wrapper = gobj_api.newgobj(<C_GObject *>widget)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = __pyx_v_11pybInkscape_gobj_api->newgobj(((GObject *)__pyx_v_widget)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_wrapper = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":600
 *         widget = self._thisptr.gobj()
 *         wrapper = gobj_api.newgobj(<C_GObject *>widget)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def get_vbox(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":597
 *                                                   _icon_name, _state, _placement)
 * 
 *     def gobj(self):             # <<<<<<<<<<<<<<
 *         widget = self._thisptr.gobj()
 *         wrapper = gobj_api.newgobj(<C_GObject *>widget)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYDockItem.gobj", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":602
 *         return wrapper
 * 
 *     def get_vbox(self):             # <<<<<<<<<<<<<<
 *         vbox = self._thisptr.get_vbox()
 *         vbox_gobj = vbox.gobj()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYDockItem_5get_vbox(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYDockItem_5get_vbox(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_vbox (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYDockItem_4get_vbox(((struct __pyx_obj_11pybInkscape_PYDockItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYDockItem_4get_vbox(struct __pyx_obj_11pybInkscape_PYDockItem *__pyx_v_self) {
  Gtk::VBox *__pyx_v_vbox;
  GtkVBox *__pyx_v_vbox_gobj;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_vbox", 0);

  /* "pybInkscape.pyx":603
 * 
 *     def get_vbox(self):
 *         vbox = self._thisptr.get_vbox()             # <<<<<<<<<<<<<<
 *         vbox_gobj = vbox.gobj()
 *         wrapper = gobj_api.newgobj(<C_GObject *>vbox_gobj)
 */
  __pyx_v_vbox = __pyx_v_self->_thisptr->get_vbox();

  /* "pybInkscape.pyx":604
 *     def get_vbox(self):
 *         vbox = self._thisptr.get_vbox()
 *         vbox_gobj = vbox.gobj()             # <<<<<<<<<<<<<<
 *         wrapper = gobj_api.newgobj(<C_GObject *>vbox_gobj)
 *         return wrapper
 */
  __pyx_v_vbox_gobj = __pyx_v_vbox->gobj();

  /* "pybInkscape.pyx":605
 *         vbox = self._thisptr.get_vbox()
 *         vbox_gobj = vbox.gobj()
 *         wrapper = gobj_api.newgobj(<C_GObject *>vbox_gobj)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = __pyx_v_11pybInkscape_gobj_api->newgobj(((GObject *)__pyx_v_vbox_gobj)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_wrapper = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":606
 *         vbox_gobj = vbox.gobj()
 *         wrapper = gobj_api.newgobj(<C_GObject *>vbox_gobj)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 * cdef class PYDock:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":602
 *         return wrapper
 * 
 *     def get_vbox(self):             # <<<<<<<<<<<<<<
 *         vbox = self._thisptr.get_vbox()
 *         vbox_gobj = vbox.gobj()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYDockItem.get_vbox", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":615
 *     ITEM_ST_DOCKED_STATE=2
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr)
 *         self._thisptr = <pybSPDesktop.Dock *>PyCObject_AsVoidPtr(ptr)
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYDock_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_6PYDock_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYDock.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_6PYDock___cinit__(((struct __pyx_obj_11pybInkscape_PYDock *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYDock___cinit__(struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_self, PyObject *__pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":616
 * 
 *     def __cinit__(self, ptr):
 *         assert PyCObject_Check(ptr)             # <<<<<<<<<<<<<<
 *         self._thisptr = <pybSPDesktop.Dock *>PyCObject_AsVoidPtr(ptr)
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(PyCObject_Check(__pyx_v_ptr) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "pybInkscape.pyx":617
 *     def __cinit__(self, ptr):
 *         assert PyCObject_Check(ptr)
 *         self._thisptr = <pybSPDesktop.Dock *>PyCObject_AsVoidPtr(ptr)             # <<<<<<<<<<<<<<
 * 
 *     def new_item(self, bytes name, bytes long_name,
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_ptr); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr = ((Inkscape::UI::Widget::Dock *)__pyx_t_1);

  /* "pybInkscape.pyx":615
 *     ITEM_ST_DOCKED_STATE=2
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr)
 *         self._thisptr = <pybSPDesktop.Dock *>PyCObject_AsVoidPtr(ptr)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYDock.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":619
 *         self._thisptr = <pybSPDesktop.Dock *>PyCObject_AsVoidPtr(ptr)
 * 
 *     def new_item(self, bytes name, bytes long_name,             # <<<<<<<<<<<<<<
 *                  bytes icon_name, int state):
 *         item = PYDockItem(self, name, long_name, icon_name, state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYDock_3new_item(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYDock_3new_item(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_long_name = 0;
  PyObject *__pyx_v_icon_name = 0;
  int __pyx_v_state;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("new_item (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_long_name,&__pyx_n_s_icon_name,&__pyx_n_s_state,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_long_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("new_item", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_icon_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("new_item", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("new_item", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "new_item") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_name = ((PyObject*)values[0]);
    __pyx_v_long_name = ((PyObject*)values[1]);
    __pyx_v_icon_name = ((PyObject*)values[2]);
    __pyx_v_state = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_state == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 620; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("new_item", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYDock.new_item", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyBytes_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_long_name), (&PyBytes_Type), 1, "long_name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_icon_name), (&PyBytes_Type), 1, "icon_name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYDock_2new_item(((struct __pyx_obj_11pybInkscape_PYDock *)__pyx_v_self), __pyx_v_name, __pyx_v_long_name, __pyx_v_icon_name, __pyx_v_state);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYDock_2new_item(struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_long_name, PyObject *__pyx_v_icon_name, int __pyx_v_state) {
  struct __pyx_obj_11pybInkscape_PYDockItem *__pyx_v_item = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_item", 0);

  /* "pybInkscape.pyx":621
 *     def new_item(self, bytes name, bytes long_name,
 *                  bytes icon_name, int state):
 *         item = PYDockItem(self, name, long_name, icon_name, state)             # <<<<<<<<<<<<<<
 *         return item
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_state); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(5); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_name);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_name);
  __Pyx_GIVEREF(__pyx_v_name);
  __Pyx_INCREF(__pyx_v_long_name);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_long_name);
  __Pyx_GIVEREF(__pyx_v_long_name);
  __Pyx_INCREF(__pyx_v_icon_name);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_v_icon_name);
  __Pyx_GIVEREF(__pyx_v_icon_name);
  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYDockItem)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_item = ((struct __pyx_obj_11pybInkscape_PYDockItem *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":622
 *                  bytes icon_name, int state):
 *         item = PYDockItem(self, name, long_name, icon_name, state)
 *         return item             # <<<<<<<<<<<<<<
 * 
 * cdef class PYView:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_item));
  __pyx_r = ((PyObject *)__pyx_v_item);
  goto __pyx_L0;

  /* "pybInkscape.pyx":619
 *         self._thisptr = <pybSPDesktop.Dock *>PyCObject_AsVoidPtr(ptr)
 * 
 *     def new_item(self, bytes name, bytes long_name,             # <<<<<<<<<<<<<<
 *                  bytes icon_name, int state):
 *         item = PYDockItem(self, name, long_name, icon_name, state)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYDock.new_item", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":627
 *     cdef pybSPDesktop.SPDesktop *_thisptr
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr)
 *         self._thisptr = <pybSPDesktop.SPDesktop *>PyCObject_AsVoidPtr(ptr)
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYView_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_6PYView_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYView.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_6PYView___cinit__(((struct __pyx_obj_11pybInkscape_PYView *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYView___cinit__(struct __pyx_obj_11pybInkscape_PYView *__pyx_v_self, PyObject *__pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":628
 * 
 *     def __cinit__(self, ptr):
 *         assert PyCObject_Check(ptr)             # <<<<<<<<<<<<<<
 *         self._thisptr = <pybSPDesktop.SPDesktop *>PyCObject_AsVoidPtr(ptr)
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(PyCObject_Check(__pyx_v_ptr) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "pybInkscape.pyx":629
 *     def __cinit__(self, ptr):
 *         assert PyCObject_Check(ptr)
 *         self._thisptr = <pybSPDesktop.SPDesktop *>PyCObject_AsVoidPtr(ptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class PYSPDesktop(PYView):
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_ptr); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr = ((SPDesktop *)__pyx_t_1);

  /* "pybInkscape.pyx":627
 *     cdef pybSPDesktop.SPDesktop *_thisptr
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         assert PyCObject_Check(ptr)
 *         self._thisptr = <pybSPDesktop.SPDesktop *>PyCObject_AsVoidPtr(ptr)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYView.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":633
 * cdef class PYSPDesktop(PYView):
 *     @property
 *     def selection(self):             # <<<<<<<<<<<<<<
 *         sel = self._thisptr.selection
 *         return wrapsel(sel)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_1selection(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_1selection(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("selection (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSPDesktop_selection(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_selection(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self) {
  Inkscape::Selection *__pyx_v_sel;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Inkscape::Selection *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("selection", 0);

  /* "pybInkscape.pyx":634
 *     @property
 *     def selection(self):
 *         sel = self._thisptr.selection             # <<<<<<<<<<<<<<
 *         return wrapsel(sel)
 * 
 */
  __pyx_t_1 = __pyx_v_self->__pyx_base._thisptr->selection;
  __pyx_v_sel = __pyx_t_1;

  /* "pybInkscape.pyx":635
 *     def selection(self):
 *         sel = self._thisptr.selection
 *         return wrapsel(sel)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapsel(__pyx_v_sel); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":633
 * cdef class PYSPDesktop(PYView):
 *     @property
 *     def selection(self):             # <<<<<<<<<<<<<<
 *         sel = self._thisptr.selection
 *         return wrapsel(sel)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPDesktop.selection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":638
 * 
 *     @property
 *     def doc(self):             # <<<<<<<<<<<<<<
 *         doc = self._thisptr.doc()
 *         return wrapdoc(doc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_3doc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_3doc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("doc (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSPDesktop_2doc(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_2doc(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self) {
  SPDocument *__pyx_v_doc;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("doc", 0);

  /* "pybInkscape.pyx":639
 *     @property
 *     def doc(self):
 *         doc = self._thisptr.doc()             # <<<<<<<<<<<<<<
 *         return wrapdoc(doc)
 * 
 */
  __pyx_v_doc = __pyx_v_self->__pyx_base._thisptr->doc();

  /* "pybInkscape.pyx":640
 *     def doc(self):
 *         doc = self._thisptr.doc()
 *         return wrapdoc(doc)             # <<<<<<<<<<<<<<
 * 
 *     def getToplevel(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pybInkscape_wrapdoc(__pyx_v_doc); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":638
 * 
 *     @property
 *     def doc(self):             # <<<<<<<<<<<<<<
 *         doc = self._thisptr.doc()
 *         return wrapdoc(doc)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPDesktop.doc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":642
 *         return wrapdoc(doc)
 * 
 *     def getToplevel(self):             # <<<<<<<<<<<<<<
 *         win = self._thisptr.getToplevel()
 *         if win == NULL:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_5getToplevel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_5getToplevel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getToplevel (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSPDesktop_4getToplevel(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_4getToplevel(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self) {
  Gtk::Window *__pyx_v_win;
  GObject *__pyx_v_win_C_gobject;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getToplevel", 0);

  /* "pybInkscape.pyx":643
 * 
 *     def getToplevel(self):
 *         win = self._thisptr.getToplevel()             # <<<<<<<<<<<<<<
 *         if win == NULL:
 *             return
 */
  __pyx_v_win = __pyx_v_self->__pyx_base._thisptr->getToplevel();

  /* "pybInkscape.pyx":644
 *     def getToplevel(self):
 *         win = self._thisptr.getToplevel()
 *         if win == NULL:             # <<<<<<<<<<<<<<
 *             return
 *         win_C_gobject = <C_GObject *>win.gobj()
 */
  __pyx_t_1 = ((__pyx_v_win == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":645
 *         win = self._thisptr.getToplevel()
 *         if win == NULL:
 *             return             # <<<<<<<<<<<<<<
 *         win_C_gobject = <C_GObject *>win.gobj()
 *         wrapper = gobj_api.newgobj(win_C_gobject)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":646
 *         if win == NULL:
 *             return
 *         win_C_gobject = <C_GObject *>win.gobj()             # <<<<<<<<<<<<<<
 *         wrapper = gobj_api.newgobj(win_C_gobject)
 *         return wrapper
 */
  __pyx_v_win_C_gobject = ((GObject *)__pyx_v_win->gobj());

  /* "pybInkscape.pyx":647
 *             return
 *         win_C_gobject = <C_GObject *>win.gobj()
 *         wrapper = gobj_api.newgobj(win_C_gobject)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_2 = __pyx_v_11pybInkscape_gobj_api->newgobj(__pyx_v_win_C_gobject); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_wrapper = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":648
 *         win_C_gobject = <C_GObject *>win.gobj()
 *         wrapper = gobj_api.newgobj(win_C_gobject)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def getDock(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":642
 *         return wrapdoc(doc)
 * 
 *     def getToplevel(self):             # <<<<<<<<<<<<<<
 *         win = self._thisptr.getToplevel()
 *         if win == NULL:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPDesktop.getToplevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":650
 *         return wrapper
 * 
 *     def getDock(self):             # <<<<<<<<<<<<<<
 *         dock = self._thisptr.getDock()
 *         dock_co = PyCObject_FromVoidPtr(dock, NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_7getDock(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_7getDock(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getDock (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSPDesktop_6getDock(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_6getDock(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self) {
  Inkscape::UI::Widget::Dock *__pyx_v_dock;
  PyObject *__pyx_v_dock_co = NULL;
  struct __pyx_obj_11pybInkscape_PYDock *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getDock", 0);

  /* "pybInkscape.pyx":651
 * 
 *     def getDock(self):
 *         dock = self._thisptr.getDock()             # <<<<<<<<<<<<<<
 *         dock_co = PyCObject_FromVoidPtr(dock, NULL)
 *         wrapper = PYDock(dock_co)
 */
  __pyx_v_dock = __pyx_v_self->__pyx_base._thisptr->getDock();

  /* "pybInkscape.pyx":652
 *     def getDock(self):
 *         dock = self._thisptr.getDock()
 *         dock_co = PyCObject_FromVoidPtr(dock, NULL)             # <<<<<<<<<<<<<<
 *         wrapper = PYDock(dock_co)
 *         return wrapper
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(__pyx_v_dock, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dock_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":653
 *         dock = self._thisptr.getDock()
 *         dock_co = PyCObject_FromVoidPtr(dock, NULL)
 *         wrapper = PYDock(dock_co)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_dock_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_dock_co);
  __Pyx_GIVEREF(__pyx_v_dock_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYDock)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_wrapper = ((struct __pyx_obj_11pybInkscape_PYDock *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":654
 *         dock_co = PyCObject_FromVoidPtr(dock, NULL)
 *         wrapper = PYDock(dock_co)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def setCurrentLayer(self, PYNode node):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":650
 *         return wrapper
 * 
 *     def getDock(self):             # <<<<<<<<<<<<<<
 *         dock = self._thisptr.getDock()
 *         dock_co = PyCObject_FromVoidPtr(dock, NULL)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYSPDesktop.getDock", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dock_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":656
 *         return wrapper
 * 
 *     def setCurrentLayer(self, PYNode node):             # <<<<<<<<<<<<<<
 *         spobj = node._get_spitem()
 *         self._thisptr.setCurrentLayer(spobj)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_9setCurrentLayer(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_9setCurrentLayer(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCurrentLayer (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_11pybInkscape_PYNode, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_11PYSPDesktop_8setCurrentLayer(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_node));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_8setCurrentLayer(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node) {
  SPItem *__pyx_v_spobj;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCurrentLayer", 0);

  /* "pybInkscape.pyx":657
 * 
 *     def setCurrentLayer(self, PYNode node):
 *         spobj = node._get_spitem()             # <<<<<<<<<<<<<<
 *         self._thisptr.setCurrentLayer(spobj)
 * 
 */
  __pyx_v_spobj = ((struct __pyx_vtabstruct_11pybInkscape_PYNode *)__pyx_v_node->__pyx_vtab)->_get_spitem(__pyx_v_node);

  /* "pybInkscape.pyx":658
 *     def setCurrentLayer(self, PYNode node):
 *         spobj = node._get_spitem()
 *         self._thisptr.setCurrentLayer(spobj)             # <<<<<<<<<<<<<<
 * 
 *     def currentLayer(self):
 */
  __pyx_v_self->__pyx_base._thisptr->setCurrentLayer(__pyx_v_spobj);

  /* "pybInkscape.pyx":656
 *         return wrapper
 * 
 *     def setCurrentLayer(self, PYNode node):             # <<<<<<<<<<<<<<
 *         spobj = node._get_spitem()
 *         self._thisptr.setCurrentLayer(spobj)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":660
 *         self._thisptr.setCurrentLayer(spobj)
 * 
 *     def currentLayer(self):             # <<<<<<<<<<<<<<
 *         layer = self._thisptr.currentLayer()
 *         wrapper = gobj_api.newgobj(<C_GObject *>layer)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_11currentLayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_11currentLayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("currentLayer (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_11PYSPDesktop_10currentLayer(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_10currentLayer(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self) {
  SPObject *__pyx_v_layer;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("currentLayer", 0);

  /* "pybInkscape.pyx":661
 * 
 *     def currentLayer(self):
 *         layer = self._thisptr.currentLayer()             # <<<<<<<<<<<<<<
 *         wrapper = gobj_api.newgobj(<C_GObject *>layer)
 *         return wrapper
 */
  __pyx_v_layer = __pyx_v_self->__pyx_base._thisptr->currentLayer();

  /* "pybInkscape.pyx":662
 *     def currentLayer(self):
 *         layer = self._thisptr.currentLayer()
 *         wrapper = gobj_api.newgobj(<C_GObject *>layer)             # <<<<<<<<<<<<<<
 *         return wrapper
 * 
 */
  __pyx_t_1 = __pyx_v_11pybInkscape_gobj_api->newgobj(((GObject *)__pyx_v_layer)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_wrapper = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":663
 *         layer = self._thisptr.currentLayer()
 *         wrapper = gobj_api.newgobj(<C_GObject *>layer)
 *         return wrapper             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(PYSPDesktop self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":660
 *         self._thisptr.setCurrentLayer(spobj)
 * 
 *     def currentLayer(self):             # <<<<<<<<<<<<<<
 *         layer = self._thisptr.currentLayer()
 *         wrapper = gobj_api.newgobj(<C_GObject *>layer)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPDesktop.currentLayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":665
 *         return wrapper
 * 
 *     def __dealloc__(PYSPDesktop self):             # <<<<<<<<<<<<<<
 *         self._thisptr = NULL
 * 
 */

/* Python wrapper */
static void __pyx_pw_11pybInkscape_11PYSPDesktop_13__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_11pybInkscape_11PYSPDesktop_13__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_11pybInkscape_11PYSPDesktop_12__dealloc__(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_11pybInkscape_11PYSPDesktop_12__dealloc__(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pybInkscape.pyx":666
 * 
 *     def __dealloc__(PYSPDesktop self):
 *         self._thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(PYSPDesktop self, PYSPDesktop other,op):
 */
  __pyx_v_self->__pyx_base._thisptr = NULL;

  /* "pybInkscape.pyx":665
 *         return wrapper
 * 
 *     def __dealloc__(PYSPDesktop self):             # <<<<<<<<<<<<<<
 *         self._thisptr = NULL
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pybInkscape.pyx":668
 *         self._thisptr = NULL
 * 
 *     def __richcmp__(PYSPDesktop self, PYSPDesktop other,op):             # <<<<<<<<<<<<<<
 *         if op == 2:
 *             return self._thisptr == other._thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_15__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_11PYSPDesktop_15__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op) {
  PyObject *__pyx_v_op = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  __pyx_v_op = __Pyx_PyInt_From_int(__pyx_arg_op); if (unlikely(!__pyx_v_op)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __Pyx_GOTREF(__pyx_v_op);
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPDesktop.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_11pybInkscape_PYSPDesktop, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_11pybInkscape_PYSPDesktop, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_11PYSPDesktop_14__richcmp__(((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_v_other), ((PyObject *)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_op);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_11PYSPDesktop_14__richcmp__(struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_other, PyObject *__pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "pybInkscape.pyx":669
 * 
 *     def __richcmp__(PYSPDesktop self, PYSPDesktop other,op):
 *         if op == 2:             # <<<<<<<<<<<<<<
 *             return self._thisptr == other._thisptr
 *         elif op == 3:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":670
 *     def __richcmp__(PYSPDesktop self, PYSPDesktop other,op):
 *         if op == 2:
 *             return self._thisptr == other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 3:
 *             return self._thisptr != other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->__pyx_base._thisptr == __pyx_v_other->__pyx_base._thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":671
 *         if op == 2:
 *             return self._thisptr == other._thisptr
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return self._thisptr != other._thisptr
 *         elif op == 0:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":672
 *             return self._thisptr == other._thisptr
 *         elif op == 3:
 *             return self._thisptr != other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 0:
 *             return self._thisptr < other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->__pyx_base._thisptr != __pyx_v_other->__pyx_base._thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":673
 *         elif op == 3:
 *             return self._thisptr != other._thisptr
 *         elif op == 0:             # <<<<<<<<<<<<<<
 *             return self._thisptr < other._thisptr
 *         elif op == 1:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":674
 *             return self._thisptr != other._thisptr
 *         elif op == 0:
 *             return self._thisptr < other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 1:
 *             return self._thisptr <= other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->__pyx_base._thisptr < __pyx_v_other->__pyx_base._thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":675
 *         elif op == 0:
 *             return self._thisptr < other._thisptr
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return self._thisptr <= other._thisptr
 *         elif op == 4:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":676
 *             return self._thisptr < other._thisptr
 *         elif op == 1:
 *             return self._thisptr <= other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 4:
 *             return self._thisptr > other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->__pyx_base._thisptr <= __pyx_v_other->__pyx_base._thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":677
 *         elif op == 1:
 *             return self._thisptr <= other._thisptr
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return self._thisptr > other._thisptr
 *         elif op == 5:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":678
 *             return self._thisptr <= other._thisptr
 *         elif op == 4:
 *             return self._thisptr > other._thisptr             # <<<<<<<<<<<<<<
 *         elif op == 5:
 *             return self._thisptr >= other._thisptr
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->__pyx_base._thisptr > __pyx_v_other->__pyx_base._thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":679
 *         elif op == 4:
 *             return self._thisptr > other._thisptr
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return self._thisptr >= other._thisptr
 * 
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_op, __pyx_int_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":680
 *             return self._thisptr > other._thisptr
 *         elif op == 5:
 *             return self._thisptr >= other._thisptr             # <<<<<<<<<<<<<<
 * 
 * cdef class PYInkscape(object):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->__pyx_base._thisptr >= __pyx_v_other->__pyx_base._thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":668
 *         self._thisptr = NULL
 * 
 *     def __richcmp__(PYSPDesktop self, PYSPDesktop other,op):             # <<<<<<<<<<<<<<
 *         if op == 2:
 *             return self._thisptr == other._thisptr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.PYSPDesktop.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":692
 *                     'external_change']
 * 
 *     def __init__(self, ptr_co = None, *args):             # <<<<<<<<<<<<<<
 *         pass
 *         """
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_10PYInkscape_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11pybInkscape_10PYInkscape___init__[] = "\n        if not ptr_co:\n            _repr = <Application *>Application.instance()\n        else:\n            assert PyCObject_Check(ptr_co)\n            _repr = <Application *>PyCObject_AsVoidPtr(ptr_co)\n        self._thisptr = _repr\n        ";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_11pybInkscape_10PYInkscape___init__;
#endif
static int __pyx_pw_11pybInkscape_10PYInkscape_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_ptr_co = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 1) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 1, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return -1;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr_co,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr_co);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 1) ? pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        default:
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
    }
    __pyx_v_ptr_co = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("pybInkscape.PYInkscape.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_10PYInkscape___init__(((struct __pyx_obj_11pybInkscape_PYInkscape *)__pyx_v_self), __pyx_v_ptr_co, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_10PYInkscape___init__(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_ptr_co, CYTHON_UNUSED PyObject *__pyx_v_args) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":703
 *         """
 * 
 *     def get_all_desktops(self):             # <<<<<<<<<<<<<<
 *         cdef cpplist[SPDesktop_p] listbuf
 *         Application.instance().get_all_desktops(listbuf)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_3get_all_desktops(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_3get_all_desktops(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_all_desktops (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYInkscape_2get_all_desktops(((struct __pyx_obj_11pybInkscape_PYInkscape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_2get_all_desktops(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self) {
  std::list<__pyx_t_14pybApplication_SPDesktop_p>  __pyx_v_listbuf;
  PyObject *__pyx_v_ret = NULL;
  std::list<__pyx_t_14pybApplication_SPDesktop_p> ::iterator __pyx_v_itr;
  PyObject *__pyx_v_dsk_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_dsk = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_all_desktops", 0);

  /* "pybInkscape.pyx":705
 *     def get_all_desktops(self):
 *         cdef cpplist[SPDesktop_p] listbuf
 *         Application.instance().get_all_desktops(listbuf)             # <<<<<<<<<<<<<<
 * 
 *         ret = []
 */
  Inkscape::Application::instance().get_all_desktops(__pyx_v_listbuf);

  /* "pybInkscape.pyx":707
 *         Application.instance().get_all_desktops(listbuf)
 * 
 *         ret = []             # <<<<<<<<<<<<<<
 *         itr = listbuf.begin()
 *         while itr == listbuf.end():
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ret = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":708
 * 
 *         ret = []
 *         itr = listbuf.begin()             # <<<<<<<<<<<<<<
 *         while itr == listbuf.end():
 *             dsk_co = PyCObject_FromVoidPtr(deref(itr), NULL)
 */
  __pyx_v_itr = __pyx_v_listbuf.begin();

  /* "pybInkscape.pyx":709
 *         ret = []
 *         itr = listbuf.begin()
 *         while itr == listbuf.end():             # <<<<<<<<<<<<<<
 *             dsk_co = PyCObject_FromVoidPtr(deref(itr), NULL)
 *             dsk = PYSPDesktop(dsk_co)
 */
  while (1) {
    __pyx_t_2 = ((__pyx_v_itr == __pyx_v_listbuf.end()) != 0);
    if (!__pyx_t_2) break;

    /* "pybInkscape.pyx":710
 *         itr = listbuf.begin()
 *         while itr == listbuf.end():
 *             dsk_co = PyCObject_FromVoidPtr(deref(itr), NULL)             # <<<<<<<<<<<<<<
 *             dsk = PYSPDesktop(dsk_co)
 *             ret.append(dsk)
 */
    __pyx_t_1 = PyCObject_FromVoidPtr((*__pyx_v_itr), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_dsk_co, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pybInkscape.pyx":711
 *         while itr == listbuf.end():
 *             dsk_co = PyCObject_FromVoidPtr(deref(itr), NULL)
 *             dsk = PYSPDesktop(dsk_co)             # <<<<<<<<<<<<<<
 *             ret.append(dsk)
 * 
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_dsk_co);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_dsk_co);
    __Pyx_GIVEREF(__pyx_v_dsk_co);
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDesktop)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_dsk, ((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "pybInkscape.pyx":712
 *             dsk_co = PyCObject_FromVoidPtr(deref(itr), NULL)
 *             dsk = PYSPDesktop(dsk_co)
 *             ret.append(dsk)             # <<<<<<<<<<<<<<
 * 
 *         return ret
 */
    __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ret, ((PyObject *)__pyx_v_dsk)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pybInkscape.pyx":714
 *             ret.append(dsk)
 * 
 *         return ret             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ret);
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  /* "pybInkscape.pyx":703
 *         """
 * 
 *     def get_all_desktops(self):             # <<<<<<<<<<<<<<
 *         cdef cpplist[SPDesktop_p] listbuf
 *         Application.instance().get_all_desktops(listbuf)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.PYInkscape.get_all_desktops", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ret);
  __Pyx_XDECREF(__pyx_v_dsk_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_dsk);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":717
 * 
 *     @property
 *     def active_document(self):             # <<<<<<<<<<<<<<
 *         spdoc_co = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_5active_document(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_5active_document(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("active_document (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYInkscape_4active_document(((struct __pyx_obj_11pybInkscape_PYInkscape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_4active_document(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self) {
  PyObject *__pyx_v_spdoc_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_pyspdoc = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("active_document", 0);

  /* "pybInkscape.pyx":718
 *     @property
 *     def active_document(self):
 *         spdoc_co = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL)             # <<<<<<<<<<<<<<
 *         pyspdoc = PYSPDocument(spdoc_co)
 *         return pyspdoc
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_spdoc_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":719
 *     def active_document(self):
 *         spdoc_co = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)             # <<<<<<<<<<<<<<
 *         return pyspdoc
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_spdoc_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_spdoc_co);
  __Pyx_GIVEREF(__pyx_v_spdoc_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDocument)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pyspdoc = ((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":720
 *         spdoc_co = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)
 *         return pyspdoc             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_pyspdoc));
  __pyx_r = ((PyObject *)__pyx_v_pyspdoc);
  goto __pyx_L0;

  /* "pybInkscape.pyx":717
 * 
 *     @property
 *     def active_document(self):             # <<<<<<<<<<<<<<
 *         spdoc_co = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYInkscape.active_document", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_spdoc_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_pyspdoc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":723
 * 
 *     @property
 *     def active_desktop(self):             # <<<<<<<<<<<<<<
 *         dsk_co = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL)
 *         dsk = PYSPDesktop(dsk_co)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_7active_desktop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_7active_desktop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("active_desktop (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYInkscape_6active_desktop(((struct __pyx_obj_11pybInkscape_PYInkscape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_6active_desktop(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self) {
  PyObject *__pyx_v_dsk_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_dsk = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("active_desktop", 0);

  /* "pybInkscape.pyx":724
 *     @property
 *     def active_desktop(self):
 *         dsk_co = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL)             # <<<<<<<<<<<<<<
 *         dsk = PYSPDesktop(dsk_co)
 *         return dsk
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dsk_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":725
 *     def active_desktop(self):
 *         dsk_co = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL)
 *         dsk = PYSPDesktop(dsk_co)             # <<<<<<<<<<<<<<
 *         return dsk
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_dsk_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_dsk_co);
  __Pyx_GIVEREF(__pyx_v_dsk_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDesktop)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_dsk = ((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":726
 *         dsk_co = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL)
 *         dsk = PYSPDesktop(dsk_co)
 *         return dsk             # <<<<<<<<<<<<<<
 * 
 *     def refresh_display(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_dsk));
  __pyx_r = ((PyObject *)__pyx_v_dsk);
  goto __pyx_L0;

  /* "pybInkscape.pyx":723
 * 
 *     @property
 *     def active_desktop(self):             # <<<<<<<<<<<<<<
 *         dsk_co = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL)
 *         dsk = PYSPDesktop(dsk_co)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYInkscape.active_desktop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dsk_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_dsk);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":728
 *         return dsk
 * 
 *     def refresh_display(self):             # <<<<<<<<<<<<<<
 *         Application.instance().refresh_display()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_9refresh_display(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_9refresh_display(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("refresh_display (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYInkscape_8refresh_display(((struct __pyx_obj_11pybInkscape_PYInkscape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_8refresh_display(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("refresh_display", 0);

  /* "pybInkscape.pyx":729
 * 
 *     def refresh_display(self):
 *         Application.instance().refresh_display()             # <<<<<<<<<<<<<<
 * 
 *     def exit(self):
 */
  Inkscape::Application::instance().refresh_display();

  /* "pybInkscape.pyx":728
 *         return dsk
 * 
 *     def refresh_display(self):             # <<<<<<<<<<<<<<
 *         Application.instance().refresh_display()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":731
 *         Application.instance().refresh_display()
 * 
 *     def exit(self):             # <<<<<<<<<<<<<<
 *         Application.instance().exit()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_11exit(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYInkscape_11exit(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("exit (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYInkscape_10exit(((struct __pyx_obj_11pybInkscape_PYInkscape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYInkscape_10exit(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("exit", 0);

  /* "pybInkscape.pyx":732
 * 
 *     def exit(self):
 *         Application.instance().exit()             # <<<<<<<<<<<<<<
 * 
 * cdef class PYSPAction:
 */
  Inkscape::Application::instance().exit();

  /* "pybInkscape.pyx":731
 *         Application.instance().refresh_display()
 * 
 *     def exit(self):             # <<<<<<<<<<<<<<
 *         Application.instance().exit()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":737
 *     cdef pybVerb.SPAction *_thisptr
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         _verb = <pybVerb.SPAction *>PyCObject_AsVoidPtr(ptr)
 *         self._thisptr = _verb
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_10PYSPAction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_10PYSPAction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPAction.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPAction___cinit__(((struct __pyx_obj_11pybInkscape_PYSPAction *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_10PYSPAction___cinit__(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self, PyObject *__pyx_v_ptr) {
  struct SPAction *__pyx_v__verb;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":738
 * 
 *     def __cinit__(self, ptr):
 *         _verb = <pybVerb.SPAction *>PyCObject_AsVoidPtr(ptr)             # <<<<<<<<<<<<<<
 *         self._thisptr = _verb
 * 
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_ptr); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__verb = ((struct SPAction *)__pyx_t_1);

  /* "pybInkscape.pyx":739
 *     def __cinit__(self, ptr):
 *         _verb = <pybVerb.SPAction *>PyCObject_AsVoidPtr(ptr)
 *         self._thisptr = _verb             # <<<<<<<<<<<<<<
 * 
 *     def perform(self):
 */
  __pyx_v_self->_thisptr = __pyx_v__verb;

  /* "pybInkscape.pyx":737
 *     cdef pybVerb.SPAction *_thisptr
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         _verb = <pybVerb.SPAction *>PyCObject_AsVoidPtr(ptr)
 *         self._thisptr = _verb
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPAction.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":741
 *         self._thisptr = _verb
 * 
 *     def perform(self):             # <<<<<<<<<<<<<<
 *         _action = self._thisptr
 *         pybVerb.sp_action_perform(_action, NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPAction_3perform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPAction_3perform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("perform (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPAction_2perform(((struct __pyx_obj_11pybInkscape_PYSPAction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPAction_2perform(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self) {
  struct SPAction *__pyx_v__action;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  struct SPAction *__pyx_t_1;
  __Pyx_RefNannySetupContext("perform", 0);

  /* "pybInkscape.pyx":742
 * 
 *     def perform(self):
 *         _action = self._thisptr             # <<<<<<<<<<<<<<
 *         pybVerb.sp_action_perform(_action, NULL)
 * 
 */
  __pyx_t_1 = __pyx_v_self->_thisptr;
  __pyx_v__action = __pyx_t_1;

  /* "pybInkscape.pyx":743
 *     def perform(self):
 *         _action = self._thisptr
 *         pybVerb.sp_action_perform(_action, NULL)             # <<<<<<<<<<<<<<
 * 
 *     def set_active(self, int active):
 */
  sp_action_perform(__pyx_v__action, NULL);

  /* "pybInkscape.pyx":741
 *         self._thisptr = _verb
 * 
 *     def perform(self):             # <<<<<<<<<<<<<<
 *         _action = self._thisptr
 *         pybVerb.sp_action_perform(_action, NULL)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":745
 *         pybVerb.sp_action_perform(_action, NULL)
 * 
 *     def set_active(self, int active):             # <<<<<<<<<<<<<<
 *         _action = self._thisptr
 *         pybVerb.sp_action_set_active(_action, active)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPAction_5set_active(PyObject *__pyx_v_self, PyObject *__pyx_arg_active); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPAction_5set_active(PyObject *__pyx_v_self, PyObject *__pyx_arg_active) {
  int __pyx_v_active;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_active (wrapper)", 0);
  assert(__pyx_arg_active); {
    __pyx_v_active = __Pyx_PyInt_As_int(__pyx_arg_active); if (unlikely((__pyx_v_active == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 745; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPAction.set_active", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPAction_4set_active(((struct __pyx_obj_11pybInkscape_PYSPAction *)__pyx_v_self), ((int)__pyx_v_active));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPAction_4set_active(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self, int __pyx_v_active) {
  struct SPAction *__pyx_v__action;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  struct SPAction *__pyx_t_1;
  __Pyx_RefNannySetupContext("set_active", 0);

  /* "pybInkscape.pyx":746
 * 
 *     def set_active(self, int active):
 *         _action = self._thisptr             # <<<<<<<<<<<<<<
 *         pybVerb.sp_action_set_active(_action, active)
 * 
 */
  __pyx_t_1 = __pyx_v_self->_thisptr;
  __pyx_v__action = __pyx_t_1;

  /* "pybInkscape.pyx":747
 *     def set_active(self, int active):
 *         _action = self._thisptr
 *         pybVerb.sp_action_set_active(_action, active)             # <<<<<<<<<<<<<<
 * 
 *     def set_sensitive(self, int sensitive):
 */
  sp_action_set_active(__pyx_v__action, __pyx_v_active);

  /* "pybInkscape.pyx":745
 *         pybVerb.sp_action_perform(_action, NULL)
 * 
 *     def set_active(self, int active):             # <<<<<<<<<<<<<<
 *         _action = self._thisptr
 *         pybVerb.sp_action_set_active(_action, active)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":749
 *         pybVerb.sp_action_set_active(_action, active)
 * 
 *     def set_sensitive(self, int sensitive):             # <<<<<<<<<<<<<<
 *         _action = self._thisptr
 *         pybVerb.sp_action_set_sensitive(_action, sensitive)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_10PYSPAction_7set_sensitive(PyObject *__pyx_v_self, PyObject *__pyx_arg_sensitive); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_10PYSPAction_7set_sensitive(PyObject *__pyx_v_self, PyObject *__pyx_arg_sensitive) {
  int __pyx_v_sensitive;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_sensitive (wrapper)", 0);
  assert(__pyx_arg_sensitive); {
    __pyx_v_sensitive = __Pyx_PyInt_As_int(__pyx_arg_sensitive); if (unlikely((__pyx_v_sensitive == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYSPAction.set_sensitive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_10PYSPAction_6set_sensitive(((struct __pyx_obj_11pybInkscape_PYSPAction *)__pyx_v_self), ((int)__pyx_v_sensitive));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10PYSPAction_6set_sensitive(struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_self, int __pyx_v_sensitive) {
  struct SPAction *__pyx_v__action;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  struct SPAction *__pyx_t_1;
  __Pyx_RefNannySetupContext("set_sensitive", 0);

  /* "pybInkscape.pyx":750
 * 
 *     def set_sensitive(self, int sensitive):
 *         _action = self._thisptr             # <<<<<<<<<<<<<<
 *         pybVerb.sp_action_set_sensitive(_action, sensitive)
 * 
 */
  __pyx_t_1 = __pyx_v_self->_thisptr;
  __pyx_v__action = __pyx_t_1;

  /* "pybInkscape.pyx":751
 *     def set_sensitive(self, int sensitive):
 *         _action = self._thisptr
 *         pybVerb.sp_action_set_sensitive(_action, sensitive)             # <<<<<<<<<<<<<<
 * 
 * cdef class PYVerb:
 */
  sp_action_set_sensitive(__pyx_v__action, __pyx_v_sensitive);

  /* "pybInkscape.pyx":749
 *         pybVerb.sp_action_set_active(_action, active)
 * 
 *     def set_sensitive(self, int sensitive):             # <<<<<<<<<<<<<<
 *         _action = self._thisptr
 *         pybVerb.sp_action_set_sensitive(_action, sensitive)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":756
 *     cdef pybVerb.Verb *_thisptr
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         _verb = <pybVerb.Verb *>PyCObject_AsVoidPtr(ptr)
 *         self._thisptr = _verb
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_6PYVerb_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_6PYVerb_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ptr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 756; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 756; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYVerb.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_6PYVerb___cinit__(((struct __pyx_obj_11pybInkscape_PYVerb *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_6PYVerb___cinit__(struct __pyx_obj_11pybInkscape_PYVerb *__pyx_v_self, PyObject *__pyx_v_ptr) {
  Inkscape::Verb *__pyx_v__verb;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":757
 * 
 *     def __cinit__(self, ptr):
 *         _verb = <pybVerb.Verb *>PyCObject_AsVoidPtr(ptr)             # <<<<<<<<<<<<<<
 *         self._thisptr = _verb
 * 
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_ptr); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__verb = ((Inkscape::Verb *)__pyx_t_1);

  /* "pybInkscape.pyx":758
 *     def __cinit__(self, ptr):
 *         _verb = <pybVerb.Verb *>PyCObject_AsVoidPtr(ptr)
 *         self._thisptr = _verb             # <<<<<<<<<<<<<<
 * 
 *     def get_action(self, PYView view):
 */
  __pyx_v_self->_thisptr = __pyx_v__verb;

  /* "pybInkscape.pyx":756
 *     cdef pybVerb.Verb *_thisptr
 * 
 *     def __cinit__(self, ptr):             # <<<<<<<<<<<<<<
 *         _verb = <pybVerb.Verb *>PyCObject_AsVoidPtr(ptr)
 *         self._thisptr = _verb
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYVerb.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":760
 *         self._thisptr = _verb
 * 
 *     def get_action(self, PYView view):             # <<<<<<<<<<<<<<
 *         _view = view._thisptr
 *         _verb = self._thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_6PYVerb_3get_action(PyObject *__pyx_v_self, PyObject *__pyx_v_view); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_6PYVerb_3get_action(PyObject *__pyx_v_self, PyObject *__pyx_v_view) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_action (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_view), __pyx_ptype_11pybInkscape_PYView, 1, "view", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_6PYVerb_2get_action(((struct __pyx_obj_11pybInkscape_PYVerb *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYView *)__pyx_v_view));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_6PYVerb_2get_action(struct __pyx_obj_11pybInkscape_PYVerb *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYView *__pyx_v_view) {
  SPDesktop *__pyx_v__view;
  Inkscape::Verb *__pyx_v__verb;
  struct SPAction *__pyx_v__action;
  PyObject *__pyx_v__action_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPAction *__pyx_v_action_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  SPDesktop *__pyx_t_1;
  Inkscape::Verb *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_action", 0);

  /* "pybInkscape.pyx":761
 * 
 *     def get_action(self, PYView view):
 *         _view = view._thisptr             # <<<<<<<<<<<<<<
 *         _verb = self._thisptr
 *         _action = _verb.get_action(_view)
 */
  __pyx_t_1 = __pyx_v_view->_thisptr;
  __pyx_v__view = __pyx_t_1;

  /* "pybInkscape.pyx":762
 *     def get_action(self, PYView view):
 *         _view = view._thisptr
 *         _verb = self._thisptr             # <<<<<<<<<<<<<<
 *         _action = _verb.get_action(_view)
 *         _action_co = PyCObject_FromVoidPtr(_action, NULL)
 */
  __pyx_t_2 = __pyx_v_self->_thisptr;
  __pyx_v__verb = __pyx_t_2;

  /* "pybInkscape.pyx":763
 *         _view = view._thisptr
 *         _verb = self._thisptr
 *         _action = _verb.get_action(_view)             # <<<<<<<<<<<<<<
 *         _action_co = PyCObject_FromVoidPtr(_action, NULL)
 *         action_wrapper = PYSPAction(_action_co)
 */
  __pyx_v__action = __pyx_v__verb->get_action(__pyx_v__view);

  /* "pybInkscape.pyx":764
 *         _verb = self._thisptr
 *         _action = _verb.get_action(_view)
 *         _action_co = PyCObject_FromVoidPtr(_action, NULL)             # <<<<<<<<<<<<<<
 *         action_wrapper = PYSPAction(_action_co)
 *         return action_wrapper
 */
  __pyx_t_3 = PyCObject_FromVoidPtr(__pyx_v__action, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v__action_co = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":765
 *         _action = _verb.get_action(_view)
 *         _action_co = PyCObject_FromVoidPtr(_action, NULL)
 *         action_wrapper = PYSPAction(_action_co)             # <<<<<<<<<<<<<<
 *         return action_wrapper
 * 
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v__action_co);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v__action_co);
  __Pyx_GIVEREF(__pyx_v__action_co);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPAction)), __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_action_wrapper = ((struct __pyx_obj_11pybInkscape_PYSPAction *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "pybInkscape.pyx":766
 *         _action_co = PyCObject_FromVoidPtr(_action, NULL)
 *         action_wrapper = PYSPAction(_action_co)
 *         return action_wrapper             # <<<<<<<<<<<<<<
 * 
 * ## \brief Return the verb specified by an ID.
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_action_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_action_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":760
 *         self._thisptr = _verb
 * 
 *     def get_action(self, PYView view):             # <<<<<<<<<<<<<<
 *         _view = view._thisptr
 *         _verb = self._thisptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.PYVerb.get_action", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__action_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_action_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":771
 * #
 * # This is here
 * def verb_getbyid(bytes _id):             # <<<<<<<<<<<<<<
 *     _verb = pybVerb.pyb_verb_getbyid(<char *>_id)
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_1verb_getbyid(PyObject *__pyx_self, PyObject *__pyx_v__id); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_1verb_getbyid = {"verb_getbyid", (PyCFunction)__pyx_pw_11pybInkscape_1verb_getbyid, METH_O, 0};
static PyObject *__pyx_pw_11pybInkscape_1verb_getbyid(PyObject *__pyx_self, PyObject *__pyx_v__id) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("verb_getbyid (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v__id), (&PyBytes_Type), 1, "_id", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_verb_getbyid(__pyx_self, ((PyObject*)__pyx_v__id));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_verb_getbyid(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v__id) {
  Inkscape::Verb *__pyx_v__verb;
  PyObject *__pyx_v__verb_co = NULL;
  struct __pyx_obj_11pybInkscape_PYVerb *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("verb_getbyid", 0);

  /* "pybInkscape.pyx":772
 * # This is here
 * def verb_getbyid(bytes _id):
 *     _verb = pybVerb.pyb_verb_getbyid(<char *>_id)             # <<<<<<<<<<<<<<
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)
 *     wrapper = PYVerb(_verb_co)
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v__id); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v__verb = pyb_verb_getbyid(((char *)__pyx_t_1));

  /* "pybInkscape.pyx":773
 * def verb_getbyid(bytes _id):
 *     _verb = pybVerb.pyb_verb_getbyid(<char *>_id)
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)             # <<<<<<<<<<<<<<
 *     wrapper = PYVerb(_verb_co)
 *     return wrapper
 */
  __pyx_t_2 = PyCObject_FromVoidPtr(__pyx_v__verb, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v__verb_co = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":774
 *     _verb = pybVerb.pyb_verb_getbyid(<char *>_id)
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)
 *     wrapper = PYVerb(_verb_co)             # <<<<<<<<<<<<<<
 *     return wrapper
 * 
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v__verb_co);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v__verb_co);
  __Pyx_GIVEREF(__pyx_v__verb_co);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYVerb)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_wrapper = ((struct __pyx_obj_11pybInkscape_PYVerb *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":775
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)
 *     wrapper = PYVerb(_verb_co)
 *     return wrapper             # <<<<<<<<<<<<<<
 * 
 * ## \brief The type to implement NodeObserver in Python.
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":771
 * #
 * # This is here
 * def verb_getbyid(bytes _id):             # <<<<<<<<<<<<<<
 *     _verb = pybVerb.pyb_verb_getbyid(<char *>_id)
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.verb_getbyid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__verb_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":784
 *     cdef PYDocument _pydoc
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self._proxy = NULL
 *         self._pydoc = None
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_14PYNodeObserver_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_14PYNodeObserver_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver___cinit__(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_14PYNodeObserver___cinit__(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":785
 * 
 *     def __cinit__(self):
 *         self._proxy = NULL             # <<<<<<<<<<<<<<
 *         self._pydoc = None
 * 
 */
  __pyx_v_self->_proxy = NULL;

  /* "pybInkscape.pyx":786
 *     def __cinit__(self):
 *         self._proxy = NULL
 *         self._pydoc = None             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_pydoc);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_pydoc));
  __pyx_v_self->_pydoc = ((struct __pyx_obj_11pybInkscape_PYDocument *)Py_None);

  /* "pybInkscape.pyx":784
 *     cdef PYDocument _pydoc
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self._proxy = NULL
 *         self._pydoc = None
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":788
 *         self._pydoc = None
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self._proxy
 * 
 */

/* Python wrapper */
static void __pyx_pw_11pybInkscape_14PYNodeObserver_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_11pybInkscape_14PYNodeObserver_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_11pybInkscape_14PYNodeObserver_2__dealloc__(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_11pybInkscape_14PYNodeObserver_2__dealloc__(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pybInkscape.pyx":789
 * 
 *     def __dealloc__(self):
 *         del self._proxy             # <<<<<<<<<<<<<<
 * 
 *     #
 */
  delete __pyx_v_self->_proxy;

  /* "pybInkscape.pyx":788
 *         self._pydoc = None
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self._proxy
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pybInkscape.pyx":798
 *     # \see PYNode::addObserver() and PYNode::addSubtreeObserver()
 *     #
 *     def _notify_add_observer(self, PYNode node):             # <<<<<<<<<<<<<<
 *         pydoc = <PYDocument>node.doc
 *         if self._pydoc != pydoc and self._pydoc != None:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_5_notify_add_observer(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_5_notify_add_observer(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_notify_add_observer (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_11pybInkscape_PYNode, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_4_notify_add_observer(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_v_node));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_4_notify_add_observer(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_node) {
  struct __pyx_obj_11pybInkscape_PYDocument *__pyx_v_pydoc = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_notify_add_observer", 0);

  /* "pybInkscape.pyx":799
 *     #
 *     def _notify_add_observer(self, PYNode node):
 *         pydoc = <PYDocument>node.doc             # <<<<<<<<<<<<<<
 *         if self._pydoc != pydoc and self._pydoc != None:
 *             raise RuntimeError, "an PYNodeObserver can not be added for nodes of different documents"
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_node), __pyx_n_s_doc); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_t_1;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pydoc = ((struct __pyx_obj_11pybInkscape_PYDocument *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":800
 *     def _notify_add_observer(self, PYNode node):
 *         pydoc = <PYDocument>node.doc
 *         if self._pydoc != pydoc and self._pydoc != None:             # <<<<<<<<<<<<<<
 *             raise RuntimeError, "an PYNodeObserver can not be added for nodes of different documents"
 *         self._pydoc = pydoc
 */
  __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->_pydoc), ((PyObject *)__pyx_v_pydoc), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {
  } else {
    __pyx_t_3 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->_pydoc), Py_None, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "pybInkscape.pyx":801
 *         pydoc = <PYDocument>node.doc
 *         if self._pydoc != pydoc and self._pydoc != None:
 *             raise RuntimeError, "an PYNodeObserver can not be added for nodes of different documents"             # <<<<<<<<<<<<<<
 *         self._pydoc = pydoc
 * 
 */
    __Pyx_Raise(__pyx_builtin_RuntimeError, __pyx_kp_s_an_PYNodeObserver_can_not_be_add, 0, 0);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pybInkscape.pyx":802
 *         if self._pydoc != pydoc and self._pydoc != None:
 *             raise RuntimeError, "an PYNodeObserver can not be added for nodes of different documents"
 *         self._pydoc = pydoc             # <<<<<<<<<<<<<<
 * 
 *     def _notifyChildAdded(self, node, child, prev):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_pydoc));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_pydoc));
  __Pyx_GOTREF(__pyx_v_self->_pydoc);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_pydoc));
  __pyx_v_self->_pydoc = __pyx_v_pydoc;

  /* "pybInkscape.pyx":798
 *     # \see PYNode::addObserver() and PYNode::addSubtreeObserver()
 *     #
 *     def _notify_add_observer(self, PYNode node):             # <<<<<<<<<<<<<<
 *         pydoc = <PYDocument>node.doc
 *         if self._pydoc != pydoc and self._pydoc != None:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notify_add_observer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_pydoc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":804
 *         self._pydoc = pydoc
 * 
 *     def _notifyChildAdded(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_7_notifyChildAdded(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_7_notifyChildAdded(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node = 0;
  PyObject *__pyx_v_child = 0;
  PyObject *__pyx_v_prev = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_notifyChildAdded (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_child,&__pyx_n_s_prev,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyChildAdded", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyChildAdded", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_notifyChildAdded") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_node = values[0];
    __pyx_v_child = values[1];
    __pyx_v_prev = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_notifyChildAdded", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyChildAdded", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_6_notifyChildAdded(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_child, __pyx_v_prev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_6_notifyChildAdded(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_child, PyObject *__pyx_v_prev) {
  PyObject *__pyx_v__node = NULL;
  PyObject *__pyx_v__child = NULL;
  PyObject *__pyx_v__prev = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_notifyChildAdded", 0);

  /* "pybInkscape.pyx":805
 * 
 *     def _notifyChildAdded(self, node, child, prev):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)             # <<<<<<<<<<<<<<
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if prev:
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_node); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 805; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 805; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v__node = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":806
 *     def _notifyChildAdded(self, node, child, prev):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)             # <<<<<<<<<<<<<<
 *         if prev:
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_child); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v__child = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":807
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if prev:             # <<<<<<<<<<<<<<
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)
 *         else:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_prev); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":808
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if prev:
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)             # <<<<<<<<<<<<<<
 *         else:
 *             _prev = None
 */
    __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_prev); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v__prev = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pybInkscape.pyx":810
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)
 *         else:
 *             _prev = None             # <<<<<<<<<<<<<<
 * 
 *         self.child_added(_node, _child, _prev)
 */
    __Pyx_INCREF(Py_None);
    __pyx_v__prev = Py_None;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":812
 *             _prev = None
 * 
 *         self.child_added(_node, _child, _prev)             # <<<<<<<<<<<<<<
 * 
 *     def _notifyChildRemoved(self, node, child, prev):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_child_added); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_INCREF(__pyx_v__node);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v__node);
  __Pyx_GIVEREF(__pyx_v__node);
  __Pyx_INCREF(__pyx_v__child);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v__child);
  __Pyx_GIVEREF(__pyx_v__child);
  __Pyx_INCREF(__pyx_v__prev);
  PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, __pyx_v__prev);
  __Pyx_GIVEREF(__pyx_v__prev);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pybInkscape.pyx":804
 *         self._pydoc = pydoc
 * 
 *     def _notifyChildAdded(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyChildAdded", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__node);
  __Pyx_XDECREF(__pyx_v__child);
  __Pyx_XDECREF(__pyx_v__prev);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":814
 *         self.child_added(_node, _child, _prev)
 * 
 *     def _notifyChildRemoved(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_9_notifyChildRemoved(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_9_notifyChildRemoved(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node = 0;
  PyObject *__pyx_v_child = 0;
  PyObject *__pyx_v_prev = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_notifyChildRemoved (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_child,&__pyx_n_s_prev,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyChildRemoved", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyChildRemoved", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_notifyChildRemoved") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_node = values[0];
    __pyx_v_child = values[1];
    __pyx_v_prev = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_notifyChildRemoved", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyChildRemoved", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_8_notifyChildRemoved(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_child, __pyx_v_prev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_8_notifyChildRemoved(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_child, PyObject *__pyx_v_prev) {
  PyObject *__pyx_v__node = NULL;
  PyObject *__pyx_v__child = NULL;
  PyObject *__pyx_v__prev = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_notifyChildRemoved", 0);

  /* "pybInkscape.pyx":815
 * 
 *     def _notifyChildRemoved(self, node, child, prev):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)             # <<<<<<<<<<<<<<
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if prev:
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_node); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v__node = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":816
 *     def _notifyChildRemoved(self, node, child, prev):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)             # <<<<<<<<<<<<<<
 *         if prev:
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_child); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v__child = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":817
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if prev:             # <<<<<<<<<<<<<<
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)
 *         else:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_prev); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":818
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if prev:
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)             # <<<<<<<<<<<<<<
 *         else:
 *             _prev = None
 */
    __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_prev); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v__prev = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pybInkscape.pyx":820
 *             _prev = wrapnode(<Node *>PyCObject_AsVoidPtr(prev), self._pydoc)
 *         else:
 *             _prev = None             # <<<<<<<<<<<<<<
 * 
 *         self.child_removed(_node, _child, _prev)
 */
    __Pyx_INCREF(Py_None);
    __pyx_v__prev = Py_None;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":822
 *             _prev = None
 * 
 *         self.child_removed(_node, _child, _prev)             # <<<<<<<<<<<<<<
 * 
 *     def _notifyChildOrderChanged(self, node, child, old_prev, new_prev):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_child_removed); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_INCREF(__pyx_v__node);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v__node);
  __Pyx_GIVEREF(__pyx_v__node);
  __Pyx_INCREF(__pyx_v__child);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v__child);
  __Pyx_GIVEREF(__pyx_v__child);
  __Pyx_INCREF(__pyx_v__prev);
  PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, __pyx_v__prev);
  __Pyx_GIVEREF(__pyx_v__prev);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pybInkscape.pyx":814
 *         self.child_added(_node, _child, _prev)
 * 
 *     def _notifyChildRemoved(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyChildRemoved", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__node);
  __Pyx_XDECREF(__pyx_v__child);
  __Pyx_XDECREF(__pyx_v__prev);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":824
 *         self.child_removed(_node, _child, _prev)
 * 
 *     def _notifyChildOrderChanged(self, node, child, old_prev, new_prev):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_11_notifyChildOrderChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_11_notifyChildOrderChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node = 0;
  PyObject *__pyx_v_child = 0;
  PyObject *__pyx_v_old_prev = 0;
  PyObject *__pyx_v_new_prev = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_notifyChildOrderChanged (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_child,&__pyx_n_s_old_prev,&__pyx_n_s_new_prev,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyChildOrderChanged", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_old_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyChildOrderChanged", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_new_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyChildOrderChanged", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_notifyChildOrderChanged") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_node = values[0];
    __pyx_v_child = values[1];
    __pyx_v_old_prev = values[2];
    __pyx_v_new_prev = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_notifyChildOrderChanged", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyChildOrderChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_10_notifyChildOrderChanged(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_child, __pyx_v_old_prev, __pyx_v_new_prev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_10_notifyChildOrderChanged(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_child, PyObject *__pyx_v_old_prev, PyObject *__pyx_v_new_prev) {
  PyObject *__pyx_v__node = NULL;
  PyObject *__pyx_v__child = NULL;
  PyObject *__pyx_v__old_prev = NULL;
  PyObject *__pyx_v__new_prev = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_notifyChildOrderChanged", 0);

  /* "pybInkscape.pyx":825
 * 
 *     def _notifyChildOrderChanged(self, node, child, old_prev, new_prev):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)             # <<<<<<<<<<<<<<
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if old_prev:
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_node); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v__node = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":826
 *     def _notifyChildOrderChanged(self, node, child, old_prev, new_prev):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)             # <<<<<<<<<<<<<<
 *         if old_prev:
 *             _old_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(old_prev), self._pydoc)
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_child); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v__child = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":827
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if old_prev:             # <<<<<<<<<<<<<<
 *             _old_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(old_prev), self._pydoc)
 *         else:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_old_prev); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":828
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 *         if old_prev:
 *             _old_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(old_prev), self._pydoc)             # <<<<<<<<<<<<<<
 *         else:
 *             _old_prev = None
 */
    __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_old_prev); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v__old_prev = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pybInkscape.pyx":830
 *             _old_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(old_prev), self._pydoc)
 *         else:
 *             _old_prev = None             # <<<<<<<<<<<<<<
 *         if new_prev:
 *             _new_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(new_prev), self._pydoc)
 */
    __Pyx_INCREF(Py_None);
    __pyx_v__old_prev = Py_None;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":831
 *         else:
 *             _old_prev = None
 *         if new_prev:             # <<<<<<<<<<<<<<
 *             _new_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(new_prev), self._pydoc)
 *         else:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_new_prev); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "pybInkscape.pyx":832
 *             _old_prev = None
 *         if new_prev:
 *             _new_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(new_prev), self._pydoc)             # <<<<<<<<<<<<<<
 *         else:
 *             _new_prev = None
 */
    __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_new_prev); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = ((PyObject *)__pyx_v_self->_pydoc);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_2 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v__new_prev = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "pybInkscape.pyx":834
 *             _new_prev = wrapnode(<Node *>PyCObject_AsVoidPtr(new_prev), self._pydoc)
 *         else:
 *             _new_prev = None             # <<<<<<<<<<<<<<
 * 
 *         self.child_order_changed(_node, _child, _old_prev, _new_prev)
 */
    __Pyx_INCREF(Py_None);
    __pyx_v__new_prev = Py_None;
  }
  __pyx_L4:;

  /* "pybInkscape.pyx":836
 *             _new_prev = None
 * 
 *         self.child_order_changed(_node, _child, _old_prev, _new_prev)             # <<<<<<<<<<<<<<
 * 
 *     def _notifyContentChanged(self, node, old_content, new_content):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_child_order_changed); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(4+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_INCREF(__pyx_v__node);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v__node);
  __Pyx_GIVEREF(__pyx_v__node);
  __Pyx_INCREF(__pyx_v__child);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v__child);
  __Pyx_GIVEREF(__pyx_v__child);
  __Pyx_INCREF(__pyx_v__old_prev);
  PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, __pyx_v__old_prev);
  __Pyx_GIVEREF(__pyx_v__old_prev);
  __Pyx_INCREF(__pyx_v__new_prev);
  PyTuple_SET_ITEM(__pyx_t_7, 3+__pyx_t_6, __pyx_v__new_prev);
  __Pyx_GIVEREF(__pyx_v__new_prev);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":824
 *         self.child_removed(_node, _child, _prev)
 * 
 *     def _notifyChildOrderChanged(self, node, child, old_prev, new_prev):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         _child = wrapnode(<Node *>PyCObject_AsVoidPtr(child), self._pydoc)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyChildOrderChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__node);
  __Pyx_XDECREF(__pyx_v__child);
  __Pyx_XDECREF(__pyx_v__old_prev);
  __Pyx_XDECREF(__pyx_v__new_prev);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":838
 *         self.child_order_changed(_node, _child, _old_prev, _new_prev)
 * 
 *     def _notifyContentChanged(self, node, old_content, new_content):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         self.content_changed(_node, old_content, new_content)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_13_notifyContentChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_13_notifyContentChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node = 0;
  PyObject *__pyx_v_old_content = 0;
  PyObject *__pyx_v_new_content = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_notifyContentChanged (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_old_content,&__pyx_n_s_new_content,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_old_content)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyContentChanged", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_new_content)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyContentChanged", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_notifyContentChanged") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_node = values[0];
    __pyx_v_old_content = values[1];
    __pyx_v_new_content = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_notifyContentChanged", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyContentChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_12_notifyContentChanged(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_old_content, __pyx_v_new_content);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_12_notifyContentChanged(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_old_content, PyObject *__pyx_v_new_content) {
  PyObject *__pyx_v__node = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_notifyContentChanged", 0);

  /* "pybInkscape.pyx":839
 * 
 *     def _notifyContentChanged(self, node, old_content, new_content):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)             # <<<<<<<<<<<<<<
 *         self.content_changed(_node, old_content, new_content)
 * 
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_node); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v__node = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":840
 *     def _notifyContentChanged(self, node, old_content, new_content):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         self.content_changed(_node, old_content, new_content)             # <<<<<<<<<<<<<<
 * 
 *     def _notifyAttributeChanged(self, node, name, old_value, new_value):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_content_changed); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_4) {
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
  }
  __Pyx_INCREF(__pyx_v__node);
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v__node);
  __Pyx_GIVEREF(__pyx_v__node);
  __Pyx_INCREF(__pyx_v_old_content);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_old_content);
  __Pyx_GIVEREF(__pyx_v_old_content);
  __Pyx_INCREF(__pyx_v_new_content);
  PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_new_content);
  __Pyx_GIVEREF(__pyx_v_new_content);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pybInkscape.pyx":838
 *         self.child_order_changed(_node, _child, _old_prev, _new_prev)
 * 
 *     def _notifyContentChanged(self, node, old_content, new_content):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         self.content_changed(_node, old_content, new_content)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyContentChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__node);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":842
 *         self.content_changed(_node, old_content, new_content)
 * 
 *     def _notifyAttributeChanged(self, node, name, old_value, new_value):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         name_str = <char *>g_quark_to_string(name)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_15_notifyAttributeChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_15_notifyAttributeChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_node = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_old_value = 0;
  PyObject *__pyx_v_new_value = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_notifyAttributeChanged (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_name,&__pyx_n_s_old_value,&__pyx_n_s_new_value,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyAttributeChanged", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_old_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyAttributeChanged", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_new_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_notifyAttributeChanged", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_notifyAttributeChanged") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_node = values[0];
    __pyx_v_name = values[1];
    __pyx_v_old_value = values[2];
    __pyx_v_new_value = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_notifyAttributeChanged", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyAttributeChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_14_notifyAttributeChanged(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_name, __pyx_v_old_value, __pyx_v_new_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_14_notifyAttributeChanged(struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, PyObject *__pyx_v_node, PyObject *__pyx_v_name, PyObject *__pyx_v_old_value, PyObject *__pyx_v_new_value) {
  PyObject *__pyx_v__node = NULL;
  char *__pyx_v_name_str;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  GQuark __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_notifyAttributeChanged", 0);

  /* "pybInkscape.pyx":843
 * 
 *     def _notifyAttributeChanged(self, node, name, old_value, new_value):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)             # <<<<<<<<<<<<<<
 *         name_str = <char *>g_quark_to_string(name)
 *         self.attribute_changed(_node, name_str, old_value, new_value)
 */
  __pyx_t_1 = PyCObject_AsVoidPtr(__pyx_v_node); if (unlikely(__pyx_t_1 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((PyObject *)__pyx_v_self->_pydoc);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(((Inkscape::XML::Node *)__pyx_t_1), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v__node = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":844
 *     def _notifyAttributeChanged(self, node, name, old_value, new_value):
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         name_str = <char *>g_quark_to_string(name)             # <<<<<<<<<<<<<<
 *         self.attribute_changed(_node, name_str, old_value, new_value)
 * 
 */
  __pyx_t_4 = __Pyx_PyInt_As_GQuark(__pyx_v_name); if (unlikely((__pyx_t_4 == (GQuark)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_name_str = ((char *)g_quark_to_string(__pyx_t_4));

  /* "pybInkscape.pyx":845
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         name_str = <char *>g_quark_to_string(name)
 *         self.attribute_changed(_node, name_str, old_value, new_value)             # <<<<<<<<<<<<<<
 * 
 *     def notifyChildAdded(self, node, child, prev):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_attribute_changed); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyBytes_FromString(__pyx_v_name_str); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_8 = PyTuple_New(4+__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  if (__pyx_t_6) {
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_INCREF(__pyx_v__node);
  PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v__node);
  __Pyx_GIVEREF(__pyx_v__node);
  PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v_old_value);
  PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_v_old_value);
  __Pyx_GIVEREF(__pyx_v_old_value);
  __Pyx_INCREF(__pyx_v_new_value);
  PyTuple_SET_ITEM(__pyx_t_8, 3+__pyx_t_7, __pyx_v_new_value);
  __Pyx_GIVEREF(__pyx_v_new_value);
  __pyx_t_5 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pybInkscape.pyx":842
 *         self.content_changed(_node, old_content, new_content)
 * 
 *     def _notifyAttributeChanged(self, node, name, old_value, new_value):             # <<<<<<<<<<<<<<
 *         _node = wrapnode(<Node *>PyCObject_AsVoidPtr(node), self._pydoc)
 *         name_str = <char *>g_quark_to_string(name)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver._notifyAttributeChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__node);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":847
 *         self.attribute_changed(_node, name_str, old_value, new_value)
 * 
 *     def notifyChildAdded(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyChildAdded is not implemented"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_17notifyChildAdded(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_17notifyChildAdded(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_node = 0;
  CYTHON_UNUSED PyObject *__pyx_v_child = 0;
  CYTHON_UNUSED PyObject *__pyx_v_prev = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("notifyChildAdded (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_child,&__pyx_n_s_prev,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyChildAdded", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyChildAdded", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "notifyChildAdded") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_node = values[0];
    __pyx_v_child = values[1];
    __pyx_v_prev = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("notifyChildAdded", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyChildAdded", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_16notifyChildAdded(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_child, __pyx_v_prev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_16notifyChildAdded(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_child, CYTHON_UNUSED PyObject *__pyx_v_prev) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("notifyChildAdded", 0);

  /* "pybInkscape.pyx":848
 * 
 *     def notifyChildAdded(self, node, child, prev):
 *         raise NotImplementedError, "notifyChildAdded is not implemented"             # <<<<<<<<<<<<<<
 * 
 *     def notifyChildRemoved(self, node, child, prev):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, __pyx_kp_s_notifyChildAdded_is_not_implemen, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":847
 *         self.attribute_changed(_node, name_str, old_value, new_value)
 * 
 *     def notifyChildAdded(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyChildAdded is not implemented"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyChildAdded", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":850
 *         raise NotImplementedError, "notifyChildAdded is not implemented"
 * 
 *     def notifyChildRemoved(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyChildRemoved is not implemented"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_19notifyChildRemoved(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_19notifyChildRemoved(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_node = 0;
  CYTHON_UNUSED PyObject *__pyx_v_child = 0;
  CYTHON_UNUSED PyObject *__pyx_v_prev = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("notifyChildRemoved (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_child,&__pyx_n_s_prev,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyChildRemoved", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyChildRemoved", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "notifyChildRemoved") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_node = values[0];
    __pyx_v_child = values[1];
    __pyx_v_prev = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("notifyChildRemoved", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyChildRemoved", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_18notifyChildRemoved(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_child, __pyx_v_prev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_18notifyChildRemoved(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_child, CYTHON_UNUSED PyObject *__pyx_v_prev) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("notifyChildRemoved", 0);

  /* "pybInkscape.pyx":851
 * 
 *     def notifyChildRemoved(self, node, child, prev):
 *         raise NotImplementedError, "notifyChildRemoved is not implemented"             # <<<<<<<<<<<<<<
 * 
 *     def notifyChildOrderChanged(self, node, child, old_prev, new_prev):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, __pyx_kp_s_notifyChildRemoved_is_not_implem, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":850
 *         raise NotImplementedError, "notifyChildAdded is not implemented"
 * 
 *     def notifyChildRemoved(self, node, child, prev):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyChildRemoved is not implemented"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyChildRemoved", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":853
 *         raise NotImplementedError, "notifyChildRemoved is not implemented"
 * 
 *     def notifyChildOrderChanged(self, node, child, old_prev, new_prev):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyChildOrderChanged is not implemented"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_21notifyChildOrderChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_21notifyChildOrderChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_node = 0;
  CYTHON_UNUSED PyObject *__pyx_v_child = 0;
  CYTHON_UNUSED PyObject *__pyx_v_old_prev = 0;
  CYTHON_UNUSED PyObject *__pyx_v_new_prev = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("notifyChildOrderChanged (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_child,&__pyx_n_s_old_prev,&__pyx_n_s_new_prev,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_child)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyChildOrderChanged", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_old_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyChildOrderChanged", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_new_prev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyChildOrderChanged", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "notifyChildOrderChanged") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_node = values[0];
    __pyx_v_child = values[1];
    __pyx_v_old_prev = values[2];
    __pyx_v_new_prev = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("notifyChildOrderChanged", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyChildOrderChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_20notifyChildOrderChanged(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_child, __pyx_v_old_prev, __pyx_v_new_prev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_20notifyChildOrderChanged(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_child, CYTHON_UNUSED PyObject *__pyx_v_old_prev, CYTHON_UNUSED PyObject *__pyx_v_new_prev) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("notifyChildOrderChanged", 0);

  /* "pybInkscape.pyx":854
 * 
 *     def notifyChildOrderChanged(self, node, child, old_prev, new_prev):
 *         raise NotImplementedError, "notifyChildOrderChanged is not implemented"             # <<<<<<<<<<<<<<
 * 
 *     def notifyContentChanged(self, node, old_content, new_content):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, __pyx_kp_s_notifyChildOrderChanged_is_not_i, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":853
 *         raise NotImplementedError, "notifyChildRemoved is not implemented"
 * 
 *     def notifyChildOrderChanged(self, node, child, old_prev, new_prev):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyChildOrderChanged is not implemented"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyChildOrderChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":856
 *         raise NotImplementedError, "notifyChildOrderChanged is not implemented"
 * 
 *     def notifyContentChanged(self, node, old_content, new_content):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyContentChanged is not implemented"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_23notifyContentChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_23notifyContentChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_node = 0;
  CYTHON_UNUSED PyObject *__pyx_v_old_content = 0;
  CYTHON_UNUSED PyObject *__pyx_v_new_content = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("notifyContentChanged (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_old_content,&__pyx_n_s_new_content,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_old_content)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyContentChanged", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_new_content)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyContentChanged", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "notifyContentChanged") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_node = values[0];
    __pyx_v_old_content = values[1];
    __pyx_v_new_content = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("notifyContentChanged", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyContentChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_22notifyContentChanged(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_old_content, __pyx_v_new_content);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_22notifyContentChanged(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_old_content, CYTHON_UNUSED PyObject *__pyx_v_new_content) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("notifyContentChanged", 0);

  /* "pybInkscape.pyx":857
 * 
 *     def notifyContentChanged(self, node, old_content, new_content):
 *         raise NotImplementedError, "notifyContentChanged is not implemented"             # <<<<<<<<<<<<<<
 * 
 *     def notifyAttributeChanged(self, node, name, old_value, new_value):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, __pyx_kp_s_notifyContentChanged_is_not_impl, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":856
 *         raise NotImplementedError, "notifyChildOrderChanged is not implemented"
 * 
 *     def notifyContentChanged(self, node, old_content, new_content):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyContentChanged is not implemented"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyContentChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":859
 *         raise NotImplementedError, "notifyContentChanged is not implemented"
 * 
 *     def notifyAttributeChanged(self, node, name, old_value, new_value):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyAttributeChanged is not implemented"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_25notifyAttributeChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_14PYNodeObserver_25notifyAttributeChanged(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_node = 0;
  CYTHON_UNUSED PyObject *__pyx_v_name = 0;
  CYTHON_UNUSED PyObject *__pyx_v_old_value = 0;
  CYTHON_UNUSED PyObject *__pyx_v_new_value = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("notifyAttributeChanged (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_name,&__pyx_n_s_old_value,&__pyx_n_s_new_value,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_node)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyAttributeChanged", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 859; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_old_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyAttributeChanged", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 859; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_new_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("notifyAttributeChanged", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 859; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "notifyAttributeChanged") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 859; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_node = values[0];
    __pyx_v_name = values[1];
    __pyx_v_old_value = values[2];
    __pyx_v_new_value = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("notifyAttributeChanged", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 859; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyAttributeChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14PYNodeObserver_24notifyAttributeChanged(((struct __pyx_obj_11pybInkscape_PYNodeObserver *)__pyx_v_self), __pyx_v_node, __pyx_v_name, __pyx_v_old_value, __pyx_v_new_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14PYNodeObserver_24notifyAttributeChanged(CYTHON_UNUSED struct __pyx_obj_11pybInkscape_PYNodeObserver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_node, CYTHON_UNUSED PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_old_value, CYTHON_UNUSED PyObject *__pyx_v_new_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("notifyAttributeChanged", 0);

  /* "pybInkscape.pyx":860
 * 
 *     def notifyAttributeChanged(self, node, name, old_value, new_value):
 *         raise NotImplementedError, "notifyAttributeChanged is not implemented"             # <<<<<<<<<<<<<<
 * 
 * ## \brief Get Python wrapper of the SPDesktop pointed by an PyGPointer.
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, __pyx_kp_s_notifyAttributeChanged_is_not_im, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 860; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":859
 *         raise NotImplementedError, "notifyContentChanged is not implemented"
 * 
 *     def notifyAttributeChanged(self, node, name, old_value, new_value):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError, "notifyAttributeChanged is not implemented"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.PYNodeObserver.notifyAttributeChanged", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":866
 * # \param ptr is an PyGPointer.
 * #
 * def GPointer_2_PYSPDesktop(ptr):             # <<<<<<<<<<<<<<
 *     c_desktop = (<C_PyGPointer *>ptr).pointer
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_3GPointer_2_PYSPDesktop(PyObject *__pyx_self, PyObject *__pyx_v_ptr); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_3GPointer_2_PYSPDesktop = {"GPointer_2_PYSPDesktop", (PyCFunction)__pyx_pw_11pybInkscape_3GPointer_2_PYSPDesktop, METH_O, 0};
static PyObject *__pyx_pw_11pybInkscape_3GPointer_2_PYSPDesktop(PyObject *__pyx_self, PyObject *__pyx_v_ptr) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GPointer_2_PYSPDesktop (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_2GPointer_2_PYSPDesktop(__pyx_self, ((PyObject *)__pyx_v_ptr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_2GPointer_2_PYSPDesktop(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ptr) {
  void *__pyx_v_c_desktop;
  PyObject *__pyx_v_ptr_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_desktop = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GPointer_2_PYSPDesktop", 0);

  /* "pybInkscape.pyx":867
 * #
 * def GPointer_2_PYSPDesktop(ptr):
 *     c_desktop = (<C_PyGPointer *>ptr).pointer             # <<<<<<<<<<<<<<
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)
 *     desktop = PYSPDesktop(ptr_co)
 */
  __pyx_t_1 = ((PyGPointer *)__pyx_v_ptr)->pointer;
  __pyx_v_c_desktop = __pyx_t_1;

  /* "pybInkscape.pyx":868
 * def GPointer_2_PYSPDesktop(ptr):
 *     c_desktop = (<C_PyGPointer *>ptr).pointer
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)             # <<<<<<<<<<<<<<
 *     desktop = PYSPDesktop(ptr_co)
 *     return desktop
 */
  __pyx_t_2 = PyCObject_FromVoidPtr(__pyx_v_c_desktop, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_ptr_co = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":869
 *     c_desktop = (<C_PyGPointer *>ptr).pointer
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)
 *     desktop = PYSPDesktop(ptr_co)             # <<<<<<<<<<<<<<
 *     return desktop
 * 
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_ptr_co);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_ptr_co);
  __Pyx_GIVEREF(__pyx_v_ptr_co);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDesktop)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_desktop = ((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":870
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)
 *     desktop = PYSPDesktop(ptr_co)
 *     return desktop             # <<<<<<<<<<<<<<
 * 
 * def GObjfromptr(ptr):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_desktop));
  __pyx_r = ((PyObject *)__pyx_v_desktop);
  goto __pyx_L0;

  /* "pybInkscape.pyx":866
 * # \param ptr is an PyGPointer.
 * #
 * def GPointer_2_PYSPDesktop(ptr):             # <<<<<<<<<<<<<<
 *     c_desktop = (<C_PyGPointer *>ptr).pointer
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.GPointer_2_PYSPDesktop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ptr_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_desktop);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":872
 *     return desktop
 * 
 * def GObjfromptr(ptr):             # <<<<<<<<<<<<<<
 *     co = PyCObject_FromVoidPtr(<C_PyGPointer *>ptr, NULL)
 *     return co
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_5GObjfromptr(PyObject *__pyx_self, PyObject *__pyx_v_ptr); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_5GObjfromptr = {"GObjfromptr", (PyCFunction)__pyx_pw_11pybInkscape_5GObjfromptr, METH_O, 0};
static PyObject *__pyx_pw_11pybInkscape_5GObjfromptr(PyObject *__pyx_self, PyObject *__pyx_v_ptr) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GObjfromptr (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_4GObjfromptr(__pyx_self, ((PyObject *)__pyx_v_ptr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_4GObjfromptr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ptr) {
  PyObject *__pyx_v_co = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("GObjfromptr", 0);

  /* "pybInkscape.pyx":873
 * 
 * def GObjfromptr(ptr):
 *     co = PyCObject_FromVoidPtr(<C_PyGPointer *>ptr, NULL)             # <<<<<<<<<<<<<<
 *     return co
 * 
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(((PyGPointer *)__pyx_v_ptr), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":874
 * def GObjfromptr(ptr):
 *     co = PyCObject_FromVoidPtr(<C_PyGPointer *>ptr, NULL)
 *     return co             # <<<<<<<<<<<<<<
 * 
 * cdef wrapnode(Node* node, doc, memoryerror=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_co);
  __pyx_r = __pyx_v_co;
  goto __pyx_L0;

  /* "pybInkscape.pyx":872
 *     return desktop
 * 
 * def GObjfromptr(ptr):             # <<<<<<<<<<<<<<
 *     co = PyCObject_FromVoidPtr(<C_PyGPointer *>ptr, NULL)
 *     return co
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.GObjfromptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_co);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":876
 *     return co
 * 
 * cdef wrapnode(Node* node, doc, memoryerror=False):             # <<<<<<<<<<<<<<
 *     if node == NULL:
 *         if memoryerror:
 */

static PyObject *__pyx_f_11pybInkscape_wrapnode(Inkscape::XML::Node *__pyx_v_node, PyObject *__pyx_v_doc, struct __pyx_opt_args_11pybInkscape_wrapnode *__pyx_optional_args) {
  PyObject *__pyx_v_memoryerror = ((PyObject *)Py_False);
  PyObject *__pyx_v_ptr;
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_v_node_co = NULL;
  struct __pyx_obj_11pybInkscape_PYNode *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrapnode", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_memoryerror = __pyx_optional_args->memoryerror;
    }
  }

  /* "pybInkscape.pyx":877
 * 
 * cdef wrapnode(Node* node, doc, memoryerror=False):
 *     if node == NULL:             # <<<<<<<<<<<<<<
 *         if memoryerror:
 *             raise MemoryError, 'can not create node'
 */
  __pyx_t_1 = ((__pyx_v_node == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":878
 * cdef wrapnode(Node* node, doc, memoryerror=False):
 *     if node == NULL:
 *         if memoryerror:             # <<<<<<<<<<<<<<
 *             raise MemoryError, 'can not create node'
 *         return None
 */
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_memoryerror); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 878; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_1) {

      /* "pybInkscape.pyx":879
 *     if node == NULL:
 *         if memoryerror:
 *             raise MemoryError, 'can not create node'             # <<<<<<<<<<<<<<
 *         return None
 *     if node._wrapper != NULL:
 */
      __Pyx_Raise(__pyx_builtin_MemoryError, __pyx_kp_s_can_not_create_node, 0, 0);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "pybInkscape.pyx":880
 *         if memoryerror:
 *             raise MemoryError, 'can not create node'
 *         return None             # <<<<<<<<<<<<<<
 *     if node._wrapper != NULL:
 *         ptr = <PyObject *>node._wrapper
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":881
 *             raise MemoryError, 'can not create node'
 *         return None
 *     if node._wrapper != NULL:             # <<<<<<<<<<<<<<
 *         ptr = <PyObject *>node._wrapper
 *         obj = <object>ptr
 */
  __pyx_t_1 = ((__pyx_v_node->_wrapper != NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":882
 *         return None
 *     if node._wrapper != NULL:
 *         ptr = <PyObject *>node._wrapper             # <<<<<<<<<<<<<<
 *         obj = <object>ptr
 *         return obj
 */
    __pyx_v_ptr = ((PyObject *)__pyx_v_node->_wrapper);

    /* "pybInkscape.pyx":883
 *     if node._wrapper != NULL:
 *         ptr = <PyObject *>node._wrapper
 *         obj = <object>ptr             # <<<<<<<<<<<<<<
 *         return obj
 *     node_co = PyCObject_FromVoidPtr(node, NULL)
 */
    __pyx_t_2 = ((PyObject *)__pyx_v_ptr);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v_obj = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pybInkscape.pyx":884
 *         ptr = <PyObject *>node._wrapper
 *         obj = <object>ptr
 *         return obj             # <<<<<<<<<<<<<<
 *     node_co = PyCObject_FromVoidPtr(node, NULL)
 *     wrapper = PYNode(node_co, doc)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_obj);
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":885
 *         obj = <object>ptr
 *         return obj
 *     node_co = PyCObject_FromVoidPtr(node, NULL)             # <<<<<<<<<<<<<<
 *     wrapper = PYNode(node_co, doc)
 *     node._wrapper = NULL
 */
  __pyx_t_2 = PyCObject_FromVoidPtr(__pyx_v_node, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 885; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_node_co = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":886
 *         return obj
 *     node_co = PyCObject_FromVoidPtr(node, NULL)
 *     wrapper = PYNode(node_co, doc)             # <<<<<<<<<<<<<<
 *     node._wrapper = NULL
 *     return wrapper
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_node_co);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_node_co);
  __Pyx_GIVEREF(__pyx_v_node_co);
  __Pyx_INCREF(__pyx_v_doc);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_doc);
  __Pyx_GIVEREF(__pyx_v_doc);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYNode)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_wrapper = ((struct __pyx_obj_11pybInkscape_PYNode *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":887
 *     node_co = PyCObject_FromVoidPtr(node, NULL)
 *     wrapper = PYNode(node_co, doc)
 *     node._wrapper = NULL             # <<<<<<<<<<<<<<
 *     return wrapper
 * 
 */
  __pyx_v_node->_wrapper = NULL;

  /* "pybInkscape.pyx":888
 *     wrapper = PYNode(node_co, doc)
 *     node._wrapper = NULL
 *     return wrapper             # <<<<<<<<<<<<<<
 * 
 * cdef wrapobj(pybSPDesktop.SPObject *obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":876
 *     return co
 * 
 * cdef wrapnode(Node* node, doc, memoryerror=False):             # <<<<<<<<<<<<<<
 *     if node == NULL:
 *         if memoryerror:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.wrapnode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_node_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":890
 *     return wrapper
 * 
 * cdef wrapobj(pybSPDesktop.SPObject *obj):             # <<<<<<<<<<<<<<
 *     if obj == NULL:
 *         return None
 */

static PyObject *__pyx_f_11pybInkscape_wrapobj(SPObject *__pyx_v_obj) {
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrapobj", 0);

  /* "pybInkscape.pyx":891
 * 
 * cdef wrapobj(pybSPDesktop.SPObject *obj):
 *     if obj == NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     wrapper = gobj_api.newgobj(<C_GObject *>obj)
 */
  __pyx_t_1 = ((__pyx_v_obj == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":892
 * cdef wrapobj(pybSPDesktop.SPObject *obj):
 *     if obj == NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     wrapper = gobj_api.newgobj(<C_GObject *>obj)
 *     return wrapper
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":893
 *     if obj == NULL:
 *         return None
 *     wrapper = gobj_api.newgobj(<C_GObject *>obj)             # <<<<<<<<<<<<<<
 *     return wrapper
 * 
 */
  __pyx_t_2 = __pyx_v_11pybInkscape_gobj_api->newgobj(((GObject *)__pyx_v_obj)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_wrapper = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":894
 *         return None
 *     wrapper = gobj_api.newgobj(<C_GObject *>obj)
 *     return wrapper             # <<<<<<<<<<<<<<
 * 
 * #SPObj to Node
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":890
 *     return wrapper
 * 
 * cdef wrapobj(pybSPDesktop.SPObject *obj):             # <<<<<<<<<<<<<<
 *     if obj == NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.wrapobj", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":897
 * 
 * #SPObj to Node
 * cdef wrapobjtonode(pybSPDesktop.SPObject *obj):             # <<<<<<<<<<<<<<
 *     if obj == NULL:
 *         return None
 */

static PyObject *__pyx_f_11pybInkscape_wrapobjtonode(SPObject *__pyx_v_obj) {
  PyObject *__pyx_v_spdoc = NULL;
  PyObject *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrapobjtonode", 0);

  /* "pybInkscape.pyx":898
 * #SPObj to Node
 * cdef wrapobjtonode(pybSPDesktop.SPObject *obj):
 *     if obj == NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     spdoc = wrapdoc(obj.document)
 */
  __pyx_t_1 = ((__pyx_v_obj == NULL) != 0);
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":899
 * cdef wrapobjtonode(pybSPDesktop.SPObject *obj):
 *     if obj == NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     spdoc = wrapdoc(obj.document)
 *     if spdoc == None:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":900
 *     if obj == NULL:
 *         return None
 *     spdoc = wrapdoc(obj.document)             # <<<<<<<<<<<<<<
 *     if spdoc == None:
 *         return None
 */
  __pyx_t_2 = __pyx_f_11pybInkscape_wrapdoc(__pyx_v_obj->document); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_spdoc = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":901
 *         return None
 *     spdoc = wrapdoc(obj.document)
 *     if spdoc == None:             # <<<<<<<<<<<<<<
 *         return None
 *     wrapper = wrapnode(obj.repr, spdoc.rdoc)
 */
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_spdoc, Py_None, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_1) {

    /* "pybInkscape.pyx":902
 *     spdoc = wrapdoc(obj.document)
 *     if spdoc == None:
 *         return None             # <<<<<<<<<<<<<<
 *     wrapper = wrapnode(obj.repr, spdoc.rdoc)
 *     return wrapper
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }

  /* "pybInkscape.pyx":903
 *     if spdoc == None:
 *         return None
 *     wrapper = wrapnode(obj.repr, spdoc.rdoc)             # <<<<<<<<<<<<<<
 *     return wrapper
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_spdoc, __pyx_n_s_rdoc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pybInkscape_wrapnode(__pyx_v_obj->repr, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_wrapper = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pybInkscape.pyx":904
 *         return None
 *     wrapper = wrapnode(obj.repr, spdoc.rdoc)
 *     return wrapper             # <<<<<<<<<<<<<<
 * 
 * cdef wrapdoc(pybSPDesktop.SPDocument *doc):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapper);
  __pyx_r = __pyx_v_wrapper;
  goto __pyx_L0;

  /* "pybInkscape.pyx":897
 * 
 * #SPObj to Node
 * cdef wrapobjtonode(pybSPDesktop.SPObject *obj):             # <<<<<<<<<<<<<<
 *     if obj == NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pybInkscape.wrapobjtonode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_spdoc);
  __Pyx_XDECREF(__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":906
 *     return wrapper
 * 
 * cdef wrapdoc(pybSPDesktop.SPDocument *doc):             # <<<<<<<<<<<<<<
 *     doc_co = PyCObject_FromVoidPtr(doc, NULL)
 *     pyspdoc = PYSPDocument(doc_co)
 */

static PyObject *__pyx_f_11pybInkscape_wrapdoc(SPDocument *__pyx_v_doc) {
  PyObject *__pyx_v_doc_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSPDocument *__pyx_v_pyspdoc = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrapdoc", 0);

  /* "pybInkscape.pyx":907
 * 
 * cdef wrapdoc(pybSPDesktop.SPDocument *doc):
 *     doc_co = PyCObject_FromVoidPtr(doc, NULL)             # <<<<<<<<<<<<<<
 *     pyspdoc = PYSPDocument(doc_co)
 *     return pyspdoc
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(__pyx_v_doc, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_doc_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":908
 * cdef wrapdoc(pybSPDesktop.SPDocument *doc):
 *     doc_co = PyCObject_FromVoidPtr(doc, NULL)
 *     pyspdoc = PYSPDocument(doc_co)             # <<<<<<<<<<<<<<
 *     return pyspdoc
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 908; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_doc_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_doc_co);
  __Pyx_GIVEREF(__pyx_v_doc_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDocument)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 908; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pyspdoc = ((struct __pyx_obj_11pybInkscape_PYSPDocument *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":909
 *     doc_co = PyCObject_FromVoidPtr(doc, NULL)
 *     pyspdoc = PYSPDocument(doc_co)
 *     return pyspdoc             # <<<<<<<<<<<<<<
 * 
 * cdef wrapsel(Selection *sel):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_pyspdoc));
  __pyx_r = ((PyObject *)__pyx_v_pyspdoc);
  goto __pyx_L0;

  /* "pybInkscape.pyx":906
 *     return wrapper
 * 
 * cdef wrapdoc(pybSPDesktop.SPDocument *doc):             # <<<<<<<<<<<<<<
 *     doc_co = PyCObject_FromVoidPtr(doc, NULL)
 *     pyspdoc = PYSPDocument(doc_co)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.wrapdoc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_doc_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_pyspdoc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":911
 *     return pyspdoc
 * 
 * cdef wrapsel(Selection *sel):             # <<<<<<<<<<<<<<
 *     sel_co = PyCObject_FromVoidPtr(sel, NULL)
 *     wrapper = PYSelection(sel_co)
 */

static PyObject *__pyx_f_11pybInkscape_wrapsel(Inkscape::Selection *__pyx_v_sel) {
  PyObject *__pyx_v_sel_co = NULL;
  struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_wrapper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrapsel", 0);

  /* "pybInkscape.pyx":912
 * 
 * cdef wrapsel(Selection *sel):
 *     sel_co = PyCObject_FromVoidPtr(sel, NULL)             # <<<<<<<<<<<<<<
 *     wrapper = PYSelection(sel_co)
 *     return wrapper
 */
  __pyx_t_1 = PyCObject_FromVoidPtr(__pyx_v_sel, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_sel_co = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":913
 * cdef wrapsel(Selection *sel):
 *     sel_co = PyCObject_FromVoidPtr(sel, NULL)
 *     wrapper = PYSelection(sel_co)             # <<<<<<<<<<<<<<
 *     return wrapper
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 913; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_sel_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_sel_co);
  __Pyx_GIVEREF(__pyx_v_sel_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSelection)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 913; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_wrapper = ((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":914
 *     sel_co = PyCObject_FromVoidPtr(sel, NULL)
 *     wrapper = PYSelection(sel_co)
 *     return wrapper             # <<<<<<<<<<<<<<
 * 
 * def unserattrib(attrib):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapper));
  __pyx_r = ((PyObject *)__pyx_v_wrapper);
  goto __pyx_L0;

  /* "pybInkscape.pyx":911
 *     return pyspdoc
 * 
 * cdef wrapsel(Selection *sel):             # <<<<<<<<<<<<<<
 *     sel_co = PyCObject_FromVoidPtr(sel, NULL)
 *     wrapper = PYSelection(sel_co)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.wrapsel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_sel_co);
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":916
 *     return wrapper
 * 
 * def unserattrib(attrib):             # <<<<<<<<<<<<<<
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_7unserattrib(PyObject *__pyx_self, PyObject *__pyx_v_attrib); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_7unserattrib = {"unserattrib", (PyCFunction)__pyx_pw_11pybInkscape_7unserattrib, METH_O, 0};
static PyObject *__pyx_pw_11pybInkscape_7unserattrib(PyObject *__pyx_self, PyObject *__pyx_v_attrib) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("unserattrib (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_6unserattrib(__pyx_self, ((PyObject *)__pyx_v_attrib));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pybInkscape_11unserattrib_2generator(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pybInkscape.pyx":917
 * 
 * def unserattrib(attrib):
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)             # <<<<<<<<<<<<<<
 * 
 * def serattrib(d):
 */

static PyObject *__pyx_pf_11pybInkscape_11unserattrib_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *)__pyx_tp_new_11pybInkscape___pyx_scope_struct_1_genexpr(__pyx_ptype_11pybInkscape___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_GeneratorObject *gen = __Pyx_Generator_New((__pyx_generator_body_t) __pyx_gb_11pybInkscape_11unserattrib_2generator, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_unserattrib_locals_genexpr); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.unserattrib.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pybInkscape_11unserattrib_2generator(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_attrib)) { __Pyx_RaiseClosureNameError("attrib"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_attrib, __pyx_n_s_split); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_subattrib);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_subattrib, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_subattrib); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_subattrib, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_6;
      __pyx_t_6 = 0;
      __Pyx_XGIVEREF(__pyx_t_1);
      __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
      __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
      __pyx_cur_scope->__pyx_t_2 = __pyx_t_4;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_yield:;
      __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
      __pyx_cur_scope->__pyx_t_0 = 0;
      __Pyx_XGOTREF(__pyx_t_1);
      __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
      __pyx_t_4 = __pyx_cur_scope->__pyx_t_2;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L6;
    }
    __pyx_L6:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Generator_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return NULL;
}

/* "pybInkscape.pyx":916
 *     return wrapper
 * 
 * def unserattrib(attrib):             # <<<<<<<<<<<<<<
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 */

static PyObject *__pyx_pf_11pybInkscape_6unserattrib(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_attrib) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("unserattrib", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *)__pyx_tp_new_11pybInkscape___pyx_scope_struct__unserattrib(__pyx_ptype_11pybInkscape___pyx_scope_struct__unserattrib, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_attrib = __pyx_v_attrib;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_attrib);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_attrib);

  /* "pybInkscape.pyx":917
 * 
 * def unserattrib(attrib):
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)             # <<<<<<<<<<<<<<
 * 
 * def serattrib(d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_pf_11pybInkscape_11unserattrib_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyDict_Type))), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":916
 *     return wrapper
 * 
 * def unserattrib(attrib):             # <<<<<<<<<<<<<<
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.unserattrib", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":919
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 * def serattrib(d):             # <<<<<<<<<<<<<<
 *     return ";".join(":".join(item) for item in d.items())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_9serattrib(PyObject *__pyx_self, PyObject *__pyx_v_d); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_9serattrib = {"serattrib", (PyCFunction)__pyx_pw_11pybInkscape_9serattrib, METH_O, 0};
static PyObject *__pyx_pw_11pybInkscape_9serattrib(PyObject *__pyx_self, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("serattrib (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_8serattrib(__pyx_self, ((PyObject *)__pyx_v_d));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pybInkscape_9serattrib_2generator1(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pybInkscape.pyx":920
 * 
 * def serattrib(d):
 *     return ";".join(":".join(item) for item in d.items())             # <<<<<<<<<<<<<<
 * 
 * def test():
 */

static PyObject *__pyx_pf_11pybInkscape_9serattrib_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *)__pyx_tp_new_11pybInkscape___pyx_scope_struct_3_genexpr(__pyx_ptype_11pybInkscape___pyx_scope_struct_3_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_GeneratorObject *gen = __Pyx_Generator_New((__pyx_generator_body_t) __pyx_gb_11pybInkscape_9serattrib_2generator1, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_serattrib_locals_genexpr); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.serattrib.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pybInkscape_9serattrib_2generator1(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *__pyx_cur_scope = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_d)) { __Pyx_RaiseClosureNameError("d"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_d, __pyx_n_s_items); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_item);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_item, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyString_Join(__pyx_kp_s__10, __pyx_cur_scope->__pyx_v_item); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_XGIVEREF(__pyx_t_2);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_5;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_2);
    __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_5 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Generator_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return NULL;
}

/* "pybInkscape.pyx":919
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 * def serattrib(d):             # <<<<<<<<<<<<<<
 *     return ";".join(":".join(item) for item in d.items())
 * 
 */

static PyObject *__pyx_pf_11pybInkscape_8serattrib(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_d) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("serattrib", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *)__pyx_tp_new_11pybInkscape___pyx_scope_struct_2_serattrib(__pyx_ptype_11pybInkscape___pyx_scope_struct_2_serattrib, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_d = __pyx_v_d;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_d);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_d);

  /* "pybInkscape.pyx":920
 * 
 * def serattrib(d):
 *     return ";".join(":".join(item) for item in d.items())             # <<<<<<<<<<<<<<
 * 
 * def test():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_pf_11pybInkscape_9serattrib_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Join(__pyx_kp_s__8, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":919
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 * def serattrib(d):             # <<<<<<<<<<<<<<
 *     return ";".join(":".join(item) for item in d.items())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.serattrib", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":922
 *     return ";".join(":".join(item) for item in d.items())
 * 
 * def test():             # <<<<<<<<<<<<<<
 *     print "Testing 1, 2, 3"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_11test(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_11test = {"test", (PyCFunction)__pyx_pw_11pybInkscape_11test, METH_NOARGS, 0};
static PyObject *__pyx_pw_11pybInkscape_11test(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("test (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_10test(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_10test(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("test", 0);

  /* "pybInkscape.pyx":923
 * 
 * def test():
 *     print "Testing 1, 2, 3"             # <<<<<<<<<<<<<<
 * 
 * def version():
 */
  if (__Pyx_PrintOne(0, __pyx_kp_s_Testing_1_2_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":922
 *     return ";".join(":".join(item) for item in d.items())
 * 
 * def test():             # <<<<<<<<<<<<<<
 *     print "Testing 1, 2, 3"
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.test", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":925
 *     print "Testing 1, 2, 3"
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     print "Wed Jun 10 21:53 version"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_13version(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_13version = {"version", (PyCFunction)__pyx_pw_11pybInkscape_13version, METH_NOARGS, 0};
static PyObject *__pyx_pw_11pybInkscape_13version(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("version (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_12version(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_12version(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("version", 0);

  /* "pybInkscape.pyx":926
 * 
 * def version():
 *     print "Wed Jun 10 21:53 version"             # <<<<<<<<<<<<<<
 * 
 * cdef class Slot:
 */
  if (__Pyx_PrintOne(0, __pyx_kp_s_Wed_Jun_10_21_53_version) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":925
 *     print "Testing 1, 2, 3"
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     print "Wed Jun 10 21:53 version"
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pybInkscape.version", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":931
 *     cdef public object callback
 *     cdef pybSPDesktop.slot_proxy *_thisptr
 *     def __cinit__(self, signal_name, callback):             # <<<<<<<<<<<<<<
 *         self.callback = callback
 *         if signal_name in ["activate_desktop", "deactivate_desktop", "subselection_changed"]:
 */

/* Python wrapper */
static int __pyx_pw_11pybInkscape_4Slot_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pybInkscape_4Slot_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_signal_name = 0;
  PyObject *__pyx_v_callback = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_signal_name,&__pyx_n_s_callback,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_signal_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_callback)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 931; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 931; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_signal_name = values[0];
    __pyx_v_callback = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 931; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.Slot.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_4Slot___cinit__(((struct __pyx_obj_11pybInkscape_Slot *)__pyx_v_self), __pyx_v_signal_name, __pyx_v_callback);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_4Slot___cinit__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_signal_name, PyObject *__pyx_v_callback) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  char *__pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pybInkscape.pyx":932
 *     cdef pybSPDesktop.slot_proxy *_thisptr
 *     def __cinit__(self, signal_name, callback):
 *         self.callback = callback             # <<<<<<<<<<<<<<
 *         if signal_name in ["activate_desktop", "deactivate_desktop", "subselection_changed"]:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.desktop_callback)
 */
  __Pyx_INCREF(__pyx_v_callback);
  __Pyx_GIVEREF(__pyx_v_callback);
  __Pyx_GOTREF(__pyx_v_self->callback);
  __Pyx_DECREF(__pyx_v_self->callback);
  __pyx_v_self->callback = __pyx_v_callback;

  /* "pybInkscape.pyx":933
 *     def __cinit__(self, signal_name, callback):
 *         self.callback = callback
 *         if signal_name in ["activate_desktop", "deactivate_desktop", "subselection_changed"]:             # <<<<<<<<<<<<<<
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.desktop_callback)
 *         elif signal_name in ["selection_changed", "selection_set"]:
 */
  __Pyx_INCREF(__pyx_v_signal_name);
  __pyx_t_1 = __pyx_v_signal_name;
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_activate_desktop, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_deactivate_desktop, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_subselection_changed, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pybInkscape.pyx":934
 *         self.callback = callback
 *         if signal_name in ["activate_desktop", "deactivate_desktop", "subselection_changed"]:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.desktop_callback)             # <<<<<<<<<<<<<<
 *         elif signal_name in ["selection_changed", "selection_set"]:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.selection_callback)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_desktop_callback); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_self->_thisptr = new Inkscape::pybind::slot_proxy(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "pybInkscape.pyx":935
 *         if signal_name in ["activate_desktop", "deactivate_desktop", "subselection_changed"]:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.desktop_callback)
 *         elif signal_name in ["selection_changed", "selection_set"]:             # <<<<<<<<<<<<<<
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.selection_callback)
 *         else:
 */
  __Pyx_INCREF(__pyx_v_signal_name);
  __pyx_t_1 = __pyx_v_signal_name;
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_selection_changed, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 935; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (!__pyx_t_2) {
  } else {
    __pyx_t_3 = __pyx_t_2;
    goto __pyx_L7_bool_binop_done;
  }
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_selection_set, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 935; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_t_2;
  __pyx_L7_bool_binop_done:;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "pybInkscape.pyx":936
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.desktop_callback)
 *         elif signal_name in ["selection_changed", "selection_set"]:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.selection_callback)             # <<<<<<<<<<<<<<
 *         else:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.callback)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_selection_callback); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_self->_thisptr = new Inkscape::pybind::slot_proxy(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pybInkscape.pyx":938
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.selection_callback)
 *         else:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.callback)             # <<<<<<<<<<<<<<
 *         self._thisptr.connect(signal_name)
 * 
 */
    __pyx_t_1 = __pyx_v_self->callback;
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v_self->_thisptr = new Inkscape::pybind::slot_proxy(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "pybInkscape.pyx":939
 *         else:
 *            self._thisptr = new pybSPDesktop.slot_proxy(self.callback)
 *         self._thisptr.connect(signal_name)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_4 = __Pyx_PyObject_AsString(__pyx_v_signal_name); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_thisptr->connect(__pyx_t_4);

  /* "pybInkscape.pyx":931
 *     cdef public object callback
 *     cdef pybSPDesktop.slot_proxy *_thisptr
 *     def __cinit__(self, signal_name, callback):             # <<<<<<<<<<<<<<
 *         self.callback = callback
 *         if signal_name in ["activate_desktop", "deactivate_desktop", "subselection_changed"]:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pybInkscape.Slot.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":941
 *         self._thisptr.connect(signal_name)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self._thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_11pybInkscape_4Slot_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_11pybInkscape_4Slot_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_11pybInkscape_4Slot_2__dealloc__(((struct __pyx_obj_11pybInkscape_Slot *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_11pybInkscape_4Slot_2__dealloc__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pybInkscape.pyx":942
 * 
 *     def __dealloc__(self):
 *         del self._thisptr             # <<<<<<<<<<<<<<
 * 
 *     def desktop_callback(self, desktop_co):
 */
  delete __pyx_v_self->_thisptr;

  /* "pybInkscape.pyx":941
 *         self._thisptr.connect(signal_name)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self._thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pybInkscape.pyx":944
 *         del self._thisptr
 * 
 *     def desktop_callback(self, desktop_co):             # <<<<<<<<<<<<<<
 *         pydesktop = PYSPDesktop(desktop_co)
 *         self.callback(pydesktop)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_4Slot_5desktop_callback(PyObject *__pyx_v_self, PyObject *__pyx_v_desktop_co); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_4Slot_5desktop_callback(PyObject *__pyx_v_self, PyObject *__pyx_v_desktop_co) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("desktop_callback (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_4Slot_4desktop_callback(((struct __pyx_obj_11pybInkscape_Slot *)__pyx_v_self), ((PyObject *)__pyx_v_desktop_co));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_4Slot_4desktop_callback(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_desktop_co) {
  struct __pyx_obj_11pybInkscape_PYSPDesktop *__pyx_v_pydesktop = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("desktop_callback", 0);

  /* "pybInkscape.pyx":945
 * 
 *     def desktop_callback(self, desktop_co):
 *         pydesktop = PYSPDesktop(desktop_co)             # <<<<<<<<<<<<<<
 *         self.callback(pydesktop)
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_desktop_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_desktop_co);
  __Pyx_GIVEREF(__pyx_v_desktop_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSPDesktop)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pydesktop = ((struct __pyx_obj_11pybInkscape_PYSPDesktop *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":946
 *     def desktop_callback(self, desktop_co):
 *         pydesktop = PYSPDesktop(desktop_co)
 *         self.callback(pydesktop)             # <<<<<<<<<<<<<<
 * 
 *     def selection_callback(self, selection_co, flags = None):
 */
  __Pyx_INCREF(__pyx_v_self->callback);
  __pyx_t_1 = __pyx_v_self->callback; __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, ((PyObject *)__pyx_v_pydesktop)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_pydesktop));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_pydesktop));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_pydesktop));
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":944
 *         del self._thisptr
 * 
 *     def desktop_callback(self, desktop_co):             # <<<<<<<<<<<<<<
 *         pydesktop = PYSPDesktop(desktop_co)
 *         self.callback(pydesktop)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.Slot.desktop_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_pydesktop);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":948
 *         self.callback(pydesktop)
 * 
 *     def selection_callback(self, selection_co, flags = None):             # <<<<<<<<<<<<<<
 *         pyselection = PYSelection(selection_co)
 *         self.callback(pyselection)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_4Slot_7selection_callback(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_4Slot_7selection_callback(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_selection_co = 0;
  CYTHON_UNUSED PyObject *__pyx_v_flags = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("selection_callback (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_selection_co,&__pyx_n_s_flags,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_selection_co)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_flags);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "selection_callback") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 948; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_selection_co = values[0];
    __pyx_v_flags = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("selection_callback", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 948; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.Slot.selection_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_4Slot_6selection_callback(((struct __pyx_obj_11pybInkscape_Slot *)__pyx_v_self), __pyx_v_selection_co, __pyx_v_flags);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_4Slot_6selection_callback(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_selection_co, CYTHON_UNUSED PyObject *__pyx_v_flags) {
  struct __pyx_obj_11pybInkscape_PYSelection *__pyx_v_pyselection = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("selection_callback", 0);

  /* "pybInkscape.pyx":949
 * 
 *     def selection_callback(self, selection_co, flags = None):
 *         pyselection = PYSelection(selection_co)             # <<<<<<<<<<<<<<
 *         self.callback(pyselection)
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_selection_co);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_selection_co);
  __Pyx_GIVEREF(__pyx_v_selection_co);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYSelection)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pyselection = ((struct __pyx_obj_11pybInkscape_PYSelection *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pybInkscape.pyx":950
 *     def selection_callback(self, selection_co, flags = None):
 *         pyselection = PYSelection(selection_co)
 *         self.callback(pyselection)             # <<<<<<<<<<<<<<
 * 
 * def connect(signal_name, callback):
 */
  __Pyx_INCREF(__pyx_v_self->callback);
  __pyx_t_1 = __pyx_v_self->callback; __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, ((PyObject *)__pyx_v_pyselection)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_pyselection));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_pyselection));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_pyselection));
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":948
 *         self.callback(pydesktop)
 * 
 *     def selection_callback(self, selection_co, flags = None):             # <<<<<<<<<<<<<<
 *         pyselection = PYSelection(selection_co)
 *         self.callback(pyselection)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pybInkscape.Slot.selection_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_pyselection);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":929
 * 
 * cdef class Slot:
 *     cdef public object callback             # <<<<<<<<<<<<<<
 *     cdef pybSPDesktop.slot_proxy *_thisptr
 *     def __cinit__(self, signal_name, callback):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_4Slot_8callback_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pybInkscape_4Slot_8callback_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_4Slot_8callback___get__(((struct __pyx_obj_11pybInkscape_Slot *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_4Slot_8callback___get__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->callback);
  __pyx_r = __pyx_v_self->callback;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11pybInkscape_4Slot_8callback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11pybInkscape_4Slot_8callback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_4Slot_8callback_2__set__(((struct __pyx_obj_11pybInkscape_Slot *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_4Slot_8callback_2__set__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->callback);
  __Pyx_DECREF(__pyx_v_self->callback);
  __pyx_v_self->callback = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11pybInkscape_4Slot_8callback_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11pybInkscape_4Slot_8callback_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pybInkscape_4Slot_8callback_4__del__(((struct __pyx_obj_11pybInkscape_Slot *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pybInkscape_4Slot_8callback_4__del__(struct __pyx_obj_11pybInkscape_Slot *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->callback);
  __Pyx_DECREF(__pyx_v_self->callback);
  __pyx_v_self->callback = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":952
 *         self.callback(pyselection)
 * 
 * def connect(signal_name, callback):             # <<<<<<<<<<<<<<
 *     return Slot(signal_name, callback)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pybInkscape_15connect(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11pybInkscape_15connect = {"connect", (PyCFunction)__pyx_pw_11pybInkscape_15connect, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11pybInkscape_15connect(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_signal_name = 0;
  PyObject *__pyx_v_callback = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("connect (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_signal_name,&__pyx_n_s_callback,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_signal_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_callback)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("connect", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "connect") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_signal_name = values[0];
    __pyx_v_callback = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("connect", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pybInkscape.connect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pybInkscape_14connect(__pyx_self, __pyx_v_signal_name, __pyx_v_callback);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pybInkscape_14connect(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_signal_name, PyObject *__pyx_v_callback) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("connect", 0);

  /* "pybInkscape.pyx":953
 * 
 * def connect(signal_name, callback):
 *     return Slot(signal_name, callback)             # <<<<<<<<<<<<<<
 * 
 * cdef _create_inkscape_wrapper():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 953; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_signal_name);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_signal_name);
  __Pyx_GIVEREF(__pyx_v_signal_name);
  __Pyx_INCREF(__pyx_v_callback);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_callback);
  __Pyx_GIVEREF(__pyx_v_callback);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_Slot)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 953; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pybInkscape.pyx":952
 *         self.callback(pyselection)
 * 
 * def connect(signal_name, callback):             # <<<<<<<<<<<<<<
 *     return Slot(signal_name, callback)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape.connect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pybInkscape.pyx":955
 *     return Slot(signal_name, callback)
 * 
 * cdef _create_inkscape_wrapper():             # <<<<<<<<<<<<<<
 *     global inkscape, gobj_api
 *     inkscape_app = PYInkscape()
 */

static PyObject *__pyx_f_11pybInkscape__create_inkscape_wrapper(void) {
  struct __pyx_obj_11pybInkscape_PYInkscape *__pyx_v_inkscape_app = NULL;
  void *__pyx_v__gobj_api;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  void *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_create_inkscape_wrapper", 0);

  /* "pybInkscape.pyx":957
 * cdef _create_inkscape_wrapper():
 *     global inkscape, gobj_api
 *     inkscape_app = PYInkscape()             # <<<<<<<<<<<<<<
 *     _gobj_api = PyCObject_AsVoidPtr(gobject._PyGObject_API)
 *     gobj_api = <_PyGObject_Functions *>_gobj_api
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11pybInkscape_PYInkscape)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_inkscape_app = ((struct __pyx_obj_11pybInkscape_PYInkscape *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pybInkscape.pyx":958
 *     global inkscape, gobj_api
 *     inkscape_app = PYInkscape()
 *     _gobj_api = PyCObject_AsVoidPtr(gobject._PyGObject_API)             # <<<<<<<<<<<<<<
 *     gobj_api = <_PyGObject_Functions *>_gobj_api
 *     return inkscape_app
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_gobject); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_PyGObject_API); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = PyCObject_AsVoidPtr(__pyx_t_2); if (unlikely(__pyx_t_3 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v__gobj_api = __pyx_t_3;

  /* "pybInkscape.pyx":959
 *     inkscape_app = PYInkscape()
 *     _gobj_api = PyCObject_AsVoidPtr(gobject._PyGObject_API)
 *     gobj_api = <_PyGObject_Functions *>_gobj_api             # <<<<<<<<<<<<<<
 *     return inkscape_app
 * 
 */
  __pyx_v_11pybInkscape_gobj_api = ((struct _PyGObject_Functions *)__pyx_v__gobj_api);

  /* "pybInkscape.pyx":960
 *     _gobj_api = PyCObject_AsVoidPtr(gobject._PyGObject_API)
 *     gobj_api = <_PyGObject_Functions *>_gobj_api
 *     return inkscape_app             # <<<<<<<<<<<<<<
 * 
 * cdef _PyGObject_Functions *gobj_api
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_inkscape_app));
  __pyx_r = ((PyObject *)__pyx_v_inkscape_app);
  goto __pyx_L0;

  /* "pybInkscape.pyx":955
 *     return Slot(signal_name, callback)
 * 
 * cdef _create_inkscape_wrapper():             # <<<<<<<<<<<<<<
 *     global inkscape, gobj_api
 *     inkscape_app = PYInkscape()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pybInkscape._create_inkscape_wrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_inkscape_app);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_const__gchar___2a_")
 * cdef object __pyx_convert_vector_to_py_const__gchar___2a_(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_const__gchar___2a_(const std::vector<const gchar *>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_const__gchar___2a_", 0);

  /* "vector.to_py":68
 * @cname("__pyx_convert_vector_to_py_const__gchar___2a_")
 * cdef object __pyx_convert_vector_to_py_const__gchar___2a_(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = __Pyx_PyObject_FromString((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_const__gchar___2a_")
 * cdef object __pyx_convert_vector_to_py_const__gchar___2a_(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_const__gchar___2a_", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_11pybInkscape_PYNodeObserver(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pybInkscape_PYNodeObserver *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pybInkscape_PYNodeObserver *)o);
  p->_pydoc = ((struct __pyx_obj_11pybInkscape_PYDocument *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_11pybInkscape_14PYNodeObserver_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYNodeObserver(PyObject *o) {
  struct __pyx_obj_11pybInkscape_PYNodeObserver *p = (struct __pyx_obj_11pybInkscape_PYNodeObserver *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_11pybInkscape_14PYNodeObserver_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_pydoc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11pybInkscape_PYNodeObserver(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape_PYNodeObserver *p = (struct __pyx_obj_11pybInkscape_PYNodeObserver *)o;
  if (p->_pydoc) {
    e = (*v)(((PyObject*)p->_pydoc), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape_PYNodeObserver(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape_PYNodeObserver *p = (struct __pyx_obj_11pybInkscape_PYNodeObserver *)o;
  tmp = ((PyObject*)p->_pydoc);
  p->_pydoc = ((struct __pyx_obj_11pybInkscape_PYDocument *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pybInkscape_PYNodeObserver[] = {
  {"_notify_add_observer", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_5_notify_add_observer, METH_O, 0},
  {"_notifyChildAdded", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_7_notifyChildAdded, METH_VARARGS|METH_KEYWORDS, 0},
  {"_notifyChildRemoved", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_9_notifyChildRemoved, METH_VARARGS|METH_KEYWORDS, 0},
  {"_notifyChildOrderChanged", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_11_notifyChildOrderChanged, METH_VARARGS|METH_KEYWORDS, 0},
  {"_notifyContentChanged", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_13_notifyContentChanged, METH_VARARGS|METH_KEYWORDS, 0},
  {"_notifyAttributeChanged", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_15_notifyAttributeChanged, METH_VARARGS|METH_KEYWORDS, 0},
  {"notifyChildAdded", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_17notifyChildAdded, METH_VARARGS|METH_KEYWORDS, 0},
  {"notifyChildRemoved", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_19notifyChildRemoved, METH_VARARGS|METH_KEYWORDS, 0},
  {"notifyChildOrderChanged", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_21notifyChildOrderChanged, METH_VARARGS|METH_KEYWORDS, 0},
  {"notifyContentChanged", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_23notifyContentChanged, METH_VARARGS|METH_KEYWORDS, 0},
  {"notifyAttributeChanged", (PyCFunction)__pyx_pw_11pybInkscape_14PYNodeObserver_25notifyAttributeChanged, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYNodeObserver = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYNodeObserver", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYNodeObserver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYNodeObserver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape_PYNodeObserver, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape_PYNodeObserver, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYNodeObserver, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYNodeObserver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pybInkscape_PYNode __pyx_vtable_11pybInkscape_PYNode;

static PyObject *__pyx_tp_new_11pybInkscape_PYNode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pybInkscape_PYNode *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pybInkscape_PYNode *)o);
  p->__pyx_vtab = __pyx_vtabptr_11pybInkscape_PYNode;
  p->_doc = Py_None; Py_INCREF(Py_None);
  p->pystore = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYNode(PyObject *o) {
  struct __pyx_obj_11pybInkscape_PYNode *p = (struct __pyx_obj_11pybInkscape_PYNode *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_doc);
  Py_CLEAR(p->pystore);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11pybInkscape_PYNode(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape_PYNode *p = (struct __pyx_obj_11pybInkscape_PYNode *)o;
  if (p->_doc) {
    e = (*v)(p->_doc, a); if (e) return e;
  }
  if (p->pystore) {
    e = (*v)(p->pystore, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape_PYNode(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape_PYNode *p = (struct __pyx_obj_11pybInkscape_PYNode *)o;
  tmp = ((PyObject*)p->_doc);
  p->_doc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->pystore);
  p->pystore = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_11pybInkscape_PYNode(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_11pybInkscape_PYNode(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_11pybInkscape_6PYNode_15__setitem__(o, i, v);
  }
  else {
    return __pyx_pw_11pybInkscape_6PYNode_17__delitem__(o, i);
  }
}

static PyObject *__pyx_getprop_11pybInkscape_6PYNode__doc(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pybInkscape_6PYNode_4_doc_1__get__(o);
}

static int __pyx_setprop_11pybInkscape_6PYNode__doc(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pybInkscape_6PYNode_4_doc_3__set__(o, v);
  }
  else {
    return __pyx_pw_11pybInkscape_6PYNode_4_doc_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11pybInkscape_6PYNode_pystore(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pybInkscape_6PYNode_7pystore_1__get__(o);
}

static int __pyx_setprop_11pybInkscape_6PYNode_pystore(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pybInkscape_6PYNode_7pystore_3__set__(o, v);
  }
  else {
    return __pyx_pw_11pybInkscape_6PYNode_7pystore_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11pybInkscape_PYNode[] = {
  {"type", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_3type, METH_NOARGS, 0},
  {"name", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_5name, METH_NOARGS, 0},
  {"content", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_7content, METH_NOARGS, 0},
  {"attribute", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_9attribute, METH_O, 0},
  {"get", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_13get, METH_VARARGS|METH_KEYWORDS, 0},
  {"keys", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_23keys, METH_NOARGS, 0},
  {"delete", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_25delete, METH_VARARGS|METH_KEYWORDS, 0},
  {"setPosition", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_27setPosition, METH_O, 0},
  {"setContent", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_29setContent, METH_O, 0},
  {"setAttribute", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_31setAttribute, METH_VARARGS|METH_KEYWORDS, 0},
  {"setwrapper", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_33setwrapper, METH_O, 0},
  {"getwrapper", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_35getwrapper, METH_NOARGS, 0},
  {"doc", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_37doc, METH_NOARGS, 0},
  {"root", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_39root, METH_NOARGS, 0},
  {"parent", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_41parent, METH_NOARGS, 0},
  {"next", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_43next, METH_NOARGS, 0},
  {"firstChild", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_45firstChild, METH_NOARGS, 0},
  {"lastChild", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_47lastChild, METH_NOARGS, 0},
  {"children", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_49children, METH_NOARGS, 0},
  {"nthChild", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_51nthChild, METH_O, 0},
  {"addChild", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_53addChild, METH_VARARGS|METH_KEYWORDS, 0},
  {"appendChild", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_55appendChild, METH_O, 0},
  {"removeChild", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_57removeChild, METH_O, 0},
  {"changeOrder", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_59changeOrder, METH_VARARGS|METH_KEYWORDS, 0},
  {"mergeFrom", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_61mergeFrom, METH_VARARGS|METH_KEYWORDS, 0},
  {"overwriteWith", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_63overwriteWith, METH_O, 0},
  {"addObserver", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_65addObserver, METH_O, 0},
  {"removeObserver", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_67removeObserver, METH_O, 0},
  {"addSubtreeObserver", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_69addSubtreeObserver, METH_O, 0},
  {"removeSubtreeObserver", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_71removeSubtreeObserver, METH_O, 0},
  {"duplicate", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_73duplicate, METH_VARARGS|METH_KEYWORDS, 0},
  {"getCenter", (PyCFunction)__pyx_pw_11pybInkscape_6PYNode_75getCenter, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11pybInkscape_PYNode[] = {
  {(char *)"_doc", __pyx_getprop_11pybInkscape_6PYNode__doc, __pyx_setprop_11pybInkscape_6PYNode__doc, 0, 0},
  {(char *)"pystore", __pyx_getprop_11pybInkscape_6PYNode_pystore, __pyx_setprop_11pybInkscape_6PYNode_pystore, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_PYNode = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_11pybInkscape_PYNode, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_11pybInkscape_6PYNode_19__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_PYNode = {
  0, /*mp_length*/
  __pyx_pw_11pybInkscape_6PYNode_11__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_11pybInkscape_PYNode, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_11pybInkscape_PYNode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYNode", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYNode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYNode, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_PYNode, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_PYNode, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape_PYNode, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape_PYNode, /*tp_clear*/
  __pyx_pw_11pybInkscape_6PYNode_21__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYNode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11pybInkscape_PYNode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pybInkscape_6PYNode_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYNode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pybInkscape_PYElementNode __pyx_vtable_11pybInkscape_PYElementNode;

static PyObject *__pyx_tp_new_11pybInkscape_PYElementNode(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pybInkscape_PYElementNode *p;
  PyObject *o = __pyx_tp_new_11pybInkscape_PYNode(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pybInkscape_PYElementNode *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pybInkscape_PYNode*)__pyx_vtabptr_11pybInkscape_PYElementNode;
  return o;
}

static PyMethodDef __pyx_methods_11pybInkscape_PYElementNode[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYElementNode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYElementNode", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYElementNode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYNode, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape_PYNode, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape_PYNode, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYElementNode, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pybInkscape_13PYElementNode_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYElementNode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pybInkscape_PYDocument __pyx_vtable_11pybInkscape_PYDocument;

static PyObject *__pyx_tp_new_11pybInkscape_PYDocument(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pybInkscape_PYDocument *p;
  PyObject *o = __pyx_tp_new_11pybInkscape_PYNode(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pybInkscape_PYDocument *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pybInkscape_PYNode*)__pyx_vtabptr_11pybInkscape_PYDocument;
  p->_pyspdoc = ((struct __pyx_obj_11pybInkscape_PYSPDocument *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_11pybInkscape_10PYDocument_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYDocument(PyObject *o) {
  struct __pyx_obj_11pybInkscape_PYDocument *p = (struct __pyx_obj_11pybInkscape_PYDocument *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_pyspdoc);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pybInkscape_PYNode(o);
}

static int __pyx_tp_traverse_11pybInkscape_PYDocument(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape_PYDocument *p = (struct __pyx_obj_11pybInkscape_PYDocument *)o;
  e = __pyx_tp_traverse_11pybInkscape_PYNode(o, v, a); if (e) return e;
  if (p->_pyspdoc) {
    e = (*v)(((PyObject*)p->_pyspdoc), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape_PYDocument(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape_PYDocument *p = (struct __pyx_obj_11pybInkscape_PYDocument *)o;
  __pyx_tp_clear_11pybInkscape_PYNode(o);
  tmp = ((PyObject*)p->_pyspdoc);
  p->_pyspdoc = ((struct __pyx_obj_11pybInkscape_PYSPDocument *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pybInkscape_PYDocument[] = {
  {"root", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_5root, METH_NOARGS, 0},
  {"inTransaction", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_7inTransaction, METH_NOARGS, 0},
  {"beginTransaction", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_9beginTransaction, METH_NOARGS, 0},
  {"rollback", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_11rollback, METH_NOARGS, 0},
  {"commit", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_13commit, METH_NOARGS, 0},
  {"createElement", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_15createElement, METH_O, 0},
  {"createTextNode", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_17createTextNode, METH_O, 0},
  {"createComment", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_19createComment, METH_O, 0},
  {"createPI", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_21createPI, METH_VARARGS|METH_KEYWORDS, 0},
  {"spdoc", (PyCFunction)__pyx_pw_11pybInkscape_10PYDocument_23spdoc, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYDocument = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYDocument", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYDocument), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYDocument, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape_PYDocument, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape_PYDocument, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYDocument, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pybInkscape_10PYDocument_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYDocument, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSPDocument(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_11pybInkscape_12PYSPDocument_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYSPDocument(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYSPDocument[] = {
  {"rdoc", (PyCFunction)__pyx_pw_11pybInkscape_12PYSPDocument_3rdoc, METH_NOARGS, 0},
  {"root", (PyCFunction)__pyx_pw_11pybInkscape_12PYSPDocument_5root, METH_NOARGS, 0},
  {"connect_layers_changed", (PyCFunction)__pyx_pw_11pybInkscape_12PYSPDocument_7connect_layers_changed, METH_O, 0},
  {"done", (PyCFunction)__pyx_pw_11pybInkscape_12PYSPDocument_9done, METH_VARARGS|METH_KEYWORDS, 0},
  {"maybe_undo", (PyCFunction)__pyx_pw_11pybInkscape_12PYSPDocument_11maybe_undo, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYSPDocument = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSPDocument", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSPDocument), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSPDocument, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYSPDocument, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSPDocument, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSelection(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_11pybInkscape_11PYSelection_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYSelection(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYSelection[] = {
  {"toggle", (PyCFunction)__pyx_pw_11pybInkscape_11PYSelection_3toggle, METH_O, 0},
  {"clear", (PyCFunction)__pyx_pw_11pybInkscape_11PYSelection_5clear, METH_NOARGS, 0},
  {"add", (PyCFunction)__pyx_pw_11pybInkscape_11PYSelection_7add, METH_O, 0},
  {"remove", (PyCFunction)__pyx_pw_11pybInkscape_11PYSelection_9remove, METH_O, 0},
  {"desktop", (PyCFunction)__pyx_pw_11pybInkscape_11PYSelection_11desktop, METH_NOARGS, 0},
  {"activeContext", (PyCFunction)__pyx_pw_11pybInkscape_11PYSelection_13activeContext, METH_NOARGS, 0},
  {"list", (PyCFunction)__pyx_pw_11pybInkscape_11PYSelection_15list, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYSelection = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSelection", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSelection), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSelection, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYSelection, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSelection, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSPObject(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_ptype_9pygobject_GObject->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYSPObject(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  if (likely(__pyx_ptype_9pygobject_GObject)) __pyx_ptype_9pygobject_GObject->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_11pybInkscape_PYSPObject);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYSPObject[] = {
  {"repr", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_1repr, METH_NOARGS, 0},
  {"_get_pyspdoc", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_3_get_pyspdoc, METH_NOARGS, 0},
  {"firstChild", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_5firstChild, METH_NOARGS, 0},
  {"lastChild", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_7lastChild, METH_NOARGS, 0},
  {"getNext", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_9getNext, METH_NOARGS, 0},
  {"getPrev", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_11getPrev, METH_NOARGS, 0},
  {"hasChildren", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_13hasChildren, METH_NOARGS, 0},
  {"getId", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_15getId, METH_NOARGS, 0},
  {"label", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_17label, METH_NOARGS, 0},
  {"title", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_19title, METH_NOARGS, 0},
  {"desc", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPObject_21desc, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYSPObject = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSPObject", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSPObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSPObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYSPObject, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSPObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSPItem(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_11pybInkscape_PYSPObject(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_11pybInkscape_PYSPItem[] = {
  {"getCenter", (PyCFunction)__pyx_pw_11pybInkscape_8PYSPItem_1getCenter, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYSPItem = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSPItem", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSPItem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSPObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYSPItem, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSPItem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSPRoot(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_11pybInkscape_PYSPItem(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyTypeObject __pyx_type_11pybInkscape_PYSPRoot = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSPRoot", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSPRoot), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSPObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSPRoot, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSPRect(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_11pybInkscape_PYSPItem(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyTypeObject __pyx_type_11pybInkscape_PYSPRect = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSPRect", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSPRect), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSPObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSPRect, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYDock(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_11pybInkscape_6PYDock_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYDock(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYDock[] = {
  {"new_item", (PyCFunction)__pyx_pw_11pybInkscape_6PYDock_3new_item, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYDock = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYDock", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYDock), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYDock, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYDock, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYDock, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYDockItem(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_11pybInkscape_10PYDockItem_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYDockItem(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYDockItem[] = {
  {"gobj", (PyCFunction)__pyx_pw_11pybInkscape_10PYDockItem_3gobj, METH_NOARGS, 0},
  {"get_vbox", (PyCFunction)__pyx_pw_11pybInkscape_10PYDockItem_5get_vbox, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYDockItem = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYDockItem", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYDockItem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYDockItem, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYDockItem, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYDockItem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYView(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_11pybInkscape_6PYView_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYView(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYView[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYView = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYView", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYView), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYView, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYView, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYView, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSPDesktop(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_11pybInkscape_PYView(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYSPDesktop(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_11pybInkscape_11PYSPDesktop_13__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_11pybInkscape_PYView(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYSPDesktop[] = {
  {"selection", (PyCFunction)__pyx_pw_11pybInkscape_11PYSPDesktop_1selection, METH_NOARGS, 0},
  {"doc", (PyCFunction)__pyx_pw_11pybInkscape_11PYSPDesktop_3doc, METH_NOARGS, 0},
  {"getToplevel", (PyCFunction)__pyx_pw_11pybInkscape_11PYSPDesktop_5getToplevel, METH_NOARGS, 0},
  {"getDock", (PyCFunction)__pyx_pw_11pybInkscape_11PYSPDesktop_7getDock, METH_NOARGS, 0},
  {"setCurrentLayer", (PyCFunction)__pyx_pw_11pybInkscape_11PYSPDesktop_9setCurrentLayer, METH_O, 0},
  {"currentLayer", (PyCFunction)__pyx_pw_11pybInkscape_11PYSPDesktop_11currentLayer, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYSPDesktop = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSPDesktop", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSPDesktop), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSPDesktop, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_11pybInkscape_11PYSPDesktop_15__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYSPDesktop, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSPDesktop, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYInkscape(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYInkscape(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYInkscape[] = {
  {"get_all_desktops", (PyCFunction)__pyx_pw_11pybInkscape_10PYInkscape_3get_all_desktops, METH_NOARGS, 0},
  {"active_document", (PyCFunction)__pyx_pw_11pybInkscape_10PYInkscape_5active_document, METH_NOARGS, 0},
  {"active_desktop", (PyCFunction)__pyx_pw_11pybInkscape_10PYInkscape_7active_desktop, METH_NOARGS, 0},
  {"refresh_display", (PyCFunction)__pyx_pw_11pybInkscape_10PYInkscape_9refresh_display, METH_NOARGS, 0},
  {"exit", (PyCFunction)__pyx_pw_11pybInkscape_10PYInkscape_11exit, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYInkscape = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYInkscape", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYInkscape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYInkscape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYInkscape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pybInkscape_10PYInkscape_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYInkscape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYSPAction(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_11pybInkscape_10PYSPAction_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYSPAction(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYSPAction[] = {
  {"perform", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPAction_3perform, METH_NOARGS, 0},
  {"set_active", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPAction_5set_active, METH_O, 0},
  {"set_sensitive", (PyCFunction)__pyx_pw_11pybInkscape_10PYSPAction_7set_sensitive, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYSPAction = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYSPAction", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYSPAction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYSPAction, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYSPAction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYSPAction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_PYVerb(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_11pybInkscape_6PYVerb_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_PYVerb(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pybInkscape_PYVerb[] = {
  {"get_action", (PyCFunction)__pyx_pw_11pybInkscape_6PYVerb_3get_action, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_PYVerb = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.PYVerb", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_PYVerb), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_PYVerb, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_PYVerb, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_PYVerb, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pybInkscape_Slot(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pybInkscape_Slot *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pybInkscape_Slot *)o);
  p->callback = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_11pybInkscape_4Slot_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape_Slot(PyObject *o) {
  struct __pyx_obj_11pybInkscape_Slot *p = (struct __pyx_obj_11pybInkscape_Slot *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_11pybInkscape_4Slot_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->callback);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11pybInkscape_Slot(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape_Slot *p = (struct __pyx_obj_11pybInkscape_Slot *)o;
  if (p->callback) {
    e = (*v)(p->callback, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape_Slot(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape_Slot *p = (struct __pyx_obj_11pybInkscape_Slot *)o;
  tmp = ((PyObject*)p->callback);
  p->callback = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11pybInkscape_4Slot_callback(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pybInkscape_4Slot_8callback_1__get__(o);
}

static int __pyx_setprop_11pybInkscape_4Slot_callback(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pybInkscape_4Slot_8callback_3__set__(o, v);
  }
  else {
    return __pyx_pw_11pybInkscape_4Slot_8callback_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11pybInkscape_Slot[] = {
  {"desktop_callback", (PyCFunction)__pyx_pw_11pybInkscape_4Slot_5desktop_callback, METH_O, 0},
  {"selection_callback", (PyCFunction)__pyx_pw_11pybInkscape_4Slot_7selection_callback, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11pybInkscape_Slot[] = {
  {(char *)"callback", __pyx_getprop_11pybInkscape_4Slot_callback, __pyx_setprop_11pybInkscape_4Slot_callback, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pybInkscape_Slot = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.Slot", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape_Slot), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape_Slot, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape_Slot, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape_Slot, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pybInkscape_Slot, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11pybInkscape_Slot, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape_Slot, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *__pyx_freelist_11pybInkscape___pyx_scope_struct__unserattrib[8];
static int __pyx_freecount_11pybInkscape___pyx_scope_struct__unserattrib = 0;

static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct__unserattrib(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pybInkscape___pyx_scope_struct__unserattrib > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib)))) {
    o = (PyObject*)__pyx_freelist_11pybInkscape___pyx_scope_struct__unserattrib[--__pyx_freecount_11pybInkscape___pyx_scope_struct__unserattrib];
    memset(o, 0, sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct__unserattrib(PyObject *o) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_attrib);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pybInkscape___pyx_scope_struct__unserattrib < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib)))) {
    __pyx_freelist_11pybInkscape___pyx_scope_struct__unserattrib[__pyx_freecount_11pybInkscape___pyx_scope_struct__unserattrib++] = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pybInkscape___pyx_scope_struct__unserattrib(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *)o;
  if (p->__pyx_v_attrib) {
    e = (*v)(p->__pyx_v_attrib, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape___pyx_scope_struct__unserattrib(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *)o;
  tmp = ((PyObject*)p->__pyx_v_attrib);
  p->__pyx_v_attrib = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pybInkscape___pyx_scope_struct__unserattrib = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.__pyx_scope_struct__unserattrib", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct__unserattrib, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape___pyx_scope_struct__unserattrib, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape___pyx_scope_struct__unserattrib, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape___pyx_scope_struct__unserattrib, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *__pyx_freelist_11pybInkscape___pyx_scope_struct_1_genexpr[8];
static int __pyx_freecount_11pybInkscape___pyx_scope_struct_1_genexpr = 0;

static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct_1_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pybInkscape___pyx_scope_struct_1_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr)))) {
    o = (PyObject*)__pyx_freelist_11pybInkscape___pyx_scope_struct_1_genexpr[--__pyx_freecount_11pybInkscape___pyx_scope_struct_1_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct_1_genexpr(PyObject *o) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_subattrib);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pybInkscape___pyx_scope_struct_1_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr)))) {
    __pyx_freelist_11pybInkscape___pyx_scope_struct_1_genexpr[__pyx_freecount_11pybInkscape___pyx_scope_struct_1_genexpr++] = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pybInkscape___pyx_scope_struct_1_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_subattrib) {
    e = (*v)(p->__pyx_v_subattrib, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape___pyx_scope_struct_1_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct__unserattrib *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_subattrib);
  p->__pyx_v_subattrib = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pybInkscape___pyx_scope_struct_1_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.__pyx_scope_struct_1_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_1_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct_1_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape___pyx_scope_struct_1_genexpr, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape___pyx_scope_struct_1_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape___pyx_scope_struct_1_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *__pyx_freelist_11pybInkscape___pyx_scope_struct_2_serattrib[8];
static int __pyx_freecount_11pybInkscape___pyx_scope_struct_2_serattrib = 0;

static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct_2_serattrib(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pybInkscape___pyx_scope_struct_2_serattrib > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib)))) {
    o = (PyObject*)__pyx_freelist_11pybInkscape___pyx_scope_struct_2_serattrib[--__pyx_freecount_11pybInkscape___pyx_scope_struct_2_serattrib];
    memset(o, 0, sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct_2_serattrib(PyObject *o) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_d);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pybInkscape___pyx_scope_struct_2_serattrib < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib)))) {
    __pyx_freelist_11pybInkscape___pyx_scope_struct_2_serattrib[__pyx_freecount_11pybInkscape___pyx_scope_struct_2_serattrib++] = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pybInkscape___pyx_scope_struct_2_serattrib(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *)o;
  if (p->__pyx_v_d) {
    e = (*v)(p->__pyx_v_d, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape___pyx_scope_struct_2_serattrib(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *)o;
  tmp = ((PyObject*)p->__pyx_v_d);
  p->__pyx_v_d = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pybInkscape___pyx_scope_struct_2_serattrib = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.__pyx_scope_struct_2_serattrib", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct_2_serattrib, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape___pyx_scope_struct_2_serattrib, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape___pyx_scope_struct_2_serattrib, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape___pyx_scope_struct_2_serattrib, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *__pyx_freelist_11pybInkscape___pyx_scope_struct_3_genexpr[8];
static int __pyx_freecount_11pybInkscape___pyx_scope_struct_3_genexpr = 0;

static PyObject *__pyx_tp_new_11pybInkscape___pyx_scope_struct_3_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pybInkscape___pyx_scope_struct_3_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr)))) {
    o = (PyObject*)__pyx_freelist_11pybInkscape___pyx_scope_struct_3_genexpr[--__pyx_freecount_11pybInkscape___pyx_scope_struct_3_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct_3_genexpr(PyObject *o) {
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_item);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pybInkscape___pyx_scope_struct_3_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr)))) {
    __pyx_freelist_11pybInkscape___pyx_scope_struct_3_genexpr[__pyx_freecount_11pybInkscape___pyx_scope_struct_3_genexpr++] = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pybInkscape___pyx_scope_struct_3_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_item) {
    e = (*v)(p->__pyx_v_item, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pybInkscape___pyx_scope_struct_3_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_11pybInkscape___pyx_scope_struct_2_serattrib *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_item);
  p->__pyx_v_item = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pybInkscape___pyx_scope_struct_3_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pybInkscape.__pyx_scope_struct_3_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_11pybInkscape___pyx_scope_struct_3_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pybInkscape___pyx_scope_struct_3_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pybInkscape___pyx_scope_struct_3_genexpr, /*tp_traverse*/
  __pyx_tp_clear_11pybInkscape___pyx_scope_struct_3_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pybInkscape___pyx_scope_struct_3_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "pybInkscape",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_COMMENT_NODE, __pyx_k_COMMENT_NODE, sizeof(__pyx_k_COMMENT_NODE), 0, 0, 1, 1},
  {&__pyx_n_s_DOCKED_STATE, __pyx_k_DOCKED_STATE, sizeof(__pyx_k_DOCKED_STATE), 0, 0, 1, 1},
  {&__pyx_n_s_DOCUMENT_NODE, __pyx_k_DOCUMENT_NODE, sizeof(__pyx_k_DOCUMENT_NODE), 0, 0, 1, 1},
  {&__pyx_n_s_ELEMENT_NODE, __pyx_k_ELEMENT_NODE, sizeof(__pyx_k_ELEMENT_NODE), 0, 0, 1, 1},
  {&__pyx_n_s_FLOATING_STATE, __pyx_k_FLOATING_STATE, sizeof(__pyx_k_FLOATING_STATE), 0, 0, 1, 1},
  {&__pyx_n_s_GObjfromptr, __pyx_k_GObjfromptr, sizeof(__pyx_k_GObjfromptr), 0, 0, 1, 1},
  {&__pyx_n_s_GPointer_2_PYSPDesktop, __pyx_k_GPointer_2_PYSPDesktop, sizeof(__pyx_k_GPointer_2_PYSPDesktop), 0, 0, 1, 1},
  {&__pyx_n_s_ITEM_ST_DOCKED_STATE, __pyx_k_ITEM_ST_DOCKED_STATE, sizeof(__pyx_k_ITEM_ST_DOCKED_STATE), 0, 0, 1, 1},
  {&__pyx_n_s_ITEM_ST_FLOATING_STATE, __pyx_k_ITEM_ST_FLOATING_STATE, sizeof(__pyx_k_ITEM_ST_FLOATING_STATE), 0, 0, 1, 1},
  {&__pyx_n_s_ITEM_ST_UNATTACHED, __pyx_k_ITEM_ST_UNATTACHED, sizeof(__pyx_k_ITEM_ST_UNATTACHED), 0, 0, 1, 1},
  {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
  {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
  {&__pyx_kp_s_No_such_key_s, __pyx_k_No_such_key_s, sizeof(__pyx_k_No_such_key_s), 0, 0, 1, 0},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_PI_NODE, __pyx_k_PI_NODE, sizeof(__pyx_k_PI_NODE), 0, 0, 1, 1},
  {&__pyx_n_s_PyGObject_API, __pyx_k_PyGObject_API, sizeof(__pyx_k_PyGObject_API), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_TEXT_NODE, __pyx_k_TEXT_NODE, sizeof(__pyx_k_TEXT_NODE), 0, 0, 1, 1},
  {&__pyx_kp_s_Testing_1_2_3, __pyx_k_Testing_1_2_3, sizeof(__pyx_k_Testing_1_2_3), 0, 0, 1, 0},
  {&__pyx_n_s_UNATTACHED, __pyx_k_UNATTACHED, sizeof(__pyx_k_UNATTACHED), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_s_Wed_Jun_10_21_53_version, __pyx_k_Wed_Jun_10_21_53_version, sizeof(__pyx_k_Wed_Jun_10_21_53_version), 0, 0, 1, 0},
  {&__pyx_kp_s__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 0, 1, 0},
  {&__pyx_kp_s__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 0, 1, 0},
  {&__pyx_kp_s__8, __pyx_k__8, sizeof(__pyx_k__8), 0, 0, 1, 0},
  {&__pyx_n_s_activate_desktop, __pyx_k_activate_desktop, sizeof(__pyx_k_activate_desktop), 0, 0, 1, 1},
  {&__pyx_n_s_active_desktop, __pyx_k_active_desktop, sizeof(__pyx_k_active_desktop), 0, 0, 1, 1},
  {&__pyx_n_s_active_document, __pyx_k_active_document, sizeof(__pyx_k_active_document), 0, 0, 1, 1},
  {&__pyx_n_s_after, __pyx_k_after, sizeof(__pyx_k_after), 0, 0, 1, 1},
  {&__pyx_kp_s_an_PYNodeObserver_can_not_be_add, __pyx_k_an_PYNodeObserver_can_not_be_add, sizeof(__pyx_k_an_PYNodeObserver_can_not_be_add), 0, 0, 1, 0},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_attrib, __pyx_k_attrib, sizeof(__pyx_k_attrib), 0, 0, 1, 1},
  {&__pyx_n_s_attribute, __pyx_k_attribute, sizeof(__pyx_k_attribute), 0, 0, 1, 1},
  {&__pyx_n_s_attribute_changed, __pyx_k_attribute_changed, sizeof(__pyx_k_attribute_changed), 0, 0, 1, 1},
  {&__pyx_n_s_c_desktop, __pyx_k_c_desktop, sizeof(__pyx_k_c_desktop), 0, 0, 1, 1},
  {&__pyx_n_s_callback, __pyx_k_callback, sizeof(__pyx_k_callback), 0, 0, 1, 1},
  {&__pyx_kp_s_can_not_create_node, __pyx_k_can_not_create_node, sizeof(__pyx_k_can_not_create_node), 0, 0, 1, 0},
  {&__pyx_kp_s_cannot_create_an_element, __pyx_k_cannot_create_an_element, sizeof(__pyx_k_cannot_create_an_element), 0, 0, 1, 0},
  {&__pyx_n_s_change_selection, __pyx_k_change_selection, sizeof(__pyx_k_change_selection), 0, 0, 1, 1},
  {&__pyx_n_s_change_subselection, __pyx_k_change_subselection, sizeof(__pyx_k_change_subselection), 0, 0, 1, 1},
  {&__pyx_n_s_child, __pyx_k_child, sizeof(__pyx_k_child), 0, 0, 1, 1},
  {&__pyx_n_s_child_added, __pyx_k_child_added, sizeof(__pyx_k_child_added), 0, 0, 1, 1},
  {&__pyx_n_s_child_order_changed, __pyx_k_child_order_changed, sizeof(__pyx_k_child_order_changed), 0, 0, 1, 1},
  {&__pyx_n_s_child_removed, __pyx_k_child_removed, sizeof(__pyx_k_child_removed), 0, 0, 1, 1},
  {&__pyx_n_s_children, __pyx_k_children, sizeof(__pyx_k_children), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_co, __pyx_k_co, sizeof(__pyx_k_co), 0, 0, 1, 1},
  {&__pyx_n_s_connect, __pyx_k_connect, sizeof(__pyx_k_connect), 0, 0, 1, 1},
  {&__pyx_n_s_content, __pyx_k_content, sizeof(__pyx_k_content), 0, 0, 1, 1},
  {&__pyx_n_s_content_changed, __pyx_k_content_changed, sizeof(__pyx_k_content_changed), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_deactivate_desktop, __pyx_k_deactivate_desktop, sizeof(__pyx_k_deactivate_desktop), 0, 0, 1, 1},
  {&__pyx_n_s_default, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
  {&__pyx_n_s_description, __pyx_k_description, sizeof(__pyx_k_description), 0, 0, 1, 1},
  {&__pyx_n_s_desktop, __pyx_k_desktop, sizeof(__pyx_k_desktop), 0, 0, 1, 1},
  {&__pyx_n_s_desktop_callback, __pyx_k_desktop_callback, sizeof(__pyx_k_desktop_callback), 0, 0, 1, 1},
  {&__pyx_n_s_dialogs_hide, __pyx_k_dialogs_hide, sizeof(__pyx_k_dialogs_hide), 0, 0, 1, 1},
  {&__pyx_n_s_dialogs_unhide, __pyx_k_dialogs_unhide, sizeof(__pyx_k_dialogs_unhide), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_doc_co, __pyx_k_doc_co, sizeof(__pyx_k_doc_co), 0, 0, 1, 1},
  {&__pyx_n_s_dock, __pyx_k_dock, sizeof(__pyx_k_dock), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_event_type, __pyx_k_event_type, sizeof(__pyx_k_event_type), 0, 0, 1, 1},
  {&__pyx_n_s_external_change, __pyx_k_external_change, sizeof(__pyx_k_external_change), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_firstChild, __pyx_k_firstChild, sizeof(__pyx_k_firstChild), 0, 0, 1, 1},
  {&__pyx_n_s_flags, __pyx_k_flags, sizeof(__pyx_k_flags), 0, 0, 1, 1},
  {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_get_pyspdoc, __pyx_k_get_pyspdoc, sizeof(__pyx_k_get_pyspdoc), 0, 0, 1, 1},
  {&__pyx_n_s_getitem, __pyx_k_getitem, sizeof(__pyx_k_getitem), 0, 0, 1, 1},
  {&__pyx_n_s_getwrapper, __pyx_k_getwrapper, sizeof(__pyx_k_getwrapper), 0, 0, 1, 1},
  {&__pyx_n_s_gobject, __pyx_k_gobject, sizeof(__pyx_k_gobject), 0, 0, 1, 1},
  {&__pyx_n_s_icon_name, __pyx_k_icon_name, sizeof(__pyx_k_icon_name), 0, 0, 1, 1},
  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_inkscape, __pyx_k_inkscape, sizeof(__pyx_k_inkscape), 0, 0, 1, 1},
  {&__pyx_n_s_interactive, __pyx_k_interactive, sizeof(__pyx_k_interactive), 0, 0, 1, 1},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_join, __pyx_k_join, sizeof(__pyx_k_join), 0, 0, 1, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_long_name, __pyx_k_long_name, sizeof(__pyx_k_long_name), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_k_mnt_external_aur_inkscape_bzr_s, sizeof(__pyx_k_mnt_external_aur_inkscape_bzr_s), 0, 0, 1, 0},
  {&__pyx_n_s_modify_selection, __pyx_k_modify_selection, sizeof(__pyx_k_modify_selection), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_new_content, __pyx_k_new_content, sizeof(__pyx_k_new_content), 0, 0, 1, 1},
  {&__pyx_n_s_new_prev, __pyx_k_new_prev, sizeof(__pyx_k_new_prev), 0, 0, 1, 1},
  {&__pyx_n_s_new_value, __pyx_k_new_value, sizeof(__pyx_k_new_value), 0, 0, 1, 1},
  {&__pyx_n_s_next, __pyx_k_next, sizeof(__pyx_k_next), 0, 0, 1, 1},
  {&__pyx_n_s_node, __pyx_k_node, sizeof(__pyx_k_node), 0, 0, 1, 1},
  {&__pyx_kp_s_notifyAttributeChanged_is_not_im, __pyx_k_notifyAttributeChanged_is_not_im, sizeof(__pyx_k_notifyAttributeChanged_is_not_im), 0, 0, 1, 0},
  {&__pyx_kp_s_notifyChildAdded_is_not_implemen, __pyx_k_notifyChildAdded_is_not_implemen, sizeof(__pyx_k_notifyChildAdded_is_not_implemen), 0, 0, 1, 0},
  {&__pyx_kp_s_notifyChildOrderChanged_is_not_i, __pyx_k_notifyChildOrderChanged_is_not_i, sizeof(__pyx_k_notifyChildOrderChanged_is_not_i), 0, 0, 1, 0},
  {&__pyx_kp_s_notifyChildRemoved_is_not_implem, __pyx_k_notifyChildRemoved_is_not_implem, sizeof(__pyx_k_notifyChildRemoved_is_not_implem), 0, 0, 1, 0},
  {&__pyx_kp_s_notifyContentChanged_is_not_impl, __pyx_k_notifyContentChanged_is_not_impl, sizeof(__pyx_k_notifyContentChanged_is_not_impl), 0, 0, 1, 0},
  {&__pyx_n_s_notify_add_observer, __pyx_k_notify_add_observer, sizeof(__pyx_k_notify_add_observer), 0, 0, 1, 1},
  {&__pyx_n_s_old_content, __pyx_k_old_content, sizeof(__pyx_k_old_content), 0, 0, 1, 1},
  {&__pyx_n_s_old_prev, __pyx_k_old_prev, sizeof(__pyx_k_old_prev), 0, 0, 1, 1},
  {&__pyx_n_s_old_value, __pyx_k_old_value, sizeof(__pyx_k_old_value), 0, 0, 1, 1},
  {&__pyx_n_s_parent, __pyx_k_parent, sizeof(__pyx_k_parent), 0, 0, 1, 1},
  {&__pyx_n_s_prev, __pyx_k_prev, sizeof(__pyx_k_prev), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_property, __pyx_k_property, sizeof(__pyx_k_property), 0, 0, 1, 1},
  {&__pyx_n_s_ptr, __pyx_k_ptr, sizeof(__pyx_k_ptr), 0, 0, 1, 1},
  {&__pyx_n_s_ptr_co, __pyx_k_ptr_co, sizeof(__pyx_k_ptr_co), 0, 0, 1, 1},
  {&__pyx_n_s_pybInkscape, __pyx_k_pybInkscape, sizeof(__pyx_k_pybInkscape), 0, 0, 1, 1},
  {&__pyx_n_s_pybXML, __pyx_k_pybXML, sizeof(__pyx_k_pybXML), 0, 0, 1, 1},
  {&__pyx_n_s_pyspdoc, __pyx_k_pyspdoc, sizeof(__pyx_k_pyspdoc), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rdoc, __pyx_k_rdoc, sizeof(__pyx_k_rdoc), 0, 0, 1, 1},
  {&__pyx_n_s_repr, __pyx_k_repr, sizeof(__pyx_k_repr), 0, 0, 1, 1},
  {&__pyx_n_s_repr_2, __pyx_k_repr_2, sizeof(__pyx_k_repr_2), 0, 0, 1, 1},
  {&__pyx_n_s_root, __pyx_k_root, sizeof(__pyx_k_root), 0, 0, 1, 1},
  {&__pyx_n_s_selection, __pyx_k_selection, sizeof(__pyx_k_selection), 0, 0, 1, 1},
  {&__pyx_n_s_selection_callback, __pyx_k_selection_callback, sizeof(__pyx_k_selection_callback), 0, 0, 1, 1},
  {&__pyx_n_s_selection_changed, __pyx_k_selection_changed, sizeof(__pyx_k_selection_changed), 0, 0, 1, 1},
  {&__pyx_n_s_selection_co, __pyx_k_selection_co, sizeof(__pyx_k_selection_co), 0, 0, 1, 1},
  {&__pyx_n_s_selection_set, __pyx_k_selection_set, sizeof(__pyx_k_selection_set), 0, 0, 1, 1},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_serattrib, __pyx_k_serattrib, sizeof(__pyx_k_serattrib), 0, 0, 1, 1},
  {&__pyx_n_s_serattrib_locals_genexpr, __pyx_k_serattrib_locals_genexpr, sizeof(__pyx_k_serattrib_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_setAttribute, __pyx_k_setAttribute, sizeof(__pyx_k_setAttribute), 0, 0, 1, 1},
  {&__pyx_n_s_set_eventcontext, __pyx_k_set_eventcontext, sizeof(__pyx_k_set_eventcontext), 0, 0, 1, 1},
  {&__pyx_n_s_set_selection, __pyx_k_set_selection, sizeof(__pyx_k_set_selection), 0, 0, 1, 1},
  {&__pyx_n_s_setwrapper, __pyx_k_setwrapper, sizeof(__pyx_k_setwrapper), 0, 0, 1, 1},
  {&__pyx_n_s_shut_down, __pyx_k_shut_down, sizeof(__pyx_k_shut_down), 0, 0, 1, 1},
  {&__pyx_n_s_signal_name, __pyx_k_signal_name, sizeof(__pyx_k_signal_name), 0, 0, 1, 1},
  {&__pyx_n_s_signal_names, __pyx_k_signal_names, sizeof(__pyx_k_signal_names), 0, 0, 1, 1},
  {&__pyx_n_s_spdoc, __pyx_k_spdoc, sizeof(__pyx_k_spdoc), 0, 0, 1, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_src, __pyx_k_src, sizeof(__pyx_k_src), 0, 0, 1, 1},
  {&__pyx_n_s_startswith, __pyx_k_startswith, sizeof(__pyx_k_startswith), 0, 0, 1, 1},
  {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
  {&__pyx_kp_s_style, __pyx_k_style, sizeof(__pyx_k_style), 0, 0, 1, 0},
  {&__pyx_n_s_style_2, __pyx_k_style_2, sizeof(__pyx_k_style_2), 0, 0, 1, 1},
  {&__pyx_n_s_subselection_changed, __pyx_k_subselection_changed, sizeof(__pyx_k_subselection_changed), 0, 0, 1, 1},
  {&__pyx_n_s_target, __pyx_k_target, sizeof(__pyx_k_target), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_test_2, __pyx_k_test_2, sizeof(__pyx_k_test_2), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_kp_s_unknown_value, __pyx_k_unknown_value, sizeof(__pyx_k_unknown_value), 0, 0, 1, 0},
  {&__pyx_n_s_unserattrib, __pyx_k_unserattrib, sizeof(__pyx_k_unserattrib), 0, 0, 1, 1},
  {&__pyx_n_s_unserattrib_locals_genexpr, __pyx_k_unserattrib_locals_genexpr, sizeof(__pyx_k_unserattrib_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_verb, __pyx_k_verb, sizeof(__pyx_k_verb), 0, 0, 1, 1},
  {&__pyx_n_s_verb_co, __pyx_k_verb_co, sizeof(__pyx_k_verb_co), 0, 0, 1, 1},
  {&__pyx_n_s_verb_getbyid, __pyx_k_verb_getbyid, sizeof(__pyx_k_verb_getbyid), 0, 0, 1, 1},
  {&__pyx_n_s_version, __pyx_k_version, sizeof(__pyx_k_version), 0, 0, 1, 1},
  {&__pyx_n_s_wrapper, __pyx_k_wrapper, sizeof(__pyx_k_wrapper), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_property = __Pyx_GetBuiltinName(__pyx_n_s_property); if (!__pyx_builtin_property) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "pybInkscape.pyx":138
 * 
 *     def __getitem__(self, key):
 *         if key.startswith("style."):             # <<<<<<<<<<<<<<
 *             subkey = key[len("style."):]
 *             style = unserattrib(self["style"])
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_style); if (unlikely(!__pyx_tuple_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "pybInkscape.pyx":146
 * 
 *     def get(self, key, default=None):
 *         if key.startswith("style."):             # <<<<<<<<<<<<<<
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_style); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "pybInkscape.pyx":148
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))             # <<<<<<<<<<<<<<
 *             return style.get(subkey, default)
 *         else:
 */
  __pyx_tuple__4 = PyTuple_Pack(2, __pyx_n_s_style_2, __pyx_kp_s__3); if (unlikely(!__pyx_tuple__4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "pybInkscape.pyx":157
 * 
 *     def __setitem__(self, key, value):
 *         if key.startswith("style."):             # <<<<<<<<<<<<<<
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_style); if (unlikely(!__pyx_tuple__5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "pybInkscape.pyx":159
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))             # <<<<<<<<<<<<<<
 *             if value:
 *                 style[subkey] = value
 */
  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_n_s_style_2, __pyx_kp_s__3); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "pybInkscape.pyx":171
 *         if key.startswith("style."):
 *             subkey = key[len("style."):]
 *             style = unserattrib(self.get("style",""))             # <<<<<<<<<<<<<<
 *             del style[subkey]
 *             # Should auto-delete or not?
 */
  __pyx_tuple__7 = PyTuple_Pack(2, __pyx_n_s_style_2, __pyx_kp_s__3); if (unlikely(!__pyx_tuple__7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "pybInkscape.pyx":917
 * 
 * def unserattrib(attrib):
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)             # <<<<<<<<<<<<<<
 * 
 * def serattrib(d):
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s__8); if (unlikely(!__pyx_tuple__9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s__10); if (unlikely(!__pyx_tuple__11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "pybInkscape.pyx":771
 * #
 * # This is here
 * def verb_getbyid(bytes _id):             # <<<<<<<<<<<<<<
 *     _verb = pybVerb.pyb_verb_getbyid(<char *>_id)
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)
 */
  __pyx_tuple__12 = PyTuple_Pack(4, __pyx_n_s_id, __pyx_n_s_verb, __pyx_n_s_verb_co, __pyx_n_s_wrapper); if (unlikely(!__pyx_tuple__12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __pyx_codeobj__13 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__12, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_verb_getbyid, 771, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":866
 * # \param ptr is an PyGPointer.
 * #
 * def GPointer_2_PYSPDesktop(ptr):             # <<<<<<<<<<<<<<
 *     c_desktop = (<C_PyGPointer *>ptr).pointer
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)
 */
  __pyx_tuple__14 = PyTuple_Pack(4, __pyx_n_s_ptr, __pyx_n_s_c_desktop, __pyx_n_s_ptr_co, __pyx_n_s_desktop); if (unlikely(!__pyx_tuple__14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_codeobj__15 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_GPointer_2_PYSPDesktop, 866, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":872
 *     return desktop
 * 
 * def GObjfromptr(ptr):             # <<<<<<<<<<<<<<
 *     co = PyCObject_FromVoidPtr(<C_PyGPointer *>ptr, NULL)
 *     return co
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_n_s_ptr, __pyx_n_s_co); if (unlikely(!__pyx_tuple__16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);
  __pyx_codeobj__17 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__16, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_GObjfromptr, 872, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":916
 *     return wrapper
 * 
 * def unserattrib(attrib):             # <<<<<<<<<<<<<<
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 */
  __pyx_tuple__18 = PyTuple_Pack(3, __pyx_n_s_attrib, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_unserattrib, 916, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":919
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 * def serattrib(d):             # <<<<<<<<<<<<<<
 *     return ";".join(":".join(item) for item in d.items())
 * 
 */
  __pyx_tuple__20 = PyTuple_Pack(3, __pyx_n_s_d, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__20, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_serattrib, 919, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":922
 *     return ";".join(":".join(item) for item in d.items())
 * 
 * def test():             # <<<<<<<<<<<<<<
 *     print "Testing 1, 2, 3"
 * 
 */
  __pyx_codeobj__22 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_test, 922, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":925
 *     print "Testing 1, 2, 3"
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     print "Wed Jun 10 21:53 version"
 * 
 */
  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_version, 925, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pybInkscape.pyx":952
 *         self.callback(pyselection)
 * 
 * def connect(signal_name, callback):             # <<<<<<<<<<<<<<
 *     return Slot(signal_name, callback)
 * 
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_n_s_signal_name, __pyx_n_s_callback); if (unlikely(!__pyx_tuple__24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__24, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mnt_external_aur_inkscape_bzr_s, __pyx_n_s_connect, 952, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpybInkscape(void); /*proto*/
PyMODINIT_FUNC initpybInkscape(void)
#else
PyMODINIT_FUNC PyInit_pybInkscape(void); /*proto*/
PyMODINIT_FUNC PyInit_pybInkscape(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_pybInkscape(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("pybInkscape", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_pybInkscape) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "pybInkscape")) {
      if (unlikely(PyDict_SetItemString(modules, "pybInkscape", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYNodeObserver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYNodeObserver.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYNodeObserver", (PyObject *)&__pyx_type_11pybInkscape_PYNodeObserver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYNodeObserver = &__pyx_type_11pybInkscape_PYNodeObserver;
  __pyx_vtabptr_11pybInkscape_PYNode = &__pyx_vtable_11pybInkscape_PYNode;
  __pyx_vtable_11pybInkscape_PYNode._get_spitem = (SPItem *(*)(struct __pyx_obj_11pybInkscape_PYNode *))__pyx_f_11pybInkscape_6PYNode__get_spitem;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYNode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYNode.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pybInkscape_PYNode.tp_dict, __pyx_vtabptr_11pybInkscape_PYNode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PYNode", (PyObject *)&__pyx_type_11pybInkscape_PYNode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYNode = &__pyx_type_11pybInkscape_PYNode;
  __pyx_vtabptr_11pybInkscape_PYElementNode = &__pyx_vtable_11pybInkscape_PYElementNode;
  __pyx_vtable_11pybInkscape_PYElementNode.__pyx_base = *__pyx_vtabptr_11pybInkscape_PYNode;
  __pyx_type_11pybInkscape_PYElementNode.tp_base = __pyx_ptype_11pybInkscape_PYNode;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYElementNode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYElementNode.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pybInkscape_PYElementNode.tp_dict, __pyx_vtabptr_11pybInkscape_PYElementNode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PYElementNode", (PyObject *)&__pyx_type_11pybInkscape_PYElementNode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYElementNode = &__pyx_type_11pybInkscape_PYElementNode;
  __pyx_vtabptr_11pybInkscape_PYDocument = &__pyx_vtable_11pybInkscape_PYDocument;
  __pyx_vtable_11pybInkscape_PYDocument.__pyx_base = *__pyx_vtabptr_11pybInkscape_PYNode;
  __pyx_type_11pybInkscape_PYDocument.tp_base = __pyx_ptype_11pybInkscape_PYNode;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYDocument) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYDocument.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pybInkscape_PYDocument.tp_dict, __pyx_vtabptr_11pybInkscape_PYDocument) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PYDocument", (PyObject *)&__pyx_type_11pybInkscape_PYDocument) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYDocument = &__pyx_type_11pybInkscape_PYDocument;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSPDocument) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPDocument.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSPDocument", (PyObject *)&__pyx_type_11pybInkscape_PYSPDocument) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSPDocument = &__pyx_type_11pybInkscape_PYSPDocument;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSelection) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSelection.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSelection", (PyObject *)&__pyx_type_11pybInkscape_PYSelection) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSelection = &__pyx_type_11pybInkscape_PYSelection;
  __pyx_ptype_9pygobject_GObject = __Pyx_ImportType("gobject", "GObject", sizeof(PyGObject), 0); if (unlikely(!__pyx_ptype_9pygobject_GObject)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPObject.tp_base = __pyx_ptype_9pygobject_GObject;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSPObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPObject.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSPObject", (PyObject *)&__pyx_type_11pybInkscape_PYSPObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSPObject = &__pyx_type_11pybInkscape_PYSPObject;
  __pyx_type_11pybInkscape_PYSPItem.tp_base = __pyx_ptype_11pybInkscape_PYSPObject;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSPItem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPItem.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSPItem", (PyObject *)&__pyx_type_11pybInkscape_PYSPItem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSPItem = &__pyx_type_11pybInkscape_PYSPItem;
  __pyx_type_11pybInkscape_PYSPRoot.tp_base = __pyx_ptype_11pybInkscape_PYSPItem;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSPRoot) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPRoot.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSPRoot", (PyObject *)&__pyx_type_11pybInkscape_PYSPRoot) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSPRoot = &__pyx_type_11pybInkscape_PYSPRoot;
  __pyx_type_11pybInkscape_PYSPRect.tp_base = __pyx_ptype_11pybInkscape_PYSPItem;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSPRect) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPRect.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSPRect", (PyObject *)&__pyx_type_11pybInkscape_PYSPRect) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSPRect = &__pyx_type_11pybInkscape_PYSPRect;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYDock) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYDock.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYDock", (PyObject *)&__pyx_type_11pybInkscape_PYDock) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYDock = &__pyx_type_11pybInkscape_PYDock;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYDockItem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYDockItem.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYDockItem", (PyObject *)&__pyx_type_11pybInkscape_PYDockItem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYDockItem = &__pyx_type_11pybInkscape_PYDockItem;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYView.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYView", (PyObject *)&__pyx_type_11pybInkscape_PYView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYView = &__pyx_type_11pybInkscape_PYView;
  __pyx_type_11pybInkscape_PYSPDesktop.tp_base = __pyx_ptype_11pybInkscape_PYView;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSPDesktop) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPDesktop.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSPDesktop", (PyObject *)&__pyx_type_11pybInkscape_PYSPDesktop) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSPDesktop = &__pyx_type_11pybInkscape_PYSPDesktop;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYInkscape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYInkscape.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_11pybInkscape_PYInkscape, "__init__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_11pybInkscape_10PYInkscape___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_11pybInkscape_10PYInkscape___init__.doc = __pyx_doc_11pybInkscape_10PYInkscape___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_11pybInkscape_10PYInkscape___init__;
    }
  }
  #endif
  if (PyObject_SetAttrString(__pyx_m, "PYInkscape", (PyObject *)&__pyx_type_11pybInkscape_PYInkscape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYInkscape = &__pyx_type_11pybInkscape_PYInkscape;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYSPAction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYSPAction.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYSPAction", (PyObject *)&__pyx_type_11pybInkscape_PYSPAction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYSPAction = &__pyx_type_11pybInkscape_PYSPAction;
  if (PyType_Ready(&__pyx_type_11pybInkscape_PYVerb) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_PYVerb.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PYVerb", (PyObject *)&__pyx_type_11pybInkscape_PYVerb) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_PYVerb = &__pyx_type_11pybInkscape_PYVerb;
  if (PyType_Ready(&__pyx_type_11pybInkscape_Slot) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape_Slot.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Slot", (PyObject *)&__pyx_type_11pybInkscape_Slot) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pybInkscape_Slot = &__pyx_type_11pybInkscape_Slot;
  if (PyType_Ready(&__pyx_type_11pybInkscape___pyx_scope_struct__unserattrib) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape___pyx_scope_struct__unserattrib.tp_print = 0;
  __pyx_ptype_11pybInkscape___pyx_scope_struct__unserattrib = &__pyx_type_11pybInkscape___pyx_scope_struct__unserattrib;
  if (PyType_Ready(&__pyx_type_11pybInkscape___pyx_scope_struct_1_genexpr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape___pyx_scope_struct_1_genexpr.tp_print = 0;
  __pyx_ptype_11pybInkscape___pyx_scope_struct_1_genexpr = &__pyx_type_11pybInkscape___pyx_scope_struct_1_genexpr;
  if (PyType_Ready(&__pyx_type_11pybInkscape___pyx_scope_struct_2_serattrib) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape___pyx_scope_struct_2_serattrib.tp_print = 0;
  __pyx_ptype_11pybInkscape___pyx_scope_struct_2_serattrib = &__pyx_type_11pybInkscape___pyx_scope_struct_2_serattrib;
  if (PyType_Ready(&__pyx_type_11pybInkscape___pyx_scope_struct_3_genexpr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pybInkscape___pyx_scope_struct_3_genexpr.tp_print = 0;
  __pyx_ptype_11pybInkscape___pyx_scope_struct_3_genexpr = &__pyx_type_11pybInkscape___pyx_scope_struct_3_genexpr;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "pybInkscape.pyx":24
 * cimport pybgc
 * cimport pybindtools
 * import gobject             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_gobject, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_gobject, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pybInkscape.pyx":80
 *     cdef public object pystore
 * 
 *     DOCUMENT_NODE = 0             # <<<<<<<<<<<<<<
 *     ELEMENT_NODE = 1
 *     TEXT_NODE = 2
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_DOCUMENT_NODE, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":81
 * 
 *     DOCUMENT_NODE = 0
 *     ELEMENT_NODE = 1             # <<<<<<<<<<<<<<
 *     TEXT_NODE = 2
 *     COMMENT_NODE = 3
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_ELEMENT_NODE, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":82
 *     DOCUMENT_NODE = 0
 *     ELEMENT_NODE = 1
 *     TEXT_NODE = 2             # <<<<<<<<<<<<<<
 *     COMMENT_NODE = 3
 *     PI_NODE = 4
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_TEXT_NODE, __pyx_int_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":83
 *     ELEMENT_NODE = 1
 *     TEXT_NODE = 2
 *     COMMENT_NODE = 3             # <<<<<<<<<<<<<<
 *     PI_NODE = 4
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_COMMENT_NODE, __pyx_int_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":84
 *     TEXT_NODE = 2
 *     COMMENT_NODE = 3
 *     PI_NODE = 4             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, ptr_co, PYDocument doc, *args):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_PI_NODE, __pyx_int_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":225
 *         return obj
 * 
 *     wrapper = property(getwrapper, setwrapper)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYNode, __pyx_n_s_getwrapper); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYNode, __pyx_n_s_setwrapper); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_wrapper, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":228
 * 
 *     @property
 *     def doc(self):             # <<<<<<<<<<<<<<
 *         return self._doc
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYNode, __pyx_n_s_doc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":227
 *     wrapper = property(getwrapper, setwrapper)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def doc(self):
 *         return self._doc
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_doc, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":232
 * 
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYNode, __pyx_n_s_root); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":231
 *         return self._doc
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def root(self):
 *         root = self._thisptr.root()
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_root, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":237
 * 
 *     @property
 *     def parent(self):             # <<<<<<<<<<<<<<
 *         return wrapnode(self._thisptr.parent(), self._doc)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYNode, __pyx_n_s_parent); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":236
 *         return wrapnode(root, self._doc)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def parent(self):
 *         return wrapnode(self._thisptr.parent(), self._doc)
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_parent, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":252
 * 
 *     @property
 *     def children(self):             # <<<<<<<<<<<<<<
 *         children = []
 *         child = self.firstChild()
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYNode, __pyx_n_s_children); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":251
 *         return wrapnode(self._thisptr.lastChild(), self._doc)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def children(self):
 *         children = []
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYNode->tp_dict, __pyx_n_s_children, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYNode);

  /* "pybInkscape.pyx":385
 *     #
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.root()
 *         return wrapnode(root, self._doc)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYDocument, __pyx_n_s_root); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":384
 *     # object itself.
 *     #
 *     @property             # <<<<<<<<<<<<<<
 *     def root(self):
 *         root = self._thisptr.root()
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDocument->tp_dict, __pyx_n_s_root, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDocument);

  /* "pybInkscape.pyx":419
 * 
 *     @property
 *     def spdoc(self):             # <<<<<<<<<<<<<<
 *         return self._pyspdoc
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYDocument, __pyx_n_s_spdoc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":418
 *         return wrapnode(node, self._doc, True)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def spdoc(self):
 *         return self._pyspdoc
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDocument->tp_dict, __pyx_n_s_spdoc, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDocument);

  /* "pybInkscape.pyx":424
 * cdef class PYSPObject(GObject):
 *     @property
 *     def repr(self):             # <<<<<<<<<<<<<<
 *         if not hasattr(self, '_repr'):
 *             _thisptr = <pybSPDesktop.SPObject *>pygobject_get(self)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYSPObject, __pyx_n_s_repr_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":423
 * 
 * cdef class PYSPObject(GObject):
 *     @property             # <<<<<<<<<<<<<<
 *     def repr(self):
 *         if not hasattr(self, '_repr'):
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYSPObject->tp_dict, __pyx_n_s_repr_2, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYSPObject);

  /* "pybInkscape.pyx":513
 * 
 *     @property
 *     def rdoc(self):             # <<<<<<<<<<<<<<
 *         node = pybindtools.cast_Node(self._thisptr.rdoc)
 *         node_co = PyCObject_FromVoidPtr(node, NULL)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYSPDocument, __pyx_n_s_rdoc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":512
 *         self._thisptr = <pybSPDesktop.SPDocument *>PyCObject_AsVoidPtr(ptr_co)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def rdoc(self):
 *         node = pybindtools.cast_Node(self._thisptr.rdoc)
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYSPDocument->tp_dict, __pyx_n_s_rdoc, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYSPDocument);

  /* "pybInkscape.pyx":523
 * 
 *     @property
 *     def root(self):             # <<<<<<<<<<<<<<
 *         root = self._thisptr.getRoot()
 *         wrapper = wrapobj(root)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYSPDocument, __pyx_n_s_root); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":522
 *         return wrapper
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def root(self):
 *         root = self._thisptr.getRoot()
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYSPDocument->tp_dict, __pyx_n_s_root, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYSPDocument);

  /* "pybInkscape.pyx":568
 *     cdef pybSPDesktop.DockItem *_thisptr
 * 
 *     UNATTACHED=0             # <<<<<<<<<<<<<<
 *     FLOATING_STATE=1
 *     DOCKED_STATE=2
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDockItem->tp_dict, __pyx_n_s_UNATTACHED, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDockItem);

  /* "pybInkscape.pyx":569
 * 
 *     UNATTACHED=0
 *     FLOATING_STATE=1             # <<<<<<<<<<<<<<
 *     DOCKED_STATE=2
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDockItem->tp_dict, __pyx_n_s_FLOATING_STATE, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDockItem);

  /* "pybInkscape.pyx":570
 *     UNATTACHED=0
 *     FLOATING_STATE=1
 *     DOCKED_STATE=2             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, PYDock dock, bytes name, bytes long_name,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDockItem->tp_dict, __pyx_n_s_DOCKED_STATE, __pyx_int_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDockItem);

  /* "pybInkscape.pyx":611
 *     cdef pybSPDesktop.Dock *_thisptr
 * 
 *     ITEM_ST_UNATTACHED=0             # <<<<<<<<<<<<<<
 *     ITEM_ST_FLOATING_STATE=1
 *     ITEM_ST_DOCKED_STATE=2
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDock->tp_dict, __pyx_n_s_ITEM_ST_UNATTACHED, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDock);

  /* "pybInkscape.pyx":612
 * 
 *     ITEM_ST_UNATTACHED=0
 *     ITEM_ST_FLOATING_STATE=1             # <<<<<<<<<<<<<<
 *     ITEM_ST_DOCKED_STATE=2
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDock->tp_dict, __pyx_n_s_ITEM_ST_FLOATING_STATE, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDock);

  /* "pybInkscape.pyx":613
 *     ITEM_ST_UNATTACHED=0
 *     ITEM_ST_FLOATING_STATE=1
 *     ITEM_ST_DOCKED_STATE=2             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, ptr):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYDock->tp_dict, __pyx_n_s_ITEM_ST_DOCKED_STATE, __pyx_int_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_11pybInkscape_PYDock);

  /* "pybInkscape.pyx":633
 * cdef class PYSPDesktop(PYView):
 *     @property
 *     def selection(self):             # <<<<<<<<<<<<<<
 *         sel = self._thisptr.selection
 *         return wrapsel(sel)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYSPDesktop, __pyx_n_s_selection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":632
 * 
 * cdef class PYSPDesktop(PYView):
 *     @property             # <<<<<<<<<<<<<<
 *     def selection(self):
 *         sel = self._thisptr.selection
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYSPDesktop->tp_dict, __pyx_n_s_selection, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYSPDesktop);

  /* "pybInkscape.pyx":638
 * 
 *     @property
 *     def doc(self):             # <<<<<<<<<<<<<<
 *         doc = self._thisptr.doc()
 *         return wrapdoc(doc)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYSPDesktop, __pyx_n_s_doc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":637
 *         return wrapsel(sel)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def doc(self):
 *         doc = self._thisptr.doc()
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYSPDesktop->tp_dict, __pyx_n_s_doc, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYSPDesktop);

  /* "pybInkscape.pyx":685
 *     cdef Application *_thisptr
 *     #To add
 *     signal_names = ['modify_selection', 'change_selection',             # <<<<<<<<<<<<<<
 *                     'change_subselection', 'set_selection',
 *                     'set_eventcontext', 'activate_desktop',
 */
  __pyx_t_2 = PyList_New(11); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_modify_selection);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_modify_selection);
  __Pyx_GIVEREF(__pyx_n_s_modify_selection);
  __Pyx_INCREF(__pyx_n_s_change_selection);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_change_selection);
  __Pyx_GIVEREF(__pyx_n_s_change_selection);
  __Pyx_INCREF(__pyx_n_s_change_subselection);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_change_subselection);
  __Pyx_GIVEREF(__pyx_n_s_change_subselection);
  __Pyx_INCREF(__pyx_n_s_set_selection);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_set_selection);
  __Pyx_GIVEREF(__pyx_n_s_set_selection);
  __Pyx_INCREF(__pyx_n_s_set_eventcontext);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_set_eventcontext);
  __Pyx_GIVEREF(__pyx_n_s_set_eventcontext);
  __Pyx_INCREF(__pyx_n_s_activate_desktop);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_activate_desktop);
  __Pyx_GIVEREF(__pyx_n_s_activate_desktop);
  __Pyx_INCREF(__pyx_n_s_deactivate_desktop);
  PyList_SET_ITEM(__pyx_t_2, 6, __pyx_n_s_deactivate_desktop);
  __Pyx_GIVEREF(__pyx_n_s_deactivate_desktop);
  __Pyx_INCREF(__pyx_n_s_shut_down);
  PyList_SET_ITEM(__pyx_t_2, 7, __pyx_n_s_shut_down);
  __Pyx_GIVEREF(__pyx_n_s_shut_down);
  __Pyx_INCREF(__pyx_n_s_dialogs_hide);
  PyList_SET_ITEM(__pyx_t_2, 8, __pyx_n_s_dialogs_hide);
  __Pyx_GIVEREF(__pyx_n_s_dialogs_hide);
  __Pyx_INCREF(__pyx_n_s_dialogs_unhide);
  PyList_SET_ITEM(__pyx_t_2, 9, __pyx_n_s_dialogs_unhide);
  __Pyx_GIVEREF(__pyx_n_s_dialogs_unhide);
  __Pyx_INCREF(__pyx_n_s_external_change);
  PyList_SET_ITEM(__pyx_t_2, 10, __pyx_n_s_external_change);
  __Pyx_GIVEREF(__pyx_n_s_external_change);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYInkscape->tp_dict, __pyx_n_s_signal_names, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYInkscape);

  /* "pybInkscape.pyx":717
 * 
 *     @property
 *     def active_document(self):             # <<<<<<<<<<<<<<
 *         spdoc_co = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL)
 *         pyspdoc = PYSPDocument(spdoc_co)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYInkscape, __pyx_n_s_active_document); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":716
 *         return ret
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def active_document(self):
 *         spdoc_co = PyCObject_FromVoidPtr(SP_ACTIVE_DOCUMENT, NULL)
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYInkscape->tp_dict, __pyx_n_s_active_document, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYInkscape);

  /* "pybInkscape.pyx":723
 * 
 *     @property
 *     def active_desktop(self):             # <<<<<<<<<<<<<<
 *         dsk_co = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL)
 *         dsk = PYSPDesktop(dsk_co)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pybInkscape_PYInkscape, __pyx_n_s_active_desktop); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pybInkscape.pyx":722
 *         return pyspdoc
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def active_desktop(self):
 *         dsk_co = PyCObject_FromVoidPtr(SP_ACTIVE_DESKTOP, NULL)
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pybInkscape_PYInkscape->tp_dict, __pyx_n_s_active_desktop, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11pybInkscape_PYInkscape);

  /* "pybInkscape.pyx":771
 * #
 * # This is here
 * def verb_getbyid(bytes _id):             # <<<<<<<<<<<<<<
 *     _verb = pybVerb.pyb_verb_getbyid(<char *>_id)
 *     _verb_co = PyCObject_FromVoidPtr(_verb, NULL)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_1verb_getbyid, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_verb_getbyid, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":866
 * # \param ptr is an PyGPointer.
 * #
 * def GPointer_2_PYSPDesktop(ptr):             # <<<<<<<<<<<<<<
 *     c_desktop = (<C_PyGPointer *>ptr).pointer
 *     ptr_co = PyCObject_FromVoidPtr(c_desktop, NULL)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_3GPointer_2_PYSPDesktop, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GPointer_2_PYSPDesktop, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":872
 *     return desktop
 * 
 * def GObjfromptr(ptr):             # <<<<<<<<<<<<<<
 *     co = PyCObject_FromVoidPtr(<C_PyGPointer *>ptr, NULL)
 *     return co
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_5GObjfromptr, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GObjfromptr, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":916
 *     return wrapper
 * 
 * def unserattrib(attrib):             # <<<<<<<<<<<<<<
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_7unserattrib, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_unserattrib, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":919
 *     return dict(subattrib.split(":") for subattrib in attrib.split(";") if subattrib)
 * 
 * def serattrib(d):             # <<<<<<<<<<<<<<
 *     return ";".join(":".join(item) for item in d.items())
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_9serattrib, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_serattrib, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":922
 *     return ";".join(":".join(item) for item in d.items())
 * 
 * def test():             # <<<<<<<<<<<<<<
 *     print "Testing 1, 2, 3"
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_11test, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":925
 *     print "Testing 1, 2, 3"
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     print "Wed Jun 10 21:53 version"
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_13version, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_version, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":952
 *         self.callback(pyselection)
 * 
 * def connect(signal_name, callback):             # <<<<<<<<<<<<<<
 *     return Slot(signal_name, callback)
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11pybInkscape_15connect, NULL, __pyx_n_s_pybInkscape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_connect, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":964
 * cdef _PyGObject_Functions *gobj_api
 * 
 * inkscape = _create_inkscape_wrapper()             # <<<<<<<<<<<<<<
 */
  __pyx_t_2 = __pyx_f_11pybInkscape__create_inkscape_wrapper(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_inkscape, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pybInkscape.pyx":1
 * # -*- mode: python; indnent-tabs-mode: t; tab-width: 8; c-basic-offset: 4; -*-             # <<<<<<<<<<<<<<
 * # vim: sw=4:ts=8:sts=4
 * cimport pybSPDesktop
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test_2, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_const__gchar___2a_")
 * cdef object __pyx_convert_vector_to_py_const__gchar___2a_(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init pybInkscape", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pybInkscape");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                if (PyObject_IsSubclass(instance_class, type)) {
                    type = instance_class;
                } else {
                    instance_class = NULL;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(tmp_type, tmp_value, tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (PyErr_ExceptionMatches(PyExc_OverflowError))
                    PyErr_Clear();
                else
                    goto bad;
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_COMPILING_IN_CPYTHON
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
#else
    PyErr_GetExcInfo(type, value, tb);
#endif
}
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(type, value, tb);
#endif
}

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

#if !CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values) {
    return PyObject_CallMethodObjArgs(sep, __pyx_n_s_join, values, NULL);
}
#endif

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_dealloc != current_tp_dealloc)
        type = type->tp_base;
    while (type && type->tp_dealloc == current_tp_dealloc)
        type = type->tp_base;
    if (type)
        type->tp_dealloc(obj);
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)       \
    {                                                                     \
        func_type value = func_value;                                     \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                if (is_unsigned && unlikely(value < zero))                \
                    goto raise_neg_overflow;                              \
                else                                                      \
                    goto raise_overflow;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE GQuark __Pyx_PyInt_As_GQuark(PyObject *x) {
    const GQuark neg_one = (GQuark) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(GQuark) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(GQuark, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (GQuark) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(GQuark, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(GQuark) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(GQuark, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(GQuark) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(GQuark, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(GQuark,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(GQuark, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(GQuark) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(GQuark, long, PyLong_AsLong(x))
            } else if (sizeof(GQuark) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(GQuark, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            GQuark val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (GQuark) -1;
        }
    } else {
        GQuark val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (GQuark) -1;
        val = __Pyx_PyInt_As_GQuark(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to GQuark");
    return (GQuark) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to GQuark");
    return (GQuark) -1;
}

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
#else
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
#endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            args = PyTuple_New(2);
            if (unlikely(!args)) goto bad;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
bad:
    Py_XDECREF(method);
    return result;
}

static PyObject *__Pyx_Generator_Next(PyObject *self);
static PyObject *__Pyx_Generator_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Generator_Close(PyObject *self);
static PyObject *__Pyx_Generator_Throw(PyObject *gen, PyObject *args);
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (unlikely(et != PyExc_StopIteration) &&
            unlikely(!PyErr_GivenExceptionMatches(et, PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (likely(!ev) || !PyObject_IsInstance(ev, PyExc_StopIteration)) {
            if (!ev) {
                Py_INCREF(Py_None);
                ev = Py_None;
            }
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = ev;
            return 0;
        }
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_IsInstance(ev, PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = PyObject_GetAttr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PyObject_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
#endif
static CYTHON_INLINE
void __Pyx_Generator_ExceptionClear(__pyx_GeneratorObject *self) {
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
static CYTHON_INLINE
int __Pyx_Generator_CheckRunning(__pyx_GeneratorObject *gen) {
    if (unlikely(gen->is_running)) {
        PyErr_SetString(PyExc_ValueError,
                        "generator already executing");
        return 1;
    }
    return 0;
}
static CYTHON_INLINE
PyObject *__Pyx_Generator_SendEx(__pyx_GeneratorObject *self, PyObject *value) {
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            PyErr_SetString(PyExc_TypeError,
                            "can't send non-None value to a "
                            "just-started generator");
            return NULL;
        }
    }
    if (unlikely(self->resume_label == -1)) {
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
    if (value) {
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyThreadState *tstate = PyThreadState_GET();
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
#endif
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
    } else {
        __Pyx_Generator_ExceptionClear(self);
    }
    self->is_running = 1;
    retval = self->body((PyObject *) self, value);
    self->is_running = 0;
    if (retval) {
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_CLEAR(f->f_back);
        }
#endif
    } else {
        __Pyx_Generator_ExceptionClear(self);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Generator_FinishDelegation(__pyx_GeneratorObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Generator_Undelegate(gen);
    __Pyx_PyGen_FetchStopIterationValue(&val);
    ret = __Pyx_Generator_SendEx(gen, val);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Generator_FinishDelegation(gen);
    }
    return __Pyx_Generator_SendEx(gen, Py_None);
}
static PyObject *__Pyx_Generator_Send(PyObject *self, PyObject *value) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Send(yf, value);
        } else {
            if (value == Py_None)
                ret = PyIter_Next(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Generator_FinishDelegation(gen);
    }
    return __Pyx_Generator_SendEx(gen, value);
}
static int __Pyx_Generator_CloseIter(__pyx_GeneratorObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Generator_Close(yf);
        if (!retval)
            return -1;
    } else {
        PyObject *meth;
        gen->is_running = 1;
        meth = PyObject_GetAttr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Close(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Generator_CloseIter(gen, yf);
        __Pyx_Generator_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Generator_SendEx(gen, NULL);
    if (retval) {
        Py_DECREF(retval);
        PyErr_SetString(PyExc_RuntimeError,
                        "generator ignored GeneratorExit");
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (!raised_exception
        || raised_exception == PyExc_StopIteration
        || raised_exception == PyExc_GeneratorExit
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_GeneratorExit)
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_StopIteration))
    {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx_Generator_Throw(PyObject *self, PyObject *args) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    PyObject *typ;
    PyObject *tb = NULL;
    PyObject *val = NULL;
    PyObject *yf = gen->yieldfrom;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit)) {
            int err = __Pyx_Generator_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Generator_Undelegate(gen);
            if (err < 0)
                return __Pyx_Generator_SendEx(gen, NULL);
            goto throw_here;
        }
        gen->is_running = 1;
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Throw(yf, args);
        } else {
            PyObject *meth = PyObject_GetAttr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Generator_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            ret = PyObject_CallObject(meth, args);
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Generator_FinishDelegation(gen);
        }
        return ret;
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Generator_SendEx(gen, NULL);
}
static int __Pyx_Generator_traverse(PyObject *self, visitproc visit, void *arg) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static int __Pyx_Generator_clear(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    return 0;
}
static void __Pyx_Generator_dealloc(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label > 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
    __Pyx_Generator_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Generator_del(PyObject *self) {
    PyObject *res;
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    if (gen->resume_label <= 0)
        return ;
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
    res = __Pyx_Generator_Close(self);
    if (res == NULL)
        PyErr_WriteUnraisable(self);
    else
        Py_DECREF(res);
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Generator_get_name(__pyx_GeneratorObject *self)
{
    Py_INCREF(self->gi_name);
    return self->gi_name;
}
static int
__Pyx_Generator_set_name(__pyx_GeneratorObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Generator_get_qualname(__pyx_GeneratorObject *self)
{
    Py_INCREF(self->gi_qualname);
    return self->gi_qualname;
}
static int
__Pyx_Generator_set_qualname(__pyx_GeneratorObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Generator_get_name, (setter)__Pyx_Generator_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Generator_get_qualname, (setter)__Pyx_Generator_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_GeneratorObject, is_running), READONLY, NULL},
    {0, 0, 0, 0, 0}
};
static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Generator_Send, METH_O, 0},
    {"throw", (PyCFunction) __Pyx_Generator_Throw, METH_VARARGS, 0},
    {"close", (PyCFunction) __Pyx_Generator_Close, METH_NOARGS, 0},
    {0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_GeneratorObject),
    0,
    (destructor) __Pyx_Generator_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Generator_traverse,
    0,
    0,
    offsetof(__pyx_GeneratorObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#else
    __Pyx_Generator_del,
#endif
    0,
#if PY_VERSION_HEX >= 0x030400a1
    __Pyx_Generator_del,
#endif
};
static __pyx_GeneratorObject *__Pyx_Generator_New(__pyx_generator_body_t body,
                                                  PyObject *closure, PyObject *name, PyObject *qualname) {
    __pyx_GeneratorObject *gen =
        PyObject_GC_New(__pyx_GeneratorObject, &__pyx_GeneratorType_type);
    if (gen == NULL)
        return NULL;
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    PyObject_GC_Track(gen);
    return gen;
}
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = PyObject_GenericGetAttr;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (__pyx_GeneratorType == NULL) {
        return -1;
    }
    return 0;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if !CYTHON_COMPILING_IN_PYPY
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b)))
      return PyInt_AS_LONG(b);
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
     #if CYTHON_USE_PYLONG_INTERNALS
       switch (Py_SIZE(b)) {
       case -1: return -(sdigit)((PyLongObject*)b)->ob_digit[0];
       case  0: return 0;
       case  1: return ((PyLongObject*)b)->ob_digit[0];
       }
     #endif
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
